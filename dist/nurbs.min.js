!function(){var e=X3D.define,t=X3D.require;e("x_ite/Components/NURBS/Contour2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function s(e){n.call(this,e),this.addType(r.Contour2D)}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOnly,"addChildren",new e.MFNode),new t(r.inputOnly,"removeChildren",new e.MFNode),new t(r.inputOutput,"children",new e.MFNode)]),getTypeName:function(){return"Contour2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"trimmingContour"}}),s}),e("x_ite/Components/NURBS/X3DNurbsControlCurveNode",["x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants"],function(e,t){"use strict";function i(i){e.call(this,i),this.addType(t.X3DNurbsControlCurveNode)}return i.prototype=Object.assign(Object.create(e.prototype),{constructor:i}),i}),e("x_ite/Components/NURBS/ContourPolyline2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function s(e){n.call(this,e),this.addType(r.ContourPolyline2D)}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"controlPoint",new e.MFVec2d)]),getTypeName:function(){return"ContourPolyline2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},tessellate:function(e){var t=this.controlPoint_,i=[];if(e)for(var n=0,r=t.length;n<r;++n){var s=t[n];i.push(s.x,0,s.y)}else for(var n=0,r=t.length;n<r;++n){var s=t[n];i.push(s.x,s.y)}return i}}),s}),e("x_ite/Components/NURBS/CoordinateDouble",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Rendering/X3DCoordinateNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function s(e){n.call(this,e),this.addType(r.CoordinateDouble)}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"point",new e.MFVec3d)]),getTypeName:function(){return"CoordinateDouble"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"coord"}}),s}),e("x_ite/Browser/NURBS/NURBS",["standard/Math/Numbers/Vector3"],function(e){"use strict";return{getTessellation:function(e,t){return e>0?e+1:e<0?-e*t+1:2*t+1},getClosed2D:function(e,t,i,n){var r=n.length;return!(i.length===r&&i[0]!==i[r-1]||!n[0].equals(n[r-1])||!this.isPeriodic(e,r,t))},getClosed:function(){var t=new e(0,0,0),i=new e(0,0,0);return function(e,n,r,s){var o=s.getSize();return!(r.length===o&&r[0]!==r[o-1]||!s.get1Point(0,t).equals(s.get1Point(o-1,i))||!this.isPeriodic(e,o,n))}}(),getUClosed:function(){var t=new e(0,0,0),i=new e(0,0,0);return function(e,n,r,s,o,u){for(var a=o.length===u.getSize(),l=0,h=r;l<h;++l){var c=l*n,d=l*n+n-1;if(a&&o[c]!==o[d])return!1;if(!u.get1Point(c,t).equals(u.get1Point(d,i)))return!1}return!!this.isPeriodic(e,n,s)}}(),getVClosed:function(){var t=new e(0,0,0),i=new e(0,0,0);return function(e,n,r,s,o,u){for(var a=o.length===u.getSize(),l=0,h=n;l<h;++l){var c=l,d=(r-1)*n+l;if(a&&o[c]!==o[d])return!1;if(!u.get1Point(c,t).equals(u.get1Point(d,i)))return!1}return!!this.isPeriodic(e,r,s)}}(),isPeriodic:function(e,t,i){if(i.length===t+e){for(var n=1,r=1,s=e;r<s;++r)n+=i[r]===i[0];if(n===e)return!1;for(var n=1,r=i.length-e,s=i.length-1;r<s;++r)n+=i[r]===i[s];if(n===e)return!1}return!0},getKnots:function(e,t,i,n){for(var r=[],s=0,o=n.length;s<o;++s)r.push(n[s]);var u=!0;if(r.length===i+t){u=!1;for(var a=0,s=1,o=r.length;s<o;++s)r[s]==r[s-1]?++a:a=0,a>t-1&&(u=!0),r[s-1]>r[s]&&(u=!0)}if(u)for(var s=0,o=i+t;s<o;++s)r[s]=s/(o-1);if(e)for(var s=1,o=t-1;s<o;++s)r.push(r[r.length-1]+(r[s]-r[s-1]));return r},getWeights:function(e,t,i,n){if(n.length===i){for(var r=[],s=0;s<i;++s)r.push(n[s]);if(e)for(var s=1,o=t-1;s<o;++s)r.push(r[s]);return r}},getUVWeights:function(e,t,i,n,r,s,o){if(o.length===r*s){for(var u=[],a=0;a<r;++a){var l=[];u.push(l);for(var h=0;h<s;++h)l.push(o[h*r+a]);if(t)for(var c=1,d=n-1;c<d;++c)l.push(l[c])}if(e)for(var c=1,d=i-1;c<d;++c)u.push(u[c]);return u}},getControlPoints2D:function(){new e(0,0,0);return function(e,t,i){for(var n=[],r=i.length,s=0;s<r;++s){var o=i[s];n.push([o.x,o.y,0])}if(e)for(var s=1,u=t-1;s<u;++s)n.push(n[s]);return n}}(),getControlPoints:function(){var t=new e(0,0,0);return function(e,i,n){for(var r=[],s=n.getSize(),o=0;o<s;++o)r.push(Array.prototype.slice.call(n.get1Point(o,t)));if(e)for(var o=1,u=i-1;o<u;++o)r.push(r[o]);return r}}(),getUVControlPoints:function(){var t=new e(0,0,0);return function(e,i,n,r,s,o,u){for(var a=[],l=0;l<s;++l){var h=[];a.push(h);for(var c=0;c<o;++c)h.push(Array.prototype.slice.call(u.get1Point(c*s+l,t)));if(i)for(var d=1,f=r-1;d<f;++d)h.push(h[d])}if(e)for(var d=1,f=n-1;d<f;++d)a.push(a[d]);return a}}()}}),e("x_ite/Components/NURBS/X3DParametricGeometryNode",["x_ite/Components/Rendering/X3DGeometryNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS"],function(e,t,i){"use strict";function n(i){e.call(this,i),this.addType(t.X3DParametricGeometryNode)}return n.prototype=Object.assign(Object.create(e.prototype),{constructor:n,getKnots:function(e,t,n,r){return i.getKnots(e,t,n,r)}}),n}),e("nurbs/src/utils/is-ndarray",[],function(){"use strict";return function(e){return!!e&&(!!e.dtype&&new RegExp("function View[0-9]+d(:?"+e.dtype+")+").test(String(e.constructor)))}}),e("nurbs/src/utils/is-ndarray-like",[],function(){"use strict";return function(e){return!!e&&(void 0!==e.data&&Array.isArray(e.shape)&&void 0!==e.offset&&void 0!==e.stride)}}),e("nurbs/src/utils/is-array-like",[],function(){"use strict";return function(e){return Array.isArray(e)||ArrayBuffer.isView(e)||void 0!==e.length}}),e("nurbs/src/utils/infer-type",["nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/is-array-like"],function(e,t,i){"use strict";function n(r){if(r){if(e(r)||t(r))return"generic"===r.dtype?n.GENERIC_NDARRAY:n.NDARRAY;if(i(r))return n.ARRAY_OF_ARRAYS;throw new Error("Unhandled data type. Got type: "+typeof r)}}return n.ARRAY_OF_ARRAYS="Arr",n.NDARRAY="Nd",n.GENERIC_NDARRAY="GenNd",n.PACKED="PackArr",n}),e("nurbs/src/utils/cache-key",["nurbs/src/utils/is-array-like"],function(e){"use strict";function t(e){return e[0].toUpperCase()+e.slice(1)}return function(i,n,r,s,o,u){var a,l=[],h=!1;for(a=0;a<i.splineDimension;a++){var c=e(i.knots)&&e(i.knots[a]);c&&(h=!0),l.push("Deg"+i.degree[a]+(c?"":"Uniform")+t(i.boundary[a]))}var d=[[h?"NU":"",i.weights?"RBS":"BS"].join("")+i.dimension+"D",l.join("_")];return s&&d.push(s+"Pts"),o&&d.push(o+"Wts"),u&&d.push(u+"Kts"),n&&d.push("debug"),r&&d.push("chk"),d.join("_")}}),e("nurbs/src/utils/variable",[],function(){"use strict";var e=function e(t,i){return function(i,n){void 0===i||Array.isArray(i)||(i=[i]);for(var r=[],s=0;s<i.length;s++)r.push(e.sum(i[s]));if(n)for(i=0;i<r.length;i++)void 0!==n[i]&&(r[i]="("+r[i]+" + "+n[i]+") % "+n[i]);return t+r.join("_")}};return e.sum=function(e){return e=Array.isArray(e)?e:[e],e=e.filter(function(e){return void 0!==e&&0!==e}),0===e.length&&e.push(0),e.join(" + ")},e}),e("nurbs/src/utils/create-accessors",["nurbs/src/utils/infer-type","nurbs/src/utils/variable"],function(e,t){"use strict";function i(e){return function(i,n){void 0===i||Array.isArray(i)||(i=[i]);for(var r=[],s=0;s<i.length;s++)r.push(t.sum(i[s]));if(n)for(i=0;i<r.length;i++)void 0!==n[i]&&(r[i]="("+r[i]+" + "+n[i]+") % "+n[i]);return e(r)}}function n(t,n){var r;if(n)switch(e(n)){case e.ARRAY_OF_ARRAYS:return i(function(e){return t+"["+e.join("][")+"]"});case e.GENERIC_NDARRAY:return i(function(e){return t+".get("+e.join(",")+")"});case e.NDARRAY:return i(function(e){var i=[t+"Offset"];for(r=0;r<e.length;r++)i.push(t+"Stride"+r+" * ("+e[r]+")");return t+"["+i.join(" + ")+"]"});case e.PACKED:default:return}}return function(e){var t,i={};return t=n("x",e.points),t&&(i.point=t),t=n("w",e.weights),t&&(i.weight=t),t=n("k",e.knots),t&&(i.knot=t),i}}),e("nurbs/src/numerical-derivative",[],function(){"use strict";var e=[],t=[];return function(i,n,r){if(1!==n)throw new Error("Numerical derivative not implemented for order n = "+n+".");var s,o=void 0===arguments[this.splineDimension+3]?1e-4:arguments[this.splineDimension+3];for(e.length=this.splineDimension,s=0;s<this.splineDimension;s++)e[s+1]=arguments[s+3];var u,a,l,h=this.domain,c=h[r][0],d=h[r][1],f=e[r+1],p=(d-c)*o;for("closed"===this.boundary[r]?(l=d-c,u=c+(f-c-p+l)%l,a=c+(f-c+p+l)%l,p*=2):(u=Math.min(d,Math.max(c,f-p)),a=Math.min(d,Math.max(c,f+p)),p=a-u),e[r+1]=u,e[0]=t,this.evaluate.apply(null,e),e[r+1]=a,e[0]=i,this.evaluate.apply(null,e),s=0;s<this.dimension;s++)i[s]=(i[s]-t[s])/p;return i}}),e("nurbs/src/utils/ndloop",[],function(){"use strict";return function(e,t){for(var i=1,n=0,r=[];n<e.length;n++)i*=Array.isArray(e[n])?e[n][1]-e[n][0]:e[n],r[n]=Array.isArray(e[n])?e[n][0]:0;for(var s=0;s<i;s++)for(t(r.slice()),n=e.length-1;n>=0;n--){if(r[n]!==(Array.isArray(e[n])?e[n][1]:e[n])-1){r[n]++;break}r[n]=Array.isArray(e[n])?e[n][0]:0}}}),e("nurbs/src/utils/accessor-preamble",["nurbs/src/utils/infer-type"],function(e){"use strict";return function(t,i,n,r){var s=[];switch(e(r)){case e.NDARRAY:s.push("  var "+i+" = "+n+".data;"),s.push("  var "+i+"Offset = "+n+".offset;");for(var o=0;o<r.dimension;o++)s.push("  var "+i+"Stride"+o+" = "+n+".stride["+o+"];");break;case e.ARRAY_OF_ARRAYS:s.push("  var "+i+" = "+n+";")}return s.join("\n")}}),e("nurbs/src/utils/size-getter",["nurbs/src/utils/is-ndarray-like"],function(e){"use strict";return function(t,i,n){if(t){if(e(t))return i+".shape["+n+"]";for(var r=i,s=0;s<n;s++)r+="[0]";return r+".length"}return"this.size["+n+"]"}}),e("nurbs/src/evaluate",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],function(e,t,i,n,r,s){"use strict";var o={},u={};return function(a,l,h,c,d,f,p){function g(e){k.push("  "+(e||""))}function v(e){c&&g(e)}function _(e,t,i){return"("+e+") ? ("+t+") : ("+i+")"}var m,b,C,y,N,w,D=l.splineDimension,S=l.points,x=l.degree,R=l.weights,O=void 0!==R,B=l.knots,P=l.dimension,A=l.boundary;if(void 0!==p&&null!==p){Array.isArray(p)||(p=[p]);var F=0;for(m=0;m<D;m++)void 0===p[m]&&(p[m]=0),F+=p[m];if(O&&F>1)throw new Error("Analytical derivative not implemented for rational b-splines with order n = "+F+".")}f&&(a="Basis"+a),p&&(a="Der"+p.join("_")+"_"+a);var V=o[a];if(c)var j="function"==typeof c?c:console.log;if(V)return c&&j(u[a]),V.bind(l);var k=[],z="evaluate"+a,U=h.point;f&&(U=function(e,t){for(var i=[],n=0;n<e.length;n++){for(var r=e[n],s=[],o=0;o<r.length;o++)0!==r[o]&&s.push(r[o]);r=s.join(" + "),t[n]&&(r="("+r+" + "+t[n]+") % "+t[n]),i.push(r+" === "+K(n))}return"(("+i.join(" && ")+") ? 1 : 0)"});var T=h.weight,X=h.knot,I=t("k"),E=t("x"),Y=t("w"),K=t("i"),M=t("t"),q=c?"domain":"d",G=t(c?"size":"s"),W=t(c?"knotIndex":"j"),L=!0;for(N=0;N<D;N++)r(B)&&r(B[N])&&(L=!1);if(f)var H=[];var J=[];for(m=0;m<D;m++)f&&H.push(K([m])),J.push(M([m]));for(k.push("function "+z+" ("+(f?"":"out, ")+J.join(", ")+(f?", "+H.join(", "):"")+") {"),g("var h, m, a, b;"),d&&(g("var "+q+" = this.domain;"),g("for (var i = 0; i < this.splineDimension; i++) {"),g("  a = arguments[i + 1];"),g("  if (a < "+q+"[i][0] || a > "+q+"[i][1] || a === undefined || isNaN(a)) {"),g("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+q+"[i][0]+', '+"+q+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');"),g("  }"),g("}")),N=0;N<D;N++)g("var "+G(N)+" = "+s(S,"this.points",N)+";");k.push(i(l,"x","this.points",S)),O&&k.push(i(l,"w","this.weights",R)),L||k.push(i(l,"k","this.knots",B));var Q=[];for(N=0;N<D;N++)switch(n(B)){case n.NDARRAY:Q[N]=!0;break;case n.ARRAY_OF_ARRAYS:Q[N]=r(B[N])}for(N=0;N<D;N++)if(Q[N])for(v("\n  // Bisect to locate the knot interval in dimension "+N+"\n"),g("var "+W(N)+" = 0;"),g("h = "+G(N)+";"),g("while(h > "+W(N)+" + 1) {"),g("  m = 0.5 * (h + "+W(N)+") | 0;"),g("  if ("+X([N,"m"])+" > "+M(N)+") h = m;"),g("  else "+W(N)+" = m;"),g("}"),v("\n  // Fetch knots for dimension "+N+"\n"),m=1-x[N];m<=x[N];m++)g("closed"===A[N]?m<0?"var "+I([N,m+x[N]-1])+" = "+_(W(N)+" < "+-m,X([N,0])+" + "+X([N,[G(N),W(N),m]])+" - "+X([N,[G(N)]]),X([N,[W(N),m]]))+";":m>0?"var "+I([N,m+x[N]-1])+" = "+_(W(N)+" + "+m+" > "+G(N),X([N,G(N)])+" + "+X([N,m+" + "+W(N)+" - "+G(N)])+" - "+X([N,0]),X([N,[W(N),m]]))+";":"var "+I([N,m+x[N]-1])+" = "+X([N,[W(N),m]])+";":"var "+I([N,m+x[N]-1])+" = "+X([N,[W(N),m]])+";");else{for(v("\n  // Directly compute knot interval for dimension "+N+"\n"),"closed"===A[N]?g(W(N)+" = ("+M(N)+" | 0) % "+G(N)+";"):(g(W(N)+" = ("+M(N)+" | 0);"),g("if ("+W(N)+" < "+x[N]+") "+W(N)+" = "+x[N]+";"),g("if ("+W(N)+" > "+G(N)+" - 1) "+W(N)+" = "+G(N)+" - 1;")),v("\n  // Compute and clamp knots for dimension "+N+"\n"),m=1-x[N];m<=x[N];m++)w=I([N,m+x[N]-1]),g("var "+w+" = "+W(N)+" + "+m+";");if("clamped"===A[N])for(m=1-x[N];m<=x[N];m++)w=I([N,m+x[N]-1]),m<0&&g("if ("+w+" < "+x[N]+") "+w+" = "+x[N]+";"),m>0&&g("if ("+w+" > "+G(N)+") "+w+" = "+G(N)+";");"closed"===A[N]&&(v("\n  // Wrap the B-Spline parameter for closed boundary"),g(M(N)+" %= "+G(N)+";"))}for(N=0,C=[];N<D;N++)C[N]=x[N]+1;for(O&&(v("\n  // Fetch weights\n"),e(C,function(e){for(var t=[],i=[],n=0;n<D;n++)t[n]=[W(n),e[n]-x[n]],"closed"===A[n]&&e[n]-x[n]<0&&(i[n]=G(n));g("var "+Y(e)+" = "+T(t,i)+";")})),c&&g(O?"\n  // Fetch points and project into homogeneous (weighted) coordinates\n":"\n  // Fetch points\n"),e(C,function(e){for(var t=[],i=[],n=0;n<D;n++)t[n]=[W(n),e[n]-x[n]],"closed"===A[n]&&e[n]-x[n]<0&&(i[n]=G(n));if(f)g(O?"var "+E(e)+" = "+U(t,i)+" * "+Y(e)+";":"var "+E(e)+" = "+U(t,i)+";");else for(n=0;n<P;n++){var r=e.concat(n);t[D]=n,g(O?"var "+E(r)+" = "+U(t,i)+" * "+Y(e)+";":"var "+E(r)+" = "+U(t,i)+";")}}),v("\n"),v("// Perform De Boor's algorithm"),N=C.length-1;N>=0;N--)for(C[N]=[x[N],x[N]+1],m=0;m<x[N];m++)for(v("\n  // Degree "+x[N]+" evaluation in dimension "+N+", step "+(m+1)+"\n"),b=x[N];b>m;b--){var Z=p&&x[N]-m-p[N]<=0;Z?(g("m = 1 / ("+I([N,b-m+x[N]-1])+" - "+I([N,b-1])+");"),O&&(g("a = ("+M(N)+" - "+I([N,b-1])+") * m;"),g("b = 1 - a;"))):(g("a = ("+M(N)+" - "+I([N,b-1])+") / ("+I([N,b-m+x[N]-1])+" - "+I([N,b-1])+");"),g("b = 1 - a;")),O&&e(C,function(e){var t=e.slice(),i=e.slice();t[N]=b,i[N]=b-1,Z&&O&&g("h = "+Y(t)+";"),g(Y(t)+" = b * "+Y(i)+" + a * "+Y(t)+";")}),e(C,function(e){var t,i,n,r=e.slice(),s=e.slice();if(r[N]=b,s[N]=b-1,Z){var o=m+1;if(f)t=O?"h * "+Y(s)+" / "+Y(r)+" * ":"",i=E(r)+(O?" / h":""),n=E(s)+(O?" / "+Y(s):""),g(E(r)+" = "+o+" * "+t+"("+i+" - "+n+") * m;");else{var u=r.slice(),a=s.slice();for(y=0;y<P;y++)u[D]=a[D]=y,t=O?"h * "+Y(s)+" / "+Y(r)+" * ":"",i=E(u)+(O?" / h":""),n=E(a)+(O?" / "+Y(s):""),g(E(u)+" = "+o+" * "+t+"("+i+" - "+n+") * m;")}}else if(f)g(E(r)+" = b * "+E(s)+" + a * "+E(r)+";");else for(y=0;y<P;y++)r[D]=s[D]=y,g(E(r)+" = b * "+E(s)+" + a * "+E(r)+";")}),v("\n")}if(c&&g(O?"\n  // Project back from homogeneous coordinates and return final output\n":"\n  // Return final output\n"),f)g(O?"return "+E(x)+" / "+Y(x)+";":"return "+E(x)+";");else for(N=0;N<P;N++)g(O?"out["+N+"] = "+E(x.concat([N]))+" / "+Y(x)+";":"out["+N+"] = "+E(x.concat([N]))+";");if(f||g("return out;"),k.push("}"),c){var $=k.join("\n");j($),u[a]=$}var ee=new Function([k.join("\n"),"; return ",z].join(""))();return o[a]=ee,ee.bind(l)}}),e("nurbs/src/transform",["nurbs/src/utils/accessor-preamble","nurbs/src/utils/size-getter","nurbs/src/utils/variable"],function(e,t,i){"use strict";var n={};return function(r,s,o,u){var a,l,h,c,d,f,p,g,v=n[r];if(v)return v.bind(s);var _=[],m="transform"+r;_.push("function "+m+"(m) {"),_.push("var i, w;"),_.push(e(s,"x","this.points",s.points));var b=i(u?"size":"s");for(a=0;a<s.splineDimension;a++)_.push("var "+b(a)+" = "+t(s.points,"this.points",a)+";");for(c=[],a=0;a<s.splineDimension;a++)h="i"+a,c.push(h),_.push("for ("+h+" = "+b(a)+"- 1; "+h+" >= 0; "+h+"--) {");for(a=0;a<s.dimension;a++)_.push("x"+a+" = "+o.point(c.concat([a])));for(d=[],a=0;a<s.dimension;a++)d.push("m["+((s.dimension+1)*(a+1)-1)+"] * x"+a);for(d.push("m["+((s.dimension+1)*(s.dimension+1)-1)+"]"),_.push("var w = ("+d.join(" + ")+") || 1.0;"),a=0;a<s.dimension;a++){for(d=[],f=s.dimension,l=0;l<f;l++)d.push("m["+(l*(f+1)+a)+"] * x"+l);d.push("m["+(l*(f+1)+a)+"]"),g=o.point(c.concat([a])),p="("+d.join(" + ")+") / w",_.push(g+" = "+p+";")}for(a=s.splineDimension-1;a>=0;a--)_.push("}");_.push("return this;"),_.push("}");var C=new Function([_.join("\n"),"; return ",m].join(""))();return u&&console.log(_.join("\n")),n[r]=C,C.bind(s)}}),e("nurbs/src/support",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],function(e,t,i,n,r,s){"use strict";var o={};return function(u,a,l,h,c){function d(e){N.push("  "+(e||""))}function f(e,t){d(void 0===t?"out["+A+++"] = "+e.join(" + ")+";":"out["+A+++"] = ("+e.join(" + ")+" + "+t+") % "+t+";")}var p=o[u];if(p)return p.bind(a);var g,v,_,m=a.degree,b=a.knots,C=a.splineDimension,y=a.boundary,N=[],w="support"+u,D=l.knot,S=t("t"),x=h?"domain":"d",R=t(h?"size":"s"),O=t(h?"knotIndex":"i"),B=!0;for(_=0;_<C;_++)r(b)&&r(b[_])&&(B=!1);var P=[];for(g=0;g<C;g++)P.push(S([g]));N.push("function "+w+" (out, "+P.join(", ")+") {");var A=0;for(d("var h, m;"),d("var c = 0;"),c&&(d("var "+x+" = this.domain;"),d("for (var i = 0; i < this.splineDimension; i++) {"),d("  a = arguments[i + 1];"),d("  if (a < "+x+"[i][0] || a > "+x+"[i][1] || a === undefined || isNaN(a)) {"),d("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+x+"[i][0]+', '+"+x+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');"),d("  }"),d("}")),_=0;_<C;_++)d("var "+R(_)+" = "+s(a.points,"this.points",_)+";");B||N.push(i(a,"k","this.knots",b));var F=[];for(_=0;_<C;_++)switch(n(b)){case n.NDARRAY:F[_]=!0;break;case n.ARRAY_OF_ARRAYS:F[_]=r(b[_])}for(_=0;_<C;_++)F[_]?(d("var "+O(_)+" = 0;"),d("h = "+R(_)+";"),d("while(h > "+O(_)+" + 1) {"),d("  m = 0.5 * (h + "+O(_)+") | 0;"),d("  if ("+D([_,"m"])+" > "+S(_)+") h = m;"),d("  else "+O(_)+" = m;"),d("}")):"closed"===y[_]?d(O(_)+" = ("+S(_)+" | 0) % "+R(_)+";"):(d(O(_)+" = ("+S(_)+" | 0);"),d("if ("+O(_)+" < "+m[_]+") "+O(_)+" = "+m[_]+";"),d("if ("+O(_)+" > "+R(_)+" - 1) "+O(_)+" = "+R(_)+" - 1;"));for(_=0,v=[];_<C;_++)v[_]=m[_]+1;e(v,function(e){for(var t=[],i=[],n=0;n<C;n++)t[n]=[O(n),e[n]-m[n]],"closed"===y[n]&&e[n]-m[n]<0&&(i[n]=R(n));for(n=0;n<C;n++)f(t[n],i[n])}),d("out.length = "+A+";"),d("return out;"),N.push("}"),h&&console.log(N.join("\n"));var V=new Function([N.join("\n"),"; return ",w].join(""))();return o[u]=V,V.bind(a)}}),e("nurbs/extras/sample",[],function(){"use strict";function e(e,t){var i=t[0],n=t[1],r=t[2],s=Math.sqrt(i*i+n*n+r*r);return s>0&&(e[0]=t[0]/s,e[1]=t[1]/s,e[2]=t[2]/s),e}function t(e,t,i){var n=t[0],r=t[1],s=t[2],o=i[0],u=i[1],a=i[2];return e[0]=r*a-s*u,e[1]=s*o-n*a,e[2]=n*u-r*o,e}var i=[],n=[];return function(r,s,o){r=r||{},o=o||{};var u=r.points=r.points||[],a=r.normals=r.normals||[],l=r.faces=r.faces||[];if(Array.isArray(o.resolution))var h=o.resolution;else var c=void 0===o.resolution?31:o.resolution,h=new Array(s.splineDimension).fill(c);switch(s.splineDimension){case 1:for(var d=h[0],f=d+("closed"!==s.boundary[0]),p=3*f,g=s.evaluator([1,0]),v=s.domain,_=v[0],m=0;m<f;++m){var b=_[0]+(_[1]-_[0])*m/d,C=3*m;s.evaluate(i,b),u[C]=i[0],u[C+1]=i[1],u[C+2]=i[2]}u.length=p;break;case 2:for(var d=h[0],y=h[1],f=d+("closed"!==s.boundary[0]),N=y+("closed"!==s.boundary[1]),p=f*N*3,g=s.evaluator([1,0]),w=s.evaluator([0,1]),v=s.domain,_=v[0],D=v[1],m=0;m<f;++m)for(var b=_[0]+(_[1]-_[0])*m/d,S=0;S<N;++S){var x=D[0]+(D[1]-D[0])*S/y,C=3*(m+f*S);s.evaluate(i,b,x),u[C]=i[0],u[C+1]=i[1],u[C+2]=i[2],e(i,t(i,g(i,b,x),w(n,b,x))),a[C]=i[0],a[C+1]=i[1],a[C+2]=i[2]}a.length=p,u.length=p;for(var R=0,m=0;m<d;++m){var O=m,B=m+1;"closed"===s.boundary[0]&&(B%=d);for(var S=0;S<y;++S){var P=S,A=S+1;"closed"===s.boundary[1]&&(A%=y),l[R++]=O+f*P,l[R++]=B+f*P,l[R++]=B+f*A,l[R++]=O+f*P,l[R++]=B+f*A,l[R++]=O+f*A}}l.length=R;break;default:throw new Error("Can only sample curves and surfaces")}return r}}),e("nurbs/nurbs",["nurbs/src/utils/infer-type","nurbs/src/utils/cache-key","nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/create-accessors","nurbs/src/numerical-derivative","nurbs/src/utils/is-array-like","nurbs/src/evaluate","nurbs/src/transform","nurbs/src/support","nurbs/extras/sample"],function(e,t,i,n,r,s,o,u,a,l,h){"use strict";function c(e){return void 0===e||null===e}function d(n,h,d,f,p,v){var _,m;!n||o(n)||i(n)?(v=v||{},this.weights=f,this.knots=d,this.degree=h,this.points=n,this.boundary=p,this.debug=v.debug,this.checkBounds=!!v.checkBounds,Object.defineProperty(this,"size",{value:v.size,writable:!0,configurable:!0})):(v=n,this.debug=n.debug,this.checkBounds=!!n.checkBounds,this.weights=n.weights,this.knots=n.knots,this.degree=n.degree,this.boundary=n.boundary,this.points=n.points,Object.defineProperty(this,"size",{value:v.size,writable:!0,configurable:!0}));var b=e(this.points),C=e(this.weights),y=e(this.knots);if(this.points)switch(b){case e.GENERIC_NDARRAY:case e.NDARRAY:Object.defineProperties(this,{splineDimension:{value:this.points.shape.length-1,writable:!1,configurable:!0},dimension:{value:this.points.shape[this.points.shape.length-1],writable:!1,configurable:!0},size:{get:function(){return this.points.shape.slice(0,this.points.shape.length-1)},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:!0}});break;case e.ARRAY_OF_ARRAYS:var N=0,w=this.size||[];w.length=0;for(var D=this.points;o(D[0]);D=D[0])N++,w.push(D.length);if(0===N)throw new Error("Expected an array of points");Object.defineProperties(this,{splineDimension:{value:N,writable:!1,configurable:!0},dimension:{value:D.length,writable:!1,configurable:!0},size:{get:function(){var e=[];e.length=0;for(var t=0,i=this.points;t<this.splineDimension;t++,i=i[0])e[t]=i.length;return e},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:!0}});break;case e.PACKED:default:throw new Error("Expected either a packed array, array of arrays, or ndarray of points")}else{if(void 0===this.size||null===this.size)throw new Error("Either points or a control hull size must be provided.");if(o(this.size)||Object.defineProperty(this,"size",{value:[this.size],writable:!0,configurable:!0}),0===this.size.length)throw new Error("`size` must be a number or an array of length at least one.");Object.defineProperties(this,{splineDimension:{value:this.size.length,writable:!1,configurable:!0},dimension:{value:0,writable:!1,configurable:!0}})}if(o(this.degree)){for(_=0;_<this.splineDimension;_++)if(c(this.degree[_]))throw new Error("Missing degree in dimension "+(_+1))}else{var S=!c(this.degree),x=c(this.degree)?2:this.degree;for(this.degree=[],_=0;_<this.splineDimension;_++)if(this.size[_]<=x){if(S)throw new Error("Expected at least "+(x+1)+" points for degree "+x+" spline in dimension "+(_+1)+" but got only "+this.size[_]);this.degree[_]=this.size[_]-1}else this.degree[_]=x}if(m="string"!=typeof this.boundary?"open":this.boundary,!g[m])throw new Error("Boundary type must be one of "+Object.keys(g)+". Got "+m);for(this.boundary=o(this.boundary)?this.boundary:[],this.boundary.length=this.splineDimension,_=0;_<this.splineDimension;_++)if(this.boundary[_]=c(this.boundary[_])?m:this.boundary[_],!g[m])throw new Error("Boundary type must be one of "+Object.keys(g)+". Got "+m+" for dimension "+(_+1));switch(y){case e.ARRAY_OF_ARRAYS:for(o(this.knots)&&this.knots.length>0&&!o(this.knots[0])&&(this.knots=[this.knots]),_=0;_<this.splineDimension;_++){if(this.size[_]<=this.degree[_])throw new Error("Expected at least "+(this.degree[_]+1)+" points in dimension "+(_+1)+" but got "+this.size[_]+".");if(o(this.knots[_])){if("closed"!==this.boundary[_]&&this.knots[_].length!==this.degree[_]+this.size[_]+1)throw new Error("Expected "+(this.degree[_]+this.size[_]+1)+" knots in dimension "+(_+1)+" but got "+this.knots[_].length+".");if("closed"===this.boundary[_]&&this.knots[_].length!==this.size[_]+1){if(!(this.knots[_].length===this.size[_]+this.degree[_]+1))throw new Error("Expected "+(this.size[_]+1)+" knots for closed spline in dimension "+(_+1)+" but got "+this.knots[_].length+".")}}}break;case e.NDARRAY:}var R=t(this,this.debug,this.checkBounds,b,C,y);if(R!==this.__cacheKey){this.__cacheKey=R;var O=r(this);this.evaluate=u(this.__cacheKey,this,O,this.debug,this.checkBounds,!1),this.transform=a(this.__cacheKey,this,O,this.debug),this.support=l(this.__cacheKey,this,O,this.debug,this.checkBounds),this.evaluator=function(e,t){return u(this.__cacheKey,this,O,this.debug,this.checkBounds,t,e)}}return this.numericalDerivative=s.bind(this),this}function f(){var e,t=[],i=this.points;i?n(i)&&(e=i.shape):e=this.size;for(var r=0;r<this.splineDimension;r++){var s=e?e[r]:i.length,o=this.degree[r],u="closed"===this.boundary[r];if(this.knots&&this.knots[r]){var a=this.knots[r];t[r]=[a[u?0:o],a[s]]}else t[r]=[u?0:o,s];i&&(i=i[0])}return t}function p(e,t,i,n,r,s){var o=function(e,t,i,n,r,s){return u(e,t,i,n,r,s),o},u=d.bind(o);return Object.defineProperty(o,"domain",{get:f}),u(e,t,i,n,r,s),o}var g={open:"open",closed:"closed",clamped:"clamped"};return p.sample=h,p}),e("nurbs",["nurbs/nurbs"],function(e){return e}),e("x_ite/Components/NURBS/NurbsCurve",["x_ite/Bits/X3DCast","x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Components/Rendering/X3DLineGeometryNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS","nurbs"],function(e,t,i,n,r,s,o,u,a){"use strict";function l(e){r.call(this,e),this.addType(o.NurbsCurve),this.setGeometryType(1),this.mesh={},this.sampleOptions={resolution:[]}}return l.prototype=Object.assign(Object.create(r.prototype),s.prototype,{constructor:l,fieldDefinitions:new n([new i(o.inputOutput,"metadata",new t.SFNode),new i(o.inputOutput,"tessellation",new t.SFInt32),new i(o.initializeOnly,"closed",new t.SFBool),new i(o.initializeOnly,"order",new t.SFInt32(3)),new i(o.initializeOnly,"knot",new t.MFDouble),new i(o.inputOutput,"weight",new t.MFDouble),new i(o.inputOutput,"controlPoint",new t.SFNode)]),getTypeName:function(){return"NurbsCurve"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){r.prototype.initialize.call(this),this.controlPoint_.addInterest("set_controlPoint__",this),this.setPrimitiveMode(this.getBrowser().getContext().LINES),this.setSolid(!1),this.set_controlPoint__()},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=e(o.X3DCoordinateNode,this.controlPoint_),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},getTessellation:function(e){return u.getTessellation(this.tessellation_.getValue(),e-this.order_.getValue())},getClosed:function(e,t,i,n){return!!this.closed_.getValue()&&u.getClosed(e,t,i,n)},getWeights:function(e,t,i,n){return u.getWeights(e,t,i,n)},getControlPoints:function(e,t,i){return u.getControlPoints(e,t,i)},tessellate:function(){if(this.order_.getValue()<2)return[];if(!this.controlPointNode)return[];if(this.controlPointNode.getSize()<this.order_.getValue())return[];for(var e=this.getVertices(),t=[],i=0,n=e.length;i<n;i+=8)t.push(e[i],e[i+1],e[i+2]);return t.push(e[n-4],e[n-3],e[n-2]),t},build:function(){if(!(this.order_.getValue()<2)&&this.controlPointNode&&!(this.controlPointNode.getSize()<this.order_.getValue())){var e=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPointNode),t=this.getControlPoints(e,this.order_.getValue(),this.controlPointNode),i=this.getKnots(e,this.order_.getValue(),this.controlPointNode.getSize(),this.knot_),n=(i[i.length-1],i[0],this.getWeights(e,this.order_.getValue(),this.controlPointNode.getSize(),this.weight_)),r=this.order_.getValue()-1,s=this.surface=(this.surface||a)({boundary:["open"],degree:[r],knots:[i],weights:n,points:t,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(i.length);for(var o=a.sample(this.mesh,s,this.sampleOptions),u=o.points,l=this.getVertices(),h=3,c=u.length;h<c;h+=3){var d=h-3;l.push(u[d],u[d+1],u[d+2],1),l.push(u[h],u[h+1],u[h+2],1)}}}}),l}),e("x_ite/Components/NURBS/NurbsCurve2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS","nurbs"],function(e,t,i,n,r,s,o){"use strict";function u(e){n.call(this,e),this.addType(r.NurbsCurve2D),this.mesh={},this.sampleOptions={resolution:[]}}return u.prototype=Object.assign(Object.create(n.prototype),{constructor:u,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"tessellation",new e.SFInt32),new t(r.initializeOnly,"closed",new e.SFBool),new t(r.initializeOnly,"order",new e.SFInt32(3)),new t(r.initializeOnly,"knot",new e.MFDouble),new t(r.inputOutput,"weight",new e.MFDouble),new t(r.inputOutput,"controlPoint",new e.MFVec2d)]),getTypeName:function(){return"NurbsCurve2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},getTessellation:function(e){return s.getTessellation(this.tessellation_.getValue(),e-this.order_.getValue())},getClosed:function(e,t,i,n){return!!this.closed_.getValue()&&s.getClosed2D(e,t,i,n)},getKnots:function(e,t,i,n){return s.getKnots(e,t,i,n)},getWeights:function(e,t,i,n){return s.getWeights(e,t,i,n)},getControlPoints:function(e,t,i){return s.getControlPoints2D(e,t,i)},tessellate:function(e){if(this.order_.getValue()<2)return[];if(this.controlPoint_.length<this.order_.getValue())return[];var t=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPoint_),i=this.getControlPoints(t,this.order_.getValue(),this.controlPoint_),n=this.getKnots(t,this.order_.getValue(),this.controlPoint_.length,this.knot_),r=(n[n.length-1],n[0],this.getWeights(t,this.order_.getValue(),this.controlPoint_.length,this.weight_)),s=this.order_.getValue()-1,u=this.surface=(this.surface||o)({boundary:["open"],degree:[s],knots:[n],weights:r,points:i,debug:!1});this.sampleOptions.resolution[0]=this.getTessellation(n.length);var a=o.sample(this.mesh,u,this.sampleOptions),l=a.points,h=[];if(e)for(var c=0,d=l.length;c<d;c+=3)h.push(l[c],0,l[c+1]);else for(var c=0,d=l.length;c<d;c+=3)h.push(l[c],l[c+1]);return h}}),u}),e("x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode",["x_ite/Bits/X3DCast","x_ite/Bits/X3DConstants","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Browser/NURBS/NURBS","nurbs"],function(e,t,i,n,r){"use strict";function s(e){i.call(this,e),this.addType(t.X3DNurbsSurfaceGeometryNode),this.mesh={},this.sampleOptions={resolution:[]}}return s.prototype=Object.assign(Object.create(i.prototype),{constructor:s,initialize:function(){i.prototype.initialize.call(this),this.texCoord_.addInterest("set_texCoord__",this),this.controlPoint_.addInterest("set_controlPoint__",this),this.set_texCoord__(),this.set_controlPoint__()},set_texCoord__:function(){this.texCoordNode&&this.texCoordNode.removeInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.removeInterest("requestRebuild",this),this.texCoordNode=e(t.X3DTextureCoordinateNode,this.texCoord_),this.nurbsTexCoordNode=e(t.NurbsTextureCoordinate,this.texCoord_),
this.texCoordNode&&this.texCoordNode.addInterest("requestRebuild",this),this.nurbsTexCoordNode&&this.nurbsTexCoordNode.addInterest("requestRebuild",this)},set_controlPoint__:function(){this.controlPointNode&&this.controlPointNode.removeInterest("requestRebuild",this),this.controlPointNode=e(t.X3DCoordinateNode,this.controlPoint_),this.controlPointNode&&this.controlPointNode.addInterest("requestRebuild",this)},getUTessellation:function(e){return n.getTessellation(this.uTessellation_.getValue(),e-this.uOrder_.getValue())},getVTessellation:function(e){return n.getTessellation(this.vTessellation_.getValue(),e-this.vOrder_.getValue())},getUClosed:function(e,t,i,r,s,o){return!!this.uClosed_.getValue()&&n.getUClosed(e,t,i,r,s,o)},getVClosed:function(e,t,i,r,s,o){return!!this.vClosed_.getValue()&&n.getVClosed(e,t,i,r,s,o)},getUVWeights:function(e,t,i,r,s,o,u){return n.getUVWeights(e,t,i,r,s,o,u)},getUVControlPoints:function(e,t,i,r,s,o,u){return n.getUVControlPoints(e,t,i,r,s,o,u)},build:function(){if(!(this.uOrder_.getValue()<2)&&!(this.vOrder_.getValue()<2)&&!(this.uDimension_.getValue()<this.uOrder_.getValue())&&!(this.vDimension_.getValue()<this.vOrder_.getValue())&&this.controlPointNode&&this.controlPointNode.getSize()===this.uDimension_.getValue()*this.vDimension_.getValue()){var e=this.getUClosed(this.uOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.uKnot_,this.weight_,this.controlPointNode),t=this.getVClosed(this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.vKnot_,this.weight_,this.controlPointNode),i=this.getUVControlPoints(e,t,this.uOrder_.getValue(),this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.controlPointNode),n=this.getKnots(e,this.uOrder_.getValue(),this.uDimension_.getValue(),this.uKnot_),s=this.getKnots(t,this.vOrder_.getValue(),this.vDimension_.getValue(),this.vKnot_),o=(n[n.length-1],n[0],s[s.length-1],s[0],this.getUVWeights(e,t,this.uOrder_.getValue(),this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.weight_)),u=this.uOrder_.getValue()-1,a=this.vOrder_.getValue()-1,l=this.surface=(this.surface||r)({boundary:["open","open"],degree:[u,a],knots:[n,s],weights:o,points:i,debug:!1});this.sampleOptions.resolution[0]=this.getUTessellation(n.length),this.sampleOptions.resolution[1]=this.getVTessellation(s.length);for(var h=r.sample(this.mesh,l,this.sampleOptions),c=h.faces,d=h.normals,f=h.points,p=this.getNormals(),g=this.getVertices(),v=0,_=c.length;v<_;++v){var m=3*c[v];p.push(d[m],d[m+1],d[m+2]),g.push(f[m],f[m+1],f[m+2],1)}this.setSolid(this.solid_.getValue()),this.setCCW(!0)}}}),s}),e("x_ite/Components/NURBS/NurbsPatchSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function s(e){n.call(this,e),this.addType(r.NurbsPatchSurface)}return s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.initializeOnly,"solid",new e.SFBool(!0)),new t(r.inputOutput,"uTessellation",new e.SFInt32),new t(r.inputOutput,"vTessellation",new e.SFInt32),new t(r.initializeOnly,"uClosed",new e.SFBool),new t(r.initializeOnly,"vClosed",new e.SFBool),new t(r.initializeOnly,"uOrder",new e.SFInt32(3)),new t(r.initializeOnly,"vOrder",new e.SFInt32(3)),new t(r.initializeOnly,"uDimension",new e.SFInt32),new t(r.initializeOnly,"vDimension",new e.SFInt32),new t(r.initializeOnly,"uKnot",new e.MFDouble),new t(r.initializeOnly,"vKnot",new e.MFDouble),new t(r.inputOutput,"weight",new e.MFDouble),new t(r.inputOutput,"texCoord",new e.SFNode),new t(r.inputOutput,"controlPoint",new e.SFNode)]),getTypeName:function(){return"NurbsPatchSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"}}),s}),e("x_ite/Components/NURBS/NurbsSweptSurface",["x_ite/Bits/X3DCast","x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r,s,o){"use strict";function u(e){s.call(this,e),this.addType(o.NurbsSweptSurface),this.extrusion=new r(e)}return u.prototype=Object.assign(Object.create(s.prototype),{constructor:u,fieldDefinitions:new n([new i(o.inputOutput,"metadata",new t.SFNode),new i(o.initializeOnly,"solid",new t.SFBool(!0)),new i(o.initializeOnly,"ccw",new t.SFBool(!0)),new i(o.inputOutput,"crossSectionCurve",new t.SFNode),new i(o.inputOutput,"trajectoryCurve",new t.SFNode)]),getTypeName:function(){return"NurbsSweptSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){s.prototype.initialize.call(this),this.crossSectionCurve_.addInterest("set_crossSectionCurve__",this),this.trajectoryCurve_.addInterest("set_trajectoryCurve__",this);var e=this.extrusion;e.beginCap_=!1,e.endCap_=!1,e.solid_=!0,e.ccw_=!0,e.convex_=!0,e.creaseAngle_=Math.PI,e.setup(),e.crossSection_.setTainted(!0),e.spine_.setTainted(!0),this.set_crossSectionCurve__(),this.set_trajectoryCurve__()},set_crossSectionCurve__:function(){this.crossSectionCurveNode&&this.crossSectionCurveNode.removeInterest("requestRebuild",this),this.crossSectionCurveNode=e(o.X3DNurbsControlCurveNode,this.crossSectionCurve_),this.crossSectionCurveNode&&this.crossSectionCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode.rebuild_.removeInterest("requestRebuild",this),this.trajectoryCurveNode=e(o.NurbsCurve,this.trajectoryCurve_),this.trajectoryCurveNode&&this.trajectoryCurveNode.rebuild_.addInterest("requestRebuild",this)},build:function(){if(this.crossSectionCurveNode&&this.trajectoryCurveNode){var e=this.extrusion;if(e.crossSection_=this.crossSectionCurveNode.tessellate(),e.spine_=this.trajectoryCurveNode.tessellate(),e.rebuild(),this.getColors().assign(e.getColors()),this.getTexCoords().assign(e.getTexCoords()),this.getNormals().assign(e.getNormals()),this.getVertices().assign(e.getVertices()),!this.ccw_.getValue())for(var t=this.getNormals(),i=0,n=t.length;i<n;++i)t[i]=-t[i];this.setSolid(this.solid_.getValue()),this.setCCW(this.ccw_.getValue())}}}),u}),e("x_ite/Components/NURBS/NurbsSwungSurface",["x_ite/Bits/X3DCast","x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r,s,o){"use strict";function u(e){s.call(this,e),this.addType(o.NurbsSwungSurface),this.extrusion=new r(e)}return u.prototype=Object.assign(Object.create(s.prototype),{constructor:u,fieldDefinitions:new n([new i(o.inputOutput,"metadata",new t.SFNode),new i(o.initializeOnly,"solid",new t.SFBool(!0)),new i(o.initializeOnly,"ccw",new t.SFBool(!0)),new i(o.inputOutput,"profileCurve",new t.SFNode),new i(o.inputOutput,"trajectoryCurve",new t.SFNode)]),getTypeName:function(){return"NurbsSwungSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){s.prototype.initialize.call(this),this.profileCurve_.addInterest("set_profileCurve__",this),this.trajectoryCurve_.addInterest("set_trajectoryCurve__",this);var e=this.extrusion;e.beginCap_=!1,e.endCap_=!1,e.solid_=!0,e.ccw_=!0,e.convex_=!0,e.creaseAngle_=Math.PI,e.setup(),e.crossSection_.setTainted(!0),e.spine_.setTainted(!0),this.set_profileCurve__(),this.set_trajectoryCurve__()},set_profileCurve__:function(){this.profileCurveNode&&this.profileCurveNode.removeInterest("requestRebuild",this),this.profileCurveNode=e(o.X3DNurbsControlCurveNode,this.profileCurve_),this.profileCurveNode&&this.profileCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){this.trajectoryCurveNode&&this.trajectoryCurveNode.removeInterest("requestRebuild",this),this.trajectoryCurveNode=e(o.X3DNurbsControlCurveNode,this.trajectoryCurve_),this.trajectoryCurveNode&&this.trajectoryCurveNode.addInterest("requestRebuild",this)},build:function(){if(this.profileCurveNode&&this.trajectoryCurveNode){var e=this.extrusion;if(e.crossSection_=this.profileCurveNode.tessellate(),e.spine_=this.trajectoryCurveNode.tessellate(!0),e.rebuild(),this.getColors().assign(e.getColors()),this.getTexCoords().assign(e.getTexCoords()),this.getNormals().assign(e.getNormals()),this.getVertices().assign(e.getVertices()),!this.ccw_.getValue())for(var t=this.getNormals(),i=0,n=t.length;i<n;++i)t[i]=-t[i];this.setSolid(this.solid_.getValue()),this.setCCW(this.ccw_.getValue())}}}),u}),t(["x_ite/Configuration/SupportedNodes","x_ite/Components/NURBS/Contour2D","x_ite/Components/NURBS/ContourPolyline2D","x_ite/Components/NURBS/CoordinateDouble","x_ite/Components/NURBS/NurbsCurve","x_ite/Components/NURBS/NurbsCurve2D","x_ite/Components/NURBS/NurbsPatchSurface","x_ite/Components/NURBS/NurbsSweptSurface","x_ite/Components/NURBS/NurbsSwungSurface"],function(e,t,i,n,r,s,o,u,a){"use strict";function l(e){return new this(e)}var h={Contour2D:t,ContourPolyline2D:i,CoordinateDouble:n,NurbsCurve:r,NurbsCurve2D:s,NurbsPatchSurface:o,NurbsSweptSurface:u,NurbsSwungSurface:a};for(var c in h){var d=h[c];d.createInstance=l.bind(d),e[c]=d,e[c.toUpperCase()]=d}return h}),e("components/nurbs",function(){})}();
