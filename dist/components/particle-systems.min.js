(function(){var e=X3D.define,t=X3D.require;e("x_ite/Components/ParticleSystems/X3DParticleEmitterNode",["x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Geometry/Line3","standard/Math/Geometry/Plane3","standard/Math/Algorithm","standard/Math/Algorithms/QuickSort"],function(e,t,i,s,r,n,a,o){"use strict";var l=new i(0,0,0),h=new i(0,0,0),c=new r(i.Zero,i.zAxis),d=new n(i.Zero,i.zAxis);function u(e,t){return d.getDistanceToPoint(e)<d.getDistanceToPoint(t)}function m(e,t){return e<d.getDistanceToPoint(t)}function f(i){e.call(this,i);this.addType(t.X3DParticleEmitterNode);this.speed_.setUnit("speed");this.mass_.setUnit("mass");this.surfaceArea_.setUnit("area");this.rotations=[];this.intersections=[];this.intersectionNormals=[];this.sorter=new o(this.intersections,u)}f.prototype=Object.assign(Object.create(e.prototype),{constructor:f,initialize:function(){e.prototype.initialize.call(this);this.speed_.addInterest("set_speed__",this);this.variation_.addInterest("set_variation__",this);this.mass_.addInterest("set_mass__",this);this.set_speed__();this.set_variation__();this.set_mass__()},set_speed__:function(){this.speed=this.speed_.getValue()},set_variation__:function(){this.variation=this.variation_.getValue()},set_mass__:function(){this.mass=this.mass_.getValue()},isExplosive:function(){return false},getMass:function(){return this.mass},getRandomLifetime:function(e,t){var i=e*t,s=Math.max(0,e-i),r=e+i;return Math.random()*(r-s)+s},getRandomSpeed:function(){var e=this.speed,t=e*this.variation,i=Math.max(0,e-t),s=e+t;return Math.random()*(s-i)+i},getSphericalRandomVelocity:function(e){return this.getRandomNormal(e).multiply(this.getRandomSpeed())},getRandomValue:function(e,t){return Math.random()*(t-e)+e},getRandomNormal:function(e){var t=this.getRandomValue(-1,1)*Math.PI,i=this.getRandomValue(-1,1),s=Math.acos(i),r=Math.sin(s);return e.set(Math.sin(t)*r,Math.cos(t)*r,i)},getRandomNormalWithAngle:function(e,t){var i=(Math.random()*2-1)*Math.PI,s=this.getRandomValue(Math.cos(e),1),r=Math.acos(s),n=Math.sin(r);return t.set(Math.sin(i)*n,Math.cos(i)*n,s)},getRandomNormalWithDirectionAndAngle:function(e,t,s){rotation.setFromToVec(i.zAxis,e);return rotation.multVecRot(this.getRandomNormalWithAngle(t,s))},getRandomSurfaceNormal:function(e){var t=this.getRandomValue(-1,1)*Math.PI,i=Math.pow(Math.random(),1/3),s=Math.acos(i),r=Math.sin(s);return e.set(Math.sin(t)*r,Math.cos(t)*r,i)},animate:function(e,t){var r=e.particles,n=e.numParticles,a=e.createParticles,o=e.particleLifetime,c=e.lifetimeVariation,d=e.speeds,u=e.velocities,m=e.turbulences,f=this.rotations,p=e.numForces,_=e.boundedVertices.length,y=e.boundedVolume;for(var g=f.length;g<p;++g)f[g]=new s(0,0,1,0);for(var g=0;g<p;++g)f[g].setFromToVec(i.zAxis,u[g]);for(var g=0;g<n;++g){var A=r[g],x=A.elapsedTime+t;if(x>A.lifetime){A.lifetime=this.getRandomLifetime(o,c);A.elapsedTime=0;if(a){++A.life;this.getRandomPosition(A.position);this.getRandomVelocity(A.velocity)}else A.position.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}else{var F=A.position,w=A.velocity;for(var R=0;R<p;++R){w.add(f[R].multVecRot(this.getRandomNormalWithAngle(m[R],l)).multiply(d[R]))}if(_){h.x=F.x;h.y=F.y;h.z=F.z;F.x+=w.x*t;F.y+=w.y*t;F.z+=w.z*t;this.bounce(y,h,F,w)}else{F.x+=w.x*t;F.y+=w.y*t;F.z+=w.z*t}A.elapsedTime=x}}if(e.colorMaterial)this.getColors(r,e.colorKeys,e.colorRamp,n)},bounce:function(e,t,i,s){l.assign(s).normalize();c.set(t,l);var r=this.intersections,n=this.intersectionNormals,o=e.intersectsLine(c,r,n);if(o){for(var h=0;h<o;++h)r[h].index=h;d.set(t,l);this.sorter.sort(0,o);var u=a.upperBound(r,0,o,0,m);if(u<o){var f=r[u],p=n[f.index];d.set(f,p);if(d.getDistanceToPoint(t)*d.getDistanceToPoint(i)<0){var _=2*p.dot(s);s.x-=p.x*_;s.y-=p.y*_;s.z-=p.z*_;l.assign(s).normalize();var y=f.distance(t);i.x=f.x+l.x*y;i.y=f.y+l.y*y;i.z=f.z+l.z*y}}}},getColors:function(e,t,i,s){var r=t.length,n=0,o=0,l=0;for(var h=0;h<s;++h){var c=e[h],d=c.elapsedTime/c.lifetime,u=c.color;if(r==1||d<=t[0]){n=0;o=0;l=0}else if(d>=t[r-1]){n=r-2;o=r-1;l=1}else{var m=a.upperBound(t,0,r,d,a.less);if(m<r){o=m;n=m-1;var f=t[n],p=t[o];l=a.clamp((d-f)/(p-f),0,1)}else{n=0;o=0;l=0}}var _=i[n],y=i[o];u.x=_.x+l*(y.x-_.x);u.y=_.y+l*(y.y-_.y);u.z=_.z+l*(y.z-_.z);u.w=_.w+l*(y.w-_.w)}}});return f});e("x_ite/Components/ParticleSystems/PointEmitter",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector3"],function(e,t,i,s,r,n){"use strict";function a(e){s.call(this,e);this.addType(r.PointEmitter);this.position_.setUnit("length");this.speed_.setUnit("speed");this.mass_.setUnit("mass");this.surfaceArea_.setUnit("area");this.direction=new n(0,0,0)}a.prototype=Object.assign(Object.create(s.prototype),{constructor:a,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"position",new e.SFVec3f),new t(r.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat)]),getTypeName:function(){return"PointEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this);this.position_.addInterest("set_position__",this);this.direction_.addInterest("set_direction__",this);this.set_position__();this.set_direction__()},set_position__:function(){this.position=this.position_.getValue()},set_direction__:function(){this.direction.assign(this.direction_.getValue()).normalize();if(this.direction.equals(n.Zero))this.getRandomVelocity=this.getSphericalRandomVelocity;else delete this.getRandomVelocity},getRandomPosition:function(e){return e.assign(this.position)},getRandomVelocity:function(e){var t=this.direction,i=this.getRandomSpeed();e.x=t.x*i;e.y=t.y*i;e.z=t.z*i;return e}});return a});e("x_ite/Browser/ParticleSystems/X3DParticleSystemsContext",["x_ite/Components/ParticleSystems/PointEmitter"],function(e){"use strict";function t(){}t.prototype={getDefaultEmitter:function(){if(!this.defaultEmitter){this.defaultEmitter=new e(this.getPrivateScene());this.defaultEmitter.setup()}return this.defaultEmitter}};return t});e("x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode",["x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants"],function(e,t){"use strict";function i(i){e.call(this,i);this.addType(t.X3DParticlePhysicsModelNode)}i.prototype=Object.assign(Object.create(e.prototype),{constructor:i,addForce:function(){}});return i});e("x_ite/Components/ParticleSystems/BoundedPhysicsModel",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(e,t,i,s,r,n){"use strict";function a(e){s.call(this,e);this.addType(r.BoundedPhysicsModel)}a.prototype=Object.assign(Object.create(s.prototype),{constructor:a,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(true)),new t(r.inputOutput,"geometry",new e.SFNode)]),getTypeName:function(){return"BoundedPhysicsModel"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"physics"},initialize:function(){s.prototype.initialize.call(this);this.geometry_.addInterest("set_geometry__",this);this.set_geometry__()},set_geometry__:function(){if(this.geometryNode)this.geometryNode.removeInterest("addNodeEvent",this);this.geometryNode=n(r.X3DGeometryNode,this.geometry_);if(this.geometryNode)this.geometryNode.addInterest("addNodeEvent",this)},addGeometry:function(e,t){if(this.geometryNode){var i=this.geometryNode.getNormals().getValue(),s=this.geometryNode.getVertices().getValue();for(var r=0,n=i.length;r<n;++r)e.push(i[r]);for(var r=0,n=s.length;r<n;++r)t.push(s[r])}}});return a});e("x_ite/Components/ParticleSystems/ConeEmitter",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4"],function(e,t,i,s,r,n,a){"use strict";function o(e){s.call(this,e);this.addType(r.ConeEmitter);this.position_.setUnit("length");this.angle_.setUnit("angle");this.speed_.setUnit("speed");this.mass_.setUnit("mass");this.surfaceArea_.setUnit("area");this.rotation=new a(0,0,1,0)}o.prototype=Object.assign(Object.create(s.prototype),{constructor:o,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"position",new e.SFVec3f),new t(r.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(r.inputOutput,"angle",new e.SFFloat(.7854)),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat)]),getTypeName:function(){return"ConeEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this);this.position_.addInterest("set_position__",this);this.direction_.addInterest("set_direction__",this);this.angle_.addInterest("set_angle__",this);this.set_position__();this.set_direction__();this.set_angle__()},set_position__:function(){this.position=this.position_.getValue()},set_direction__:function(){var e=this.direction_.getValue();this.rotation.setFromToVec(n.zAxis,e);if(e.equals(n.Zero))this.getRandomVelocity=this.getSphericalRandomVelocity;else delete this.getRandomVelocity},set_angle__:function(){this.angle=this.angle_.getValue()},getRandomPosition:function(e){return e.assign(this.position)},getRandomVelocity:function(e){return this.rotation.multVecRot(this.getRandomNormalWithAngle(this.angle,e).multiply(this.getRandomSpeed()))}});return o});e("x_ite/Components/ParticleSystems/ExplosionEmitter",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Bits/X3DConstants"],function(e,t,i,s,r){"use strict";function n(e){s.call(this,e);this.addType(r.ExplosionEmitter);this.position_.setUnit("length");this.speed_.setUnit("speed");this.mass_.setUnit("mass");this.surfaceArea_.setUnit("area");this.getRandomVelocity=this.getSphericalRandomVelocity}n.prototype=Object.assign(Object.create(s.prototype),{constructor:n,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"position",new e.SFVec3f),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat)]),getTypeName:function(){return"ExplosionEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this);this.position_.addInterest("set_position__",this);this.set_position__()},set_position__:function(){this.position=this.position_.getValue()},isExplosive:function(){return true},getRandomPosition:function(e){return e.assign(this.position)}});return n});e("x_ite/Components/ParticleSystems/ForcePhysicsModel",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode","x_ite/Bits/X3DConstants"],function(e,t,i,s,r){"use strict";function n(e){s.call(this,e);this.addType(r.ForcePhysicsModel);this.force_.setUnit("force")}n.prototype=Object.assign(Object.create(s.prototype),{constructor:n,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(true)),new t(r.inputOutput,"force",new e.SFVec3f(0,-9.8,0))]),getTypeName:function(){return"ForcePhysicsModel"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"physics"},addForce:function(e,t,i,s){if(this.enabled_.getValue()){i[e].assign(this.force_.getValue());s[e]=0}}});return n});e("standard/Math/Utility/BVH",["standard/Math/Numbers/Vector3","standard/Math/Geometry/Plane3","standard/Math/Algorithms/QuickSort"],function(e,t,i){"use strict";var s=new e(0,0,0),r=new e(0,0,0),n=new e(0,0,0),a={u:0,v:0,t:0};var o=[new e(0,0,1),new e(0,0,-1),new e(0,1,0),new e(0,-1,0),new e(1,0,0)];function l(e,t){function i(e,s){var r=i.vertices;t=i.axis;return Math.min(r[e+t],r[e+4+t],r[e+8+t])<Math.min(r[s+t],r[s+4+t],r[s+8+t])}i.vertices=e;i.axis=t;return i}function h(e,t){this.vertices=e.vertices;this.normals=e.normals;this.i4=t*12;this.i3=t*9}h.prototype={intersectsLine:function(t,i,o){var l=this.vertices,h=this.normals,c=this.i4,d=this.i3;s.x=l[c];s.y=l[c+1];s.z=l[c+2];r.x=l[c+4];r.y=l[c+5];r.z=l[c+6];n.x=l[c+8];n.y=l[c+9];n.z=l[c+10];if(t.intersectsTriangle(s,r,n,a)){var u=a.u,m=a.v,f=1-u-m;var p=i.size++;if(p>=i.length)i.push(new e(0,0,0));i[p].set(f*l[c]+u*l[c+4]+m*l[c+8],f*l[c+1]+u*l[c+5]+m*l[c+9],f*l[c+2]+u*l[c+6]+m*l[c+10]);if(o){if(p>=o.length)o.push(new e(0,0,0));o[p].set(f*h[d]+u*h[d+3]+m*h[d+6],f*h[d+1]+u*h[d+4]+m*h[d+7],f*h[d+2]+u*h[d+5]+m*h[d+8])}}}};function c(i,a,l,d){this.min=new e(0,0,0);this.max=new e(0,0,0);this.planes=[];this.intersection=new e(0,0,0);var u=i.vertices,m=this.min,f=this.max,p=l+d,_=a[l]*12;m.set(u[_],u[_+1],u[_+2]);f.assign(m);for(var y=l;y<p;++y){_=a[y]*12;s.set(u[_],u[_+1],u[_+2]);r.set(u[_+4],u[_+5],u[_+6]);n.set(u[_+8],u[_+9],u[_+10]);m.min(s,r,n);f.max(s,r,n)}for(var y=0;y<5;++y)this.planes[y]=new t(y%2?m:f,o[y]);if(d>2){i.sorter.compare.axis=this.getLongestAxis(m,f);i.sorter.sort(l,p);var g=d>>>1}else var g=1;var A=d-g;if(g>1)this.left=new c(i,a,l,g);else this.left=new h(i,a[l]);if(A>1)this.right=new c(i,a,l+g,A);else this.right=new h(i,a[l+g])}c.prototype={intersectsLine:function(e,t,i){if(this.intersectsBBox(e)){this.left.intersectsLine(e,t,i);this.right.intersectsLine(e,t,i)}},intersectsBBox:function(e){var t=this.planes,i=this.min,s=this.max,r=i.x,n=s.x,a=i.y,o=s.y,l=i.z,h=s.z,c=this.intersection;if(t[0].intersectsLine(e,c)){if(c.x>=r&&c.x<=n&&c.y>=a&&c.y<=o)return true}if(t[1].intersectsLine(e,c)){if(c.x>=r&&c.x<=n&&c.y>=a&&c.y<=o)return true}if(t[2].intersectsLine(e,c)){if(c.x>=r&&c.x<=n&&c.z>=l&&c.z<=h)return true}if(t[3].intersectsLine(e,c)){if(c.x>=r&&c.x<=n&&c.z>=l&&c.z<=h)return true}if(t[4].intersectsLine(e,c)){if(c.y>=a&&c.y<=o&&c.z>=l&&c.z<=h)return true}return false},getLongestAxis:function(e,t){var i=t.x-e.x,s=t.y-e.y,r=t.z-e.z;if(i<s){if(s<r)return 2;return 1}else{if(i<r)return 2;return 0}}};function d(e,t){this.vertices=e;this.normals=t;var s=e.length/12;switch(s){case 0:{this.root=null;break}case 1:{this.root=new h(this,0);break}default:{var r=[];for(var n=0;n<s;++n)r.push(n);this.sorter=new i(r,l(e,0));this.root=new c(this,r,0,s);break}}}d.prototype={constructor:d,intersectsLine:function(e,t,i){t.size=0;if(this.root){this.root.intersectsLine(e,t,i);return t.size}return 0}};return d});e("x_ite/Components/ParticleSystems/ParticleSystem",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Shape/X3DShapeNode","x_ite/Bits/TraverseType","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","standard/Math/Numbers/Color4","standard/Math/Numbers/Vector3","standard/Math/Numbers/Vector4","standard/Math/Numbers/Matrix4","standard/Math/Numbers/Matrix3","standard/Math/Algorithms/QuickSort","standard/Math/Algorithm","standard/Math/Utility/BVH"],function(e,t,i,s,r,n,a,o,l,h,c,d,u,m,f){"use strict";var p=0,_=p++,y=p++,g=p++,A=p++,x=p++,F=p++;var w={POINT:_,LINE:y,TRIANGLE:g,QUAD:A,GEOMETRY:x,SPRITE:F};var R=new c,v=new l(0,0,0),b=new l(0,0,0),P=new l(0,0,0),S=new l(0,0,0),B=new l(0,0,0),N=new l(0,0,0),C=new l(0,0,0),T=new l(0,0,0),V=new l(0,0,0),D=new l(0,0,0);function M(e,t){return e.distance<t.distance}function z(e){s.call(this,e);this.addType(n.ParticleSystem);this.particleSize_.setUnit("length");this.createParticles=true;this.particles=[];this.velocities=[];this.speeds=[];this.turbulences=[];this.geometryType=_;this.maxParticles=0;this.numParticles=0;this.particleLifetime=0;this.lifetimeVariation=0;this.emitterNode=null;this.forcePhysicsModelNodes=[];this.boundedPhysicsModelNodes=[];this.boundedNormals=[];this.boundedVertices=[];this.boundedVolume=null;this.creationTime=0;this.pauseTime=0;this.deltaTime=0;this.numForces=0;this.colorKeys=[];this.colorRamppNode=null;this.colorRamp=[];this.colorMaterial=false;this.texCoordKeys=[];this.texCoordRampNode=null;this.texCoordRamp=[];this.texCoordAnim=false;this.vertexCount=0;this.shaderNode=this.getBrowser().getPointShader();this.rotation=new d;this.particleSorter=new u(this.particles,M);this.sortParticles=false}z.prototype=Object.assign(Object.create(s.prototype),{constructor:z,fieldDefinitions:new i([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"enabled",new e.SFBool(true)),new t(n.inputOutput,"createParticles",new e.SFBool(true)),new t(n.initializeOnly,"geometryType",new e.SFString("QUAD")),new t(n.inputOutput,"maxParticles",new e.SFInt32(200)),new t(n.inputOutput,"particleLifetime",new e.SFFloat(5)),new t(n.inputOutput,"lifetimeVariation",new e.SFFloat(.25)),new t(n.inputOutput,"particleSize",new e.SFVec2f(.02,.02)),new t(n.initializeOnly,"emitter",new e.SFNode),new t(n.initializeOnly,"physics",new e.MFNode),new t(n.initializeOnly,"colorKey",new e.MFFloat),new t(n.initializeOnly,"colorRamp",new e.SFNode),new t(n.initializeOnly,"texCoordKey",new e.MFFloat),new t(n.initializeOnly,"texCoordRamp",new e.SFNode),new t(n.outputOnly,"isActive",new e.SFBool),new t(n.initializeOnly,"bboxSize",new e.SFVec3f(-1,-1,-1)),new t(n.initializeOnly,"bboxCenter",new e.SFVec3f),new t(n.inputOutput,"appearance",new e.SFNode),new t(n.inputOutput,"geometry",new e.SFNode)]),getTypeName:function(){return"ParticleSystem"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"children"},initialize:function(){s.prototype.initialize.call(this);var e=this.getBrowser().getContext();this.isLive().addInterest("set_live__",this);this.getBrowser().getBrowserOptions().Shading_.addInterest("set_shader__",this);this.enabled_.addInterest("set_enabled__",this);this.createParticles_.addInterest("set_createParticles__",this);this.geometryType_.addInterest("set_geometryType__",this);this.maxParticles_.addInterest("set_enabled__",this);this.particleLifetime_.addInterest("set_particleLifetime__",this);this.lifetimeVariation_.addInterest("set_lifetimeVariation__",this);this.emitter_.addInterest("set_emitter__",this);this.physics_.addInterest("set_physics__",this);this.colorKey_.addInterest("set_color__",this);this.colorRamp_.addInterest("set_colorRamp__",this);this.texCoordKey_.addInterest("set_texCoord__",this);this.texCoordRamp_.addInterest("set_texCoordRamp__",this);this.idBuffer=e.createBuffer();this.positionBuffer=e.createBuffer();this.elapsedTimeBuffer=e.createBuffer();this.lifeBuffer=e.createBuffer();this.colorBuffer=e.createBuffer();this.texCoordBuffers=[e.createBuffer()];this.normalBuffer=e.createBuffer();this.vertexBuffer=e.createBuffer();this.idArray=new Float32Array;this.positionArray=new Float32Array;this.elapsedTimeArray=new Float32Array;this.lifeArray=new Float32Array;this.colorArray=new Float32Array;this.texCoordArray=new Float32Array;this.normalArray=new Float32Array;this.vertexArray=new Float32Array;this.primitiveMode=e.TRIANGLES;this.set_emitter__();this.set_enabled__();this.set_createParticles__();this.set_particleLifetime__();this.set_lifetimeVariation__();this.set_physics__();this.set_colorRamp__();this.set_texCoordRamp__()},set_bbox__:function(){if(this.bboxSize_.getValue().equals(this.defaultBBoxSize))this.bbox.set();else this.bbox.set(this.bboxSize_.getValue(),this.bboxCenter_.getValue());this.bboxSize=this.bbox.size;this.bboxCenter=this.bbox.center},set_transparent__:function(){switch(this.geometryType){case _:{this.setTransparent(true);break}default:{this.setTransparent(this.getAppearance()&&this.getAppearance().transparent_.getValue()||this.colorRampNode&&this.colorRampNode.isTransparent()||this.geometryType===x&&this.geometryNode&&this.geometryNode.transparent_.getValue());break}}},set_live__:function(){if(this.isLive().getValue()){if(this.isActive_.getValue()&&this.maxParticles_.getValue()){this.getBrowser().sensorEvents().addInterest("animateParticles",this);if(this.pauseTime){this.creationTime+=performance.now()/1e3-this.pauseTime;this.pauseTime=0}}}else{if(this.isActive_.getValue()&&this.maxParticles_.getValue()){this.getBrowser().sensorEvents().removeInterest("animateParticles",this);if(this.pauseTime===0)this.pauseTime=performance.now()/1e3}}},set_enabled__:function(){if(this.enabled_.getValue()&&this.maxParticles_.getValue()){if(!this.isActive_.getValue()){if(this.isLive().getValue()){this.getBrowser().sensorEvents().addInterest("animateParticles",this);this.pauseTime=0}else this.pauseTime=performance.now()/1e3;this.isActive_=true}}else{if(this.isActive_.getValue()){if(this.isLive().getValue()){this.getBrowser().sensorEvents().removeInterest("animateParticles",this)}this.isActive_=false;this.numParticles=0}}this.set_maxParticles__()},set_createParticles__:function(){this.createParticles=this.createParticles_.getValue()},set_geometryType__:function(){var e=this.getBrowser().getContext(),t=this.maxParticles;this.geometryType=w[this.geometryType_.getValue()];if(!this.geometryType)this.geometryType=_;switch(this.geometryType){case _:{this.idArray=new Float32Array(t);this.positionArray=new Float32Array(3*t);this.elapsedTimeArray=new Float32Array(t);this.lifeArray=new Float32Array(t);this.colorArray=new Float32Array(4*t);this.texCoordArray=new Float32Array;this.normalArray=new Float32Array;this.vertexArray=new Float32Array(4*t);for(var i=0,s=this.idArray,r=s.length;i<r;++i)s[i]=i;this.colorArray.fill(1);this.vertexArray.fill(1);this.primitiveMode=e.POINTS;this.texCoordCount=0;this.vertexCount=1;break}case y:{this.idArray=new Float32Array(2*t);this.positionArray=new Float32Array(2*3*t);this.elapsedTimeArray=new Float32Array(2*t);this.lifeArray=new Float32Array(2*t);this.colorArray=new Float32Array(2*4*t);this.texCoordArray=new Float32Array;this.normalArray=new Float32Array;this.vertexArray=new Float32Array(2*4*t);for(var i=0,s=this.idArray,r=s.length;i<r;++i)s[i]=Math.floor(i/2);this.colorArray.fill(1);this.vertexArray.fill(1);this.primitiveMode=e.LINES;this.texCoordCount=2;this.vertexCount=2;break}case g:case A:case F:{this.idArray=new Float32Array(6*t);this.positionArray=new Float32Array(6*3*t);this.elapsedTimeArray=new Float32Array(6*t);this.lifeArray=new Float32Array(6*t);this.colorArray=new Float32Array(6*4*t);this.texCoordArray=new Float32Array(6*4*t);this.normalArray=new Float32Array(6*3*t);this.vertexArray=new Float32Array(6*4*t);for(var i=0,s=this.idArray,r=s.length;i<r;++i)s[i]=Math.floor(i/6);this.colorArray.fill(1);this.vertexArray.fill(1);var n=this.texCoordArray,a=this.normalArray;for(var i=0,o=6*3*t;i<o;i+=3){a[i]=0;a[i+1]=0;a[i+2]=1}e.bindBuffer(e.ARRAY_BUFFER,this.normalBuffer);e.bufferData(e.ARRAY_BUFFER,this.normalArray,e.STATIC_DRAW);for(var i=0;i<t;++i){var l=i*24;n[l]=n[l+12]=0;n[l+1]=n[l+13]=0;n[l+2]=n[l+14]=0;n[l+3]=n[l+15]=1;n[l+4]=1;n[l+5]=0;n[l+6]=0;n[l+7]=1;n[l+8]=n[l+16]=1;n[l+9]=n[l+17]=1;n[l+10]=n[l+18]=0;n[l+11]=n[l+19]=1;n[l+20]=0;n[l+21]=1;n[l+22]=0;n[l+23]=1}e.bindBuffer(e.ARRAY_BUFFER,this.texCoordBuffers[0]);e.bufferData(e.ARRAY_BUFFER,this.texCoordArray,e.STATIC_DRAW);this.primitiveMode=e.TRIANGLES;this.texCoordCount=4;this.vertexCount=6;break}case x:{this.texCoordCount=0;this.vertexCount=0;break}}e.bindBuffer(e.ARRAY_BUFFER,this.idBuffer);e.bufferData(e.ARRAY_BUFFER,this.idArray,e.STATIC_DRAW);this.set_shader__();this.set_transparent__()},set_shader__:function(){switch(this.geometryType){case _:{this.shaderGeometryType=0;this.shaderNode=this.getBrowser().getPointShader();break}case y:{this.shaderGeometryType=1;this.shaderNode=this.getBrowser().getLineShader();break}case g:case A:case F:{this.shaderGeometryType=3;this.shaderNode=this.getBrowser().getDefaultShader();break}case x:{this.shaderGeometryType=3;this.shaderNode=this.getBrowser().getDefaultShader();break}}},set_maxParticles__:function(){var e=this.particles,t=Math.max(0,this.maxParticles_.getValue());for(var i=this.numParticles,s=Math.min(e.length,t);i<s;++i){e[i].life=1;e[i].lifetime=-1}for(var i=e.length,s=t;i<s;++i){e[i]={life:1,lifetime:-1,elapsedTime:0,position:new l(0,0,0),velocity:new l(0,0,0),color:new h(1,1,1,1),distance:0}}this.maxParticles=t;this.numParticles=Math.min(this.numParticles,t);if(!this.emitterNode.isExplosive())this.creationTime=performance.now()/1e3;this.set_geometryType__()},set_particleLifetime__:function(){this.particleLifetime=this.particleLifetime_.getValue()},set_lifetimeVariation__:function(){this.lifetimeVariation=this.lifetimeVariation_.getValue()},set_emitter__:function(){this.emitterNode=a(n.X3DParticleEmitterNode,this.emitter_);if(!this.emitterNode)this.emitterNode=this.getBrowser().getDefaultEmitter();this.createParticles=this.createParticles_.getValue()},set_physics__:function(){var e=this.physics_.getValue(),t=this.forcePhysicsModelNodes,i=this.boundedPhysicsModelNodes;for(var s=0,r=i.length;s<r;++s)i[s].removeInterest("set_boundedPhysics__",this);t.length=0;i.length=0;for(var s=0,r=e.length;s<r;++s){try{var a=e[s].getValue().getInnerNode(),o=a.getType();for(var l=o.length-1;l>=0;--l){switch(o[l]){case n.ForcePhysicsModel:case n.WindPhysicsModel:{t.push(a);break}case n.BoundedPhysicsModel:{a.addInterest("set_boundedPhysics__",this);i.push(a);break}default:continue}break}}catch(e){}}this.set_boundedPhysics__()},set_boundedPhysics__:function(){var e=this.boundedPhysicsModelNodes,t=this.boundedNormals,i=this.boundedVertices;t.length=0;i.length=0;for(var s=0,r=e.length;s<r;++s){e[s].addGeometry(t,i)}this.boundedVolume=new f(i,t)},set_colorRamp__:function(){if(this.colorRampNode)this.colorRampNode.removeInterest("set_color__",this);this.colorRampNode=a(n.X3DColorNode,this.colorRamp_);if(this.colorRampNode)this.colorRampNode.addInterest("set_color__",this);this.set_color__();this.set_transparent__()},set_color__:function(){var e=this.colorKey_,t=this.colorKeys,i=this.colorRamp;for(var s=0,r=e.length;s<r;++s)t[s]=e[s];t.length=r;if(this.colorRampNode)this.colorRampNode.getVectors(this.colorRamp);for(var s=i.length,r=e.length;s<r;++s)i[s]=new h(1,1,1,1);i.length=r;this.colorMaterial=Boolean(t.length&&this.colorRampNode)},set_texCoordRamp__:function(){if(this.texCoordRampNode)this.texCoordRampNode.removeInterest("set_texCoord__",this);this.texCoordRampNode=a(n.X3DTextureCoordinateNode,this.texCoordRamp_);if(this.texCoordRampNode)this.texCoordRampNode.addInterest("set_texCoord__",this);this.set_texCoord__()},set_texCoord__:function(){var e=this.texCoordKey_,t=this.texCoordKeys,i=this.texCoordRamp;for(var s=0,r=e.length;s<r;++s)t[s]=e[s];t.length=r;if(this.texCoordRampNode)this.texCoordRampNode.getTexCoord(i);for(var s=i.length,r=e.length*this.texCoordCount;s<r;++s)i[s]=new h(0,0,0,0);i.length=r;this.texCoordAnim=Boolean(t.length&&this.texCoordRampNode)},intersectsBox:function(e,t){},animateParticles:function(){var e=this.emitterNode;var t=15,i=1/Math.max(10,this.getBrowser().getCurrentFrameRate());var s=this.deltaTime=((t-1)*this.deltaTime+i)/t;if(e.isExplosive()){var r=performance.now()/1e3,n=this.particleLifetime+this.particleLifetime*this.lifetimeVariation;if(this.numParticles===0||r-this.creationTime>n){this.creationTime=r;this.numParticles=this.maxParticles;this.createParticles=this.createParticles_.getValue();s=Number.POSITIVE_INFINITY}else this.createParticles=false}else{if(this.numParticles<this.maxParticles){var r=performance.now()/1e3,a=Math.max(0,Math.floor((r-this.creationTime)*this.maxParticles/this.particleLifetime));if(a)this.creationTime=r;this.numParticles=Math.floor(Math.min(this.maxParticles,this.numParticles+a))}}if(e.getMass()){var o=this.forcePhysicsModelNodes,h=this.velocities,c=this.speeds,d=this.turbulences,u=this.deltaTime/e.getMass();for(var m=h.length,f=o.length;m<f;++m)h[m]=new l(0,0,0);for(var m=0,f=o.length;m<f;++m)o[m].addForce(m,e,h,d);for(var m=0,f=h.length;m<f;++m){h[m].multiply(u);c[m]=h[m].abs()}this.numForces=f}else{this.numForces=0}e.animate(this,s);this.updateGeometry(null);this.getBrowser().addBrowserEvent()},updateGeometry:function(e){switch(this.geometryType){case _:if(!e)this.updatePoint();break;case y:if(!e)this.updateLine();break;case g:case A:case F:this.updateQuad(e);break;case x:break}},updatePoint:function(){var e=this.getBrowser().getContext(),t=this.particles,i=this.numParticles,s=this.positionArray,r=this.elapsedTimeArray,n=this.lifeArray,a=this.colorArray,o=this.vertexArray;if(this.colorMaterial){for(var l=0;l<i;++l){var h=t[l].color,c=l*4;a[c]=h.x;a[c+1]=h.y;a[c+2]=h.z;a[c+3]=h.w}e.bindBuffer(e.ARRAY_BUFFER,this.colorBuffer);e.bufferData(e.ARRAY_BUFFER,this.colorArray,e.STATIC_DRAW)}for(var l=0;l<i;++l){var d=t[l].position,u=t[l].elapsedTime/t[l].lifetime,m=l*3,c=l*4;s[m]=d.x;s[m+1]=d.y;s[m+2]=d.z;r[l]=u;n[l]=t[l].life;o[c]=d.x;o[c+1]=d.y;o[c+2]=d.z}e.bindBuffer(e.ARRAY_BUFFER,this.positionBuffer);e.bufferData(e.ARRAY_BUFFER,this.positionArray,e.STATIC_DRAW);e.bindBuffer(e.ARRAY_BUFFER,this.elapsedTimeBuffer);e.bufferData(e.ARRAY_BUFFER,this.elapsedTimeArray,e.STATIC_DRAW);e.bindBuffer(e.ARRAY_BUFFER,this.lifeBuffer);e.bufferData(e.ARRAY_BUFFER,this.lifeArray,e.STATIC_DRAW);e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer);e.bufferData(e.ARRAY_BUFFER,this.vertexArray,e.STATIC_DRAW)},updateLine:function(){var e=this.getBrowser().getContext(),t=this.particles,i=this.numParticles,s=this.positionArray,r=this.elapsedTimeArray,n=this.lifeArray,a=this.colorArray,o=this.vertexArray,l=this.particleSize_.y/2;if(this.colorMaterial){for(var h=0;h<i;++h){var c=t[h].color,d=h*8;a[d]=c.x;a[d+1]=c.y;a[d+2]=c.z;a[d+3]=c.w;a[d+4]=c.x;a[d+5]=c.y;a[d+6]=c.z;a[d+7]=c.w}e.bindBuffer(e.ARRAY_BUFFER,this.colorBuffer);e.bufferData(e.ARRAY_BUFFER,this.colorArray,e.STATIC_DRAW)}for(var h=0;h<i;++h){var u=t[h],m=u.position,f=t[h].elapsedTime/t[h].lifetime,p=t[h].life,_=m.x,y=m.y,g=m.z,A=h*2,x=h*6,d=h*8;s[x]=_;s[x+1]=y;s[x+2]=g;s[x+3]=_;s[x+4]=y;s[x+5]=g;r[A]=f;r[A+1]=f;n[A]=p;n[A+1]=p;S.assign(u.velocity).normalize().multiply(l);o[d]=_-S.x;o[d+1]=y-S.y;o[d+2]=g-S.z;o[d+4]=_+S.x;o[d+5]=y+S.y;o[d+6]=g+S.z}e.bindBuffer(e.ARRAY_BUFFER,this.positionBuffer);e.bufferData(e.ARRAY_BUFFER,this.positionArray,e.STATIC_DRAW);e.bindBuffer(e.ARRAY_BUFFER,this.elapsedTimeBuffer);e.bufferData(e.ARRAY_BUFFER,this.elapsedTimeArray,e.STATIC_DRAW);e.bindBuffer(e.ARRAY_BUFFER,this.lifeBuffer);e.bufferData(e.ARRAY_BUFFER,this.lifeArray,e.STATIC_DRAW);e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer);e.bufferData(e.ARRAY_BUFFER,this.vertexArray,e.STATIC_DRAW)},updateQuad:function(e){try{var t=this.getBrowser().getContext(),i=this.particles,s=this.maxParticles,r=this.numParticles,n=this.positionArray,a=this.elapsedTimeArray,o=this.lifeArray,l=this.colorArray,h=this.texCoordArray,c=this.normalArray,d=this.vertexArray,u=this.particleSize_.x/2,f=this.particleSize_.y/2;if(!e){if(this.colorMaterial){for(var p=0;p<s;++p){var _=i[p].color,y=p*24;l[y]=l[y+4]=l[y+8]=l[y+12]=l[y+16]=l[y+20]=_.x;l[y+1]=l[y+5]=l[y+9]=l[y+13]=l[y+17]=l[y+21]=_.y;l[y+2]=l[y+6]=l[y+10]=l[y+14]=l[y+18]=l[y+22]=_.z;l[y+3]=l[y+7]=l[y+11]=l[y+15]=l[y+19]=l[y+23]=_.w}t.bindBuffer(t.ARRAY_BUFFER,this.colorBuffer);t.bufferData(t.ARRAY_BUFFER,this.colorArray,t.STATIC_DRAW)}if(this.texCoordAnim&&this.texCoordArray.length){var g=this.texCoordKeys,A=this.texCoordRamp;var x=g.length,w=0;for(var p=0;p<s;++p){var R=i[p],v=R.elapsedTime/R.lifetime;if(x==1||v<=g[0]){w=0}else if(v>=g[x-1]){w=x-2}else{var b=m.upperBound(g,0,x,v,m.less);if(b<x)w=b-1;else w=0}
w*=this.texCoordCount;var V=A[w],D=A[w+1],M=A[w+2],z=A[w+3],y=p*24;h[y]=h[y+12]=V.x;h[y+1]=h[y+13]=V.y;h[y+2]=h[y+14]=V.z;h[y+3]=h[y+15]=V.w;h[y+4]=D.x;h[y+5]=D.y;h[y+6]=D.z;h[y+7]=D.w;h[y+8]=h[y+16]=M.x;h[y+9]=h[y+17]=M.y;h[y+10]=h[y+18]=M.z;h[y+11]=h[y+19]=M.w;h[y+20]=z.x;h[y+21]=z.y;h[y+22]=z.z;h[y+23]=z.w}t.bindBuffer(t.ARRAY_BUFFER,this.texCoordBuffers[0]);t.bufferData(t.ARRAY_BUFFER,this.texCoordArray,t.STATIC_DRAW)}}if(this.geometryType===F){if(e){var I=this.getScreenAlignedRotation(e);S.set(I[0],I[1],I[2]).cross(P.set(I[3],I[4],I[5])).normalize();var E=S.x,O=S.y,U=S.z;for(var p=0,x=6*3*s;p<x;p+=3){c[p]=E;c[p+1]=O;c[p+2]=U}t.bindBuffer(t.ARRAY_BUFFER,this.normalBuffer);t.bufferData(t.ARRAY_BUFFER,this.normalArray,t.STATIC_DRAW);B.set(-u,-f,0);N.set(u,-f,0);C.set(u,f,0);T.set(-u,f,0);I.multVecMatrix(B);I.multVecMatrix(N);I.multVecMatrix(C);I.multVecMatrix(T);for(var p=0;p<r;++p){var Y=i[p].position,L=i[p].elapsedTime/i[p].lifetime,X=Y.x,W=Y.y,k=Y.z,G=p*6,j=p*18,y=p*24;n[j]=n[j+3]=n[j+6]=n[j+9]=n[j+12]=n[j+15]=X;n[j+1]=n[j+4]=n[j+7]=n[j+10]=n[j+13]=n[j+16]=W;n[j+2]=n[j+5]=n[j+8]=n[j+11]=n[j+14]=n[j+17]=k;a[G]=a[G+1]=a[G+2]=a[G+3]=a[G+4]=a[G+5]=L;o[G]=o[G+1]=o[G+2]=o[G+3]=o[G+4]=o[G+5]=i[p].life;d[y]=d[y+12]=X+B.x;d[y+1]=d[y+13]=W+B.y;d[y+2]=d[y+14]=k+B.z;d[y+4]=X+N.x;d[y+5]=W+N.y;d[y+6]=k+N.z;d[y+8]=d[y+16]=X+C.x;d[y+9]=d[y+17]=W+C.y;d[y+10]=d[y+18]=k+C.z;d[y+20]=X+T.x;d[y+21]=W+T.y;d[y+22]=k+T.z}t.bindBuffer(t.ARRAY_BUFFER,this.positionBuffer);t.bufferData(t.ARRAY_BUFFER,this.positionArray,t.STATIC_DRAW);t.bindBuffer(t.ARRAY_BUFFER,this.elapsedTimeBuffer);t.bufferData(t.ARRAY_BUFFER,this.elapsedTimeArray,t.STATIC_DRAW);t.bindBuffer(t.ARRAY_BUFFER,this.lifeBuffer);t.bufferData(t.ARRAY_BUFFER,this.lifeArray,t.STATIC_DRAW);t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer);t.bufferData(t.ARRAY_BUFFER,this.vertexArray,t.STATIC_DRAW)}}else{if(!e){for(var p=0;p<r;++p){var Y=i[p].position,L=i[p].elapsedTime/i[p].lifetime,X=Y.x,W=Y.y,k=Y.z,G=p*6,j=p*18,y=p*24;n[j]=n[j+3]=n[j+6]=n[j+9]=n[j+12]=n[j+15]=X;n[j+1]=n[j+4]=n[j+7]=n[j+10]=n[j+13]=n[j+16]=W;n[j+2]=n[j+5]=n[j+8]=n[j+11]=n[j+14]=n[j+17]=k;a[G]=a[G+1]=a[G+2]=a[G+3]=a[G+4]=a[G+5]=L;o[G]=o[G+1]=o[G+2]=o[G+3]=o[G+4]=o[G+5]=i[p].life;d[y]=d[y+12]=X-u;d[y+1]=d[y+13]=W-f;d[y+2]=d[y+14]=k;d[y+4]=X+u;d[y+5]=W-f;d[y+6]=k;d[y+8]=d[y+16]=X+u;d[y+9]=d[y+17]=W+f;d[y+10]=d[y+18]=k;d[y+20]=X-u;d[y+21]=W+f;d[y+22]=k}t.bindBuffer(t.ARRAY_BUFFER,this.positionBuffer);t.bufferData(t.ARRAY_BUFFER,this.positionArray,t.STATIC_DRAW);t.bindBuffer(t.ARRAY_BUFFER,this.elapsedTimeBuffer);t.bufferData(t.ARRAY_BUFFER,this.elapsedTimeArray,t.STATIC_DRAW);t.bindBuffer(t.ARRAY_BUFFER,this.lifeBuffer);t.bufferData(t.ARRAY_BUFFER,this.lifeArray,t.STATIC_DRAW);t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer);t.bufferData(t.ARRAY_BUFFER,this.vertexArray,t.STATIC_DRAW)}}}catch(e){console.log(e)}},traverse:function(e,t){if(!this.isActive_.getValue())return;switch(e){case r.POINTER:{break}case r.COLLISION:{break}case r.DEPTH:{t.addDepthShape(this);break}case r.DISPLAY:{if(t.addDisplayShape(this))this.getAppearance().traverse(e,t);break}}if(this.geometryType===x){if(this.getGeometry())this.getGeometry().traverse(e,t)}},depth:function(e,t,i){this.updateGeometry(t.modelViewMatrix);if(this.geometryType===x){var s=this.getGeometry();if(s)s.displayParticlesDepth(e,t,i,this.particles,this.numParticles)}else{if(this.numParticles<=0)return;i.enableFloatAttrib(e,"x3d_ParticleId",this.idBuffer,1);i.enableFloatAttrib(e,"x3d_ParticlePosition",this.positionBuffer,3);i.enableFloatAttrib(e,"x3d_ParticleElapsedTime",this.elapsedTimeBuffer,1);i.enableFloatAttrib(e,"x3d_ParticleLife",this.lifeBuffer,1);i.enableVertexAttribute(e,this.vertexBuffer);e.drawArrays(this.primitiveMode,0,this.numParticles*this.vertexCount);i.disableFloatAttrib(e,"x3d_ParticleId");i.disableFloatAttrib(e,"x3d_ParticlePosition");i.disableFloatAttrib(e,"x3d_ParticleElapsedTime");i.disableFloatAttrib(e,"x3d_ParticleLife")}},display:function(e,t){try{if(this.numParticles<=0)return;this.getAppearance().enable(e,t);this.updateGeometry(t.modelViewMatrix);if(this.geometryType===x){var i=this.getGeometry();if(i)i.displayParticles(e,t,this.particles,this.numParticles)}else{var s=t.renderer.getBrowser(),r=t.shaderNode;if(r===s.getDefaultShader())r=this.shaderNode;t.geometryType=this.shaderGeometryType;t.colorMaterial=this.colorMaterial;r.enable(e);r.setLocalUniforms(e,t);r.enableFloatAttrib(e,"x3d_ParticleId",this.idBuffer,1);r.enableFloatAttrib(e,"x3d_ParticlePosition",this.positionBuffer,3);r.enableFloatAttrib(e,"x3d_ParticleElapsedTime",this.elapsedTimeBuffer,1);r.enableFloatAttrib(e,"x3d_ParticleLife",this.lifeBuffer,1);if(this.colorMaterial)r.enableColorAttribute(e,this.colorBuffer);if(this.texCoordArray.length)r.enableTexCoordAttribute(e,this.texCoordBuffers);if(this.normalArray.length)r.enableNormalAttribute(e,this.normalBuffer);r.enableVertexAttribute(e,this.vertexBuffer);var n=false;switch(this.geometryType){case _:case y:break;case g:case A:case F:n=true;break;case x:break}if(r.wireframe&&n){for(var a=0,o=this.numParticles*this.vertexCount;a<o;a+=3)e.drawArrays(r.primitiveMode,a,3)}else{var l=c.prototype.determinant3.call(t.modelViewMatrix)>0;e.frontFace(l?e.CCW:e.CW);e.enable(e.CULL_FACE);e.cullFace(e.BACK);e.drawArrays(this.primitiveMode,0,this.numParticles*this.vertexCount)}r.disableFloatAttrib(e,"x3d_ParticleId");r.disableFloatAttrib(e,"x3d_ParticlePosition");r.disableFloatAttrib(e,"x3d_ParticleElapsedTime");r.disableFloatAttrib(e,"x3d_ParticleLife");r.disableColorAttribute(e);r.disableTexCoordAttribute(e);r.disableNormalAttribute(e);r.disable(e)}this.getAppearance().disable(e,t)}catch(e){console.log(e)}},getScreenAlignedRotation:function(e){R.assign(e).inverse();R.multDirMatrix(v.assign(l.zAxis));R.multDirMatrix(b.assign(l.yAxis));V.assign(b).cross(v);D.assign(v).cross(V);var t=v;V.normalize();D.normalize();t.normalize();return this.rotation.set(V.x,V.y,V.z,D.x,D.y,D.z,t.x,t.y,t.z)}});return z});e("x_ite/Components/ParticleSystems/PolylineEmitter",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Components/Rendering/IndexedLineSet","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Algorithm"],function(e,t,i,s,r,n,a,o){"use strict";var l=new a(0,0,0),h=new a(0,0,0);function c(e){s.call(this,e);this.addType(n.PolylineEmitter);this.speed_.setUnit("speed");this.mass_.setUnit("mass");this.surfaceArea_.setUnit("area");this.direction=new a(0,0,0);this.polylineNode=new r(e);this.polylines=[];this.lengthSoFarArray=[0]}c.prototype=Object.assign(Object.create(s.prototype),{constructor:c,fieldDefinitions:new i([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(n.inputOutput,"speed",new e.SFFloat),new t(n.inputOutput,"variation",new e.SFFloat(.25)),new t(n.initializeOnly,"mass",new e.SFFloat),new t(n.initializeOnly,"surfaceArea",new e.SFFloat),new t(n.inputOutput,"coordIndex",new e.MFInt32(-1)),new t(n.inputOutput,"coord",new e.SFNode)]),getTypeName:function(){return"PolylineEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this);this.direction_.addInterest("set_direction__",this);this.coordIndex_.addFieldInterest(this.polylineNode.coordIndex_);this.coord_.addFieldInterest(this.polylineNode.coord_);this.polylineNode.coordIndex_=this.coordIndex_;this.polylineNode.coord_=this.coord_;this.polylineNode.rebuild_.addInterest("set_polyline",this);this.polylineNode.setPrivate(true);this.polylineNode.setup();this.set_direction__();this.set_polyline()},set_direction__:function(){this.direction.assign(this.direction_.getValue()).normalize();if(this.direction.equals(a.Zero))this.getRandomVelocity=this.getSphericalRandomVelocity;else delete this.getRandomVelocity},set_polyline:function(){var e=this.vertices=this.polylineNode.getVertices().getValue();if(e.length){delete this.getRandomPosition;var t=0,i=this.lengthSoFarArray;i.length=1;for(var s=0,r=e.length;s<r;s+=8){l.set(e[s],e[s+1],e[s+2]);h.set(e[s+4],e[s+5],e[s+6]);t+=h.subtract(l).abs();i.push(t)}}else{this.getRandomPosition=d}},getRandomPosition:function(e){var t=this.lengthSoFarArray,i=t.length,s=Math.random()*t[i-1],r=0,n=0,a=0;if(i==1||s<=t[0]){r=0;a=0}else if(s>=t[i-1]){r=i-2;a=1}else{var c=o.upperBound(t,0,i,s,o.less);if(c<i){n=c;r=c-1;var d=t[r],u=t[n];a=o.clamp((s-d)/(u-d),0,1)}else{r=0;a=0}}r*=8;n=r+4;var m=this.vertices;l.set(m[r],m[r+1],m[r+2]);h.set(m[n],m[n+1],m[n+2]);e.x=l.x+a*(h.x-l.x);e.y=l.y+a*(h.y-l.y);e.z=l.z+a*(h.z-l.z);return e},getRandomVelocity:function(e){var t=this.direction,i=this.getRandomSpeed();e.x=t.x*i;e.y=t.y*i;e.z=t.z*i;return e}});function d(e){return e.set(0,0,0)}return c});e("x_ite/Components/ParticleSystems/SurfaceEmitter",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","standard/Math/Geometry/Triangle3","standard/Math/Numbers/Vector3","standard/Math/Algorithm"],function(e,t,i,s,r,n,a,o,l){"use strict";var h=new o(0,0,0),c=new o(0,0,0),d=new o(0,0,0),u=new o(0,0,0);function m(e){s.call(this,e);this.addType(r.SurfaceEmitter);this.speed_.setUnit("speed");this.mass_.setUnit("mass");this.surfaceArea_.setUnit("area");this.surfaceNode=null;this.areaSoFarArray=[0]}m.prototype=Object.assign(Object.create(s.prototype),{constructor:m,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"speed",new e.SFFloat),new t(r.inputOutput,"variation",new e.SFFloat(.25)),new t(r.initializeOnly,"mass",new e.SFFloat),new t(r.initializeOnly,"surfaceArea",new e.SFFloat),new t(r.initializeOnly,"surface",new e.SFNode)]),getTypeName:function(){return"SurfaceEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this);this.surface_.addInterest("set_surface__",this);this.set_surface__()},set_surface__:function(){if(this.surfaceNode)this.surfaceNode.rebuild_.removeInterest("set_geometry__",this);this.surfaceNode=n(r.X3DGeometryNode,this.surface_);if(this.surfaceNode)this.surfaceNode.rebuild_.addInterest("set_geometry__",this);this.set_geometry__()},set_geometry__:function(){if(this.surfaceNode){delete this.getRandomPosition;delete this.getRandomVelocity;var e=0,t=this.areaSoFarArray,i=this.surfaceNode.getVertices().getValue();this.normals=this.surfaceNode.getNormals().getValue();this.vertices=i;t.length=1;for(var s=0,r=i.length;s<r;s+=12){h.set(i[s],i[s+1],i[s+2]);c.set(i[s+4],i[s+5],i[s+6]);d.set(i[s+8],i[s+9],i[s+10]);e+=a.area(h,c,d);t.push(e)}}else{this.getRandomPosition=f;this.getRandomVelocity=this.getSphericalRandomVelocity;u.set(0,0,0)}},getRandomPosition:function(e){var t=this.areaSoFarArray,i=t.length,s=Math.random()*t[i-1],r=0;if(i==1||s<=t[0]){r=0}else if(s>=t[i-1]){r=i-2}else{var n=l.upperBound(t,0,i,s,l.less);if(n<i){r=n-1}else{r=0}}var a=Math.random(),o=Math.random();if(a+o>1){a=1-a;o=1-o}var h=r*12,c=this.vertices;var d=1-a-o;e.x=a*c[h]+o*c[h+4]+d*c[h+8];e.y=a*c[h+1]+o*c[h+5]+d*c[h+9];e.z=a*c[h+2]+o*c[h+6]+d*c[h+10];var h=r*9,m=this.normals;u.x=a*m[h]+o*m[h+3]+d*m[h+6];u.y=a*m[h+1]+o*m[h+4]+d*m[h+7];u.z=a*m[h+2]+o*m[h+5]+d*m[h+8];return e},getRandomVelocity:function(e){var t=this.getRandomSpeed();e.x=u.x*t;e.y=u.y*t;e.z=u.z*t;return e}});function f(e){return e.set(0,0,0)}return m});e("x_ite/Components/ParticleSystems/VolumeEmitter",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Components/Geometry3D/IndexedFaceSet","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Geometry/Line3","standard/Math/Geometry/Plane3","standard/Math/Geometry/Triangle3","standard/Math/Algorithm","standard/Math/Utility/BVH","standard/Math/Algorithms/QuickSort"],function(e,t,i,s,r,n,a,o,l,h,c,d,u,m){"use strict";var f=new a(0,0,0),p=new a(0,0,0),_=new a(0,0,0),y=new a(0,0,0),g=new a(0,0,0),A=new o(0,0,1,0),x=new l(a.Zero,a.zAxis),F=new h(a.Zero,a.zAxis);function w(e,t){return F.getDistanceToPoint(e)<F.getDistanceToPoint(t)}function R(e){s.call(this,e);this.addType(n.VolumeEmitter);this.speed_.setUnit("speed");this.mass_.setUnit("mass");this.surfaceArea_.setUnit("area");this.direction=new a(0,0,0);this.volumeNode=new r(e);this.areaSoFarArray=[0];this.intersections=[];this.sorter=new m(this.intersections,w)}R.prototype=Object.assign(Object.create(s.prototype),{constructor:R,fieldDefinitions:new i([new t(n.inputOutput,"metadata",new e.SFNode),new t(n.initializeOnly,"internal",new e.SFBool(true)),new t(n.inputOutput,"direction",new e.SFVec3f(0,1,0)),new t(n.inputOutput,"speed",new e.SFFloat),new t(n.inputOutput,"variation",new e.SFFloat(.25)),new t(n.initializeOnly,"mass",new e.SFFloat),new t(n.initializeOnly,"surfaceArea",new e.SFFloat),new t(n.inputOutput,"coordIndex",new e.MFInt32(-1)),new t(n.inputOutput,"coord",new e.SFNode)]),getTypeName:function(){return"VolumeEmitter"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"emitter"},initialize:function(){s.prototype.initialize.call(this);this.direction_.addInterest("set_direction__",this);this.coordIndex_.addFieldInterest(this.volumeNode.coordIndex_);this.coord_.addFieldInterest(this.volumeNode.coord_);this.volumeNode.creaseAngle_=Math.PI;this.volumeNode.convex_=false;this.volumeNode.coordIndex_=this.coordIndex_;this.volumeNode.coord_=this.coord_;this.volumeNode.rebuild_.addInterest("set_geometry__",this);this.volumeNode.setPrivate(true);this.volumeNode.setup();this.set_direction__();this.set_geometry__()},set_direction__:function(){this.direction.assign(this.direction_.getValue()).normalize();if(this.direction.equals(a.Zero))this.getRandomVelocity=this.getSphericalRandomVelocity;else delete this.getRandomVelocity},set_geometry__:function(){var e=0,t=this.areaSoFarArray,i=this.volumeNode.getNormals().getValue(),s=this.volumeNode.getVertices().getValue();this.normals=i;this.vertices=s;t.length=1;for(var r=0,n=s.length;r<n;r+=12){f.set(s[r],s[r+1],s[r+2]);p.set(s[r+4],s[r+5],s[r+6]);_.set(s[r+8],s[r+9],s[r+10]);e+=c.area(f,p,_);t.push(e)}this.bvh=new u(s,i)},getRandomPosition:function(e){var t=this.areaSoFarArray,i=t.length,s=Math.random()*t[i-1],r=0;if(i==1||s<=t[0]){r=0}else if(s>=t[i-1]){r=i-2}else{var n=d.upperBound(t,0,i,s,d.less);if(n<i){r=n-1}else{r=0}}var o=Math.random(),l=Math.random();if(o+l>1){o=1-o;l=1-l}var h=1-o-l;var c=r*12,u=this.vertices;y.x=o*u[c]+l*u[c+4]+h*u[c+8];y.y=o*u[c+1]+l*u[c+5]+h*u[c+9];y.z=o*u[c+2]+l*u[c+6]+h*u[c+10];var c=r*9,m=this.normals;g.x=o*m[c]+l*m[c+3]+h*m[c+6];g.y=o*m[c+1]+l*m[c+4]+h*m[c+7];g.z=o*m[c+2]+l*m[c+5]+h*m[c+8];A.setFromToVec(a.zAxis,g);A.multVecRot(this.getRandomSurfaceNormal(g));x.set(y,g);F.set(y,g);var f=this.intersections,p=this.bvh.intersectsLine(x,f);p-=p%2;if(p){this.sorter.sort(0,p);var n=Math.round(this.getRandomValue(0,p/2-1))*2,_=f[n],w=f[n+1],h=Math.random();e.x=_.x+(w.x-_.x)*h;e.y=_.y+(w.y-_.y)*h;e.z=_.z+(w.z-_.z)*h;return e}return e.set(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)},getRandomVelocity:function(e){var t=this.direction,i=this.getRandomSpeed();e.x=t.x*i;e.y=t.y*i;e.z=t.z*i;return e}});return R});e("x_ite/Components/ParticleSystems/WindPhysicsModel",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector3","standard/Math/Algorithm"],function(e,t,i,s,r,n,a){"use strict";var o=new n(0,0,0);function l(e){s.call(this,e);this.addType(r.WindPhysicsModel);this.speed_.setUnit("speed")}l.prototype=Object.assign(Object.create(s.prototype),{constructor:l,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"enabled",new e.SFBool(true)),new t(r.inputOutput,"direction",new e.SFVec3f),new t(r.inputOutput,"speed",new e.SFFloat(.1)),new t(r.inputOutput,"gustiness",new e.SFFloat(.1)),new t(r.inputOutput,"turbulence",new e.SFFloat)]),getTypeName:function(){return"WindPhysicsModel"},getComponentName:function(){return"ParticleSystems"},getContainerField:function(){return"physics"},getRandomSpeed:function(e){var t=Math.max(0,this.speed_.getValue()),i=t*Math.max(0,this.gustiness_.getValue());return e.getRandomValue(Math.max(0,t-i),t+i)},addForce:function(e,t,i,s){var r=t.surfaceArea_.getValue();if(this.enabled_.getValue()){var l=this.getRandomSpeed(t),h=Math.pow(10,2*Math.log(l))*.64615;if(this.direction_.getValue().equals(n.Zero))t.getRandomNormal(o);else o.assign(this.direction_.getValue()).normalize();i[e].assign(o.multiply(r*h));s[e]=Math.PI*a.clamp(this.turbulence_.getValue(),0,1)}}});return l});e(["x_ite/Components","x_ite/Browser/ParticleSystems/X3DParticleSystemsContext","x_ite/Components/ParticleSystems/BoundedPhysicsModel","x_ite/Components/ParticleSystems/ConeEmitter","x_ite/Components/ParticleSystems/ExplosionEmitter","x_ite/Components/ParticleSystems/ForcePhysicsModel","x_ite/Components/ParticleSystems/ParticleSystem","x_ite/Components/ParticleSystems/PointEmitter","x_ite/Components/ParticleSystems/PolylineEmitter","x_ite/Components/ParticleSystems/SurfaceEmitter","x_ite/Components/ParticleSystems/VolumeEmitter","x_ite/Components/ParticleSystems/WindPhysicsModel","x_ite/Components/ParticleSystems/X3DParticleEmitterNode","x_ite/Components/ParticleSystems/X3DParticlePhysicsModelNode"],function(e,t,i,s,r,n,a,o,l,h,c,d,u,m){"use strict";e.addComponent({name:"ParticleSystems",types:{BoundedPhysicsModel:i,ConeEmitter:s,ExplosionEmitter:r,ForcePhysicsModel:n,ParticleSystem:a,PointEmitter:o,PolylineEmitter:l,SurfaceEmitter:h,VolumeEmitter:c,WindPhysicsModel:d},abstractTypes:{X3DParticleEmitterNode:u,X3DParticlePhysicsModelNode:m},browser:t.prototype})})})();
