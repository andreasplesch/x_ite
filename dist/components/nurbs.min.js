(function(){var e=X3D.define,t=X3D.require;e("x_ite/Components/NURBS/Contour2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function o(e){n.call(this,e);this.addType(r.Contour2D)}o.prototype=Object.assign(Object.create(n.prototype),{constructor:o,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOnly,"addChildren",new e.MFNode),new t(r.inputOnly,"removeChildren",new e.MFNode),new t(r.inputOutput,"children",new e.MFNode)]),getTypeName:function(){return"Contour2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"trimmingContour"}});return o});e("x_ite/Components/NURBS/X3DNurbsControlCurveNode",["x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants"],function(e,t){"use strict";function i(i){e.call(this,i);this.addType(t.X3DNurbsControlCurveNode)}i.prototype=Object.assign(Object.create(e.prototype),{constructor:i});return i});e("x_ite/Components/NURBS/ContourPolyline2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function o(e){n.call(this,e);this.addType(r.ContourPolyline2D);this.controlPoints=[]}o.prototype=Object.assign(Object.create(n.prototype),{constructor:o,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"controlPoint",new e.MFVec2d)]),getTypeName:function(){return"ContourPolyline2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},tessellate:function(e){var t=this.controlPoint_.getValue(),i=this.controlPoints;if(e){for(var n=0,r=this.controlPoint_.length;n<r;++n){var o=n*2,s=n*3;i[s+0]=t[o+0];i[s+1]=0;i[s+2]=t[o+1]}i.length=r*3}else{for(var n=0,r=this.controlPoint_.length;n<r;++n){var o=n*2;i[o+0]=t[o+0];i[o+1]=t[o+1]}i.length=r*2}return i}});return o});e("x_ite/Components/NURBS/CoordinateDouble",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Rendering/X3DCoordinateNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function o(e){n.call(this,e);this.addType(r.CoordinateDouble)}o.prototype=Object.assign(Object.create(n.prototype),{constructor:o,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"point",new e.MFVec3d)]),getTypeName:function(){return"CoordinateDouble"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"coord"}});return o});e("x_ite/Browser/NURBS/NURBS",["standard/Math/Numbers/Vector2","standard/Math/Numbers/Vector3","standard/Math/Numbers/Vector4"],function(e,t,i){"use strict";var n={getTessellation:function(e,t){if(e>0)return e+1;if(e<0)return-e*t+1;return 2*t+1},getClosed2D:function(e,t,i,n){var r=n.length,o=i.length===r;if(o){if(i[0]!==i[r-1])return false}if(!n[0].equals(n[r-1]))return false;if(!this.isPeriodic(e,r,t))return false;return true},getClosed:function(){var e=new t(0,0,0),i=new t(0,0,0);return function(t,n,r,o){var s=o.getSize(),u=r.length===s;if(u){if(r[0]!==r[s-1])return false}if(!o.get1Point(0,e).equals(o.get1Point(s-1,i)))return false;if(!this.isPeriodic(t,s,n))return false;return true}}(),getUClosed:function(){var e=new t(0,0,0),i=new t(0,0,0);return function(t,n,r,o,s,u){var a=s.length===u.getSize();for(var l=0,h=r;l<h;++l){var d=l*n,c=l*n+n-1;if(a){if(s[d]!==s[c])return false}if(!u.get1Point(d,e).equals(u.get1Point(c,i)))return false}if(!this.isPeriodic(t,n,o))return false;return true}}(),getVClosed:function(){var e=new t(0,0,0),i=new t(0,0,0);return function(t,n,r,o,s,u){var a=s.length===u.getSize();for(var l=0,h=n;l<h;++l){var d=l,c=(r-1)*n+l;if(a){if(s[d]!==s[c])return false}if(!u.get1Point(d,e).equals(u.get1Point(c,i)))return false}if(!this.isPeriodic(t,r,o))return false;return true}}(),isPeriodic:function(e,t,i){if(i.length===t+e){{var n=1;for(var r=1,o=e;r<o;++r){n+=i[r]===i[0]}if(n===e)return false}{var n=1;for(var r=i.length-e,o=i.length-1;r<o;++r){n+=i[r]===i[o]}if(n===e)return false}}return true},getKnots:function(e,t,i,n,r){var o=e||[];for(var s=0,u=r.length;s<u;++s)o[s]=r[s];o.length=r.length;var a=true;if(o.length===n+i){a=false;var l=0;for(var s=1,u=o.length;s<u;++s){if(o[s]==o[s-1])++l;else l=0;if(l>i-1)a=true;if(o[s-1]>o[s])a=true}}if(a){for(var s=0,u=n+i;s<u;++s)o[s]=s/(u-1)}if(t){for(var s=1,u=i-1;s<u;++s)o.push(o[o.length-1]+(o[s]-o[s-1]))}return o},getWeights:function(e,t,i,n,r){if(r.length!==n)return undefined;var o=e||[];for(var s=0;s<n;++s){o[s]=r[s]}o.length=n;if(t){for(var s=1,u=i-1;s<u;++s)o.push(o[s])}return o},getUVWeights:function(e,t,i,n,r,o,s,u){if(u.length!==o*s)return undefined;var a=e||[];for(var l=0;l<o;++l){var h=a[l];if(!h)h=a[l]=[];for(var d=0;d<s;++d){h[d]=u[d*o+l]}h.length=s;if(i){for(var c=1,f=r-1;c<f;++c)h.push(h[c])}}a.length=o;if(t){for(var c=1,f=n-1;c<f;++c)a.push(a[c])}return a},getControlPoints2D:function(t,i,n,r){var o=t||[],s=r.getValue(),u=r.length;for(var a=0;a<u;++a){var l=a*2,h=o[a]||new e(0,0);o[a]=h.set(s[l+0],s[l+1])}o.length=u;if(i){for(var a=1,d=n-1;a<d;++a)o.push(o[a])}return o},getControlPoints:function(e,i,n,r){var o=e||[],s=r.getSize();for(var u=0;u<s;++u){o[u]=r.get1Point(u,o[u]||new t(0,0,0))}o.length=s;if(i){for(var u=1,a=n-1;u<a;++u)o.push(o[u])}return o},getUVControlPoints:function(e,i,n,r,o,s,u,a){var l=e||[];for(var h=0;h<s;++h){var d=l[h];if(!d)d=l[h]=[];for(var c=0;c<u;++c){d[c]=a.get1Point(c*s+h,d[c]||new t(0,0,0))}d.length=u;if(n){for(var f=1,g=o-1;f<g;++f)d.push(d[f])}}l.length=s;if(i){for(var f=1,g=r-1;f<g;++f)l.push(l[f])}return l},getTexControlPoints:function(e,t,n,r,o,s,u,a){var l=e||[];for(var h=0;h<s;++h){var d=l[h];if(!d)d=l[h]=[];for(var c=0;c<u;++c){d[c]=a.get1Point(c*s+h,d[c]||new i(0,0,0,0))}d.length=u;if(n){for(var f=1,g=o-1;f<g;++f)d.push(d[f])}}l.length=s;if(t){for(var f=1,g=r-1;f<g;++f)l.push(l[f])}return l}};return n});e("x_ite/Components/NURBS/X3DParametricGeometryNode",["x_ite/Components/Rendering/X3DGeometryNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS"],function(e,t,i){"use strict";function n(i){e.call(this,i);this.addType(t.X3DParametricGeometryNode)}n.prototype=Object.assign(Object.create(e.prototype),{constructor:n,getKnots:function(e,t,n,r,o){return i.getKnots(e,t,n,r,o)}});return n});e("nurbs/src/utils/is-ndarray",[],function(){"use strict";return function(e){if(!e)return false;if(!e.dtype)return false;var t=new RegExp("function View[0-9]+d(:?"+e.dtype+")+");return t.test(String(e.constructor))}});e("nurbs/src/utils/is-ndarray-like",[],function(){"use strict";return function(e){if(!e)return false;return e.data!==undefined&&Array.isArray(e.shape)&&e.offset!==undefined&&e.stride!==undefined}});e("nurbs/src/utils/is-array-like",[],function(){"use strict";return function e(t){return Array.isArray(t)||ArrayBuffer.isView(t)||t.length!==undefined}});e("nurbs/src/utils/infer-type",["nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/is-array-like"],function(e,t,i){"use strict";function n(r){if(!r)return undefined;if(e(r)||t(r)){if(r.dtype==="generic")return n.GENERIC_NDARRAY;return n.NDARRAY}else{if(i(r)){for(var o=r;i(o[0]);o=o[0]);if("x"in o)return n.ARRAY_OF_OBJECTS;return n.ARRAY_OF_ARRAYS}throw new Error("Unhandled data type. Got type: "+typeof r)}}n.ARRAY_OF_OBJECTS="Obj";n.ARRAY_OF_ARRAYS="Arr";n.NDARRAY="Nd";n.GENERIC_NDARRAY="GenNd";n.PACKED="PackArr";return n});e("nurbs/src/utils/cache-key",["nurbs/src/utils/is-array-like"],function(e){"use strict";function t(e){return e[0].toUpperCase()+e.slice(1)}return function(i,n,r,o,s,u){var a;var l=[];var h=false;for(a=0;a<i.splineDimension;a++){var d=e(i.knots)&&e(i.knots[a]);if(d)h=true;l.push("Deg"+i.degree[a]+(d?"":"Uniform")+t(i.boundary[a]))}var c=[[h?"NU":"",i.weights?"RBS":"BS"].join("")+i.dimension+"D",l.join("_")];if(o){c.push(o+"Pts")}if(s){c.push(s+"Wts")}if(u){c.push(u+"Kts")}if(n){c.push("debug")}if(r){c.push("chk")}return c.join("_")}});e("nurbs/src/utils/variable",[],function(){"use strict";var e=function e(t,i){return function(i,n){if(i!==undefined&&!Array.isArray(i))i=[i];var r=[];for(var o=0;o<i.length;o++){r.push(e.sum(i[o]))}if(n){for(i=0;i<r.length;i++){if(n[i]===undefined)continue;r[i]="("+r[i]+" + "+n[i]+") % "+n[i]}}return t+r.join("_")}};e.sum=function(e){e=Array.isArray(e)?e:[e];e=e.filter(function(e){return e!==undefined&&e!==0});if(e.length===0)e.push(0);return e.join(" + ")};return e});e("nurbs/src/utils/create-accessors",["nurbs/src/utils/infer-type","nurbs/src/utils/variable"],function(e,t){"use strict";var i=[".x",".y",".z",".w"];function n(e){return function(i,n){if(i!==undefined&&!Array.isArray(i))i=[i];var r=[];for(var o=0;o<i.length;o++)r.push(t.sum(i[o]));if(n){for(i=0;i<r.length;i++){if(n[i]===undefined)continue;r[i]="("+r[i]+" + "+n[i]+") % "+n[i]}}return e(r)}}function r(t,r){if(!r)return undefined;switch(e(r)){case e.ARRAY_OF_OBJECTS:{return n(function(e){var n=e.pop();return t+"["+e.join("][")+"]"+i[n]})}case e.ARRAY_OF_ARRAYS:{return n(function(e){return t+"["+e.join("][")+"]"})}case e.GENERIC_NDARRAY:{return n(function(e){return t+".get("+e.join(",")+")"})}case e.NDARRAY:{return n(function(e){var i=[t+"Offset"];for(var n=0;n<e.length;n++){i.push(t+"Stride"+n+" * ("+e[n]+")")}return t+"["+i.join(" + ")+"]"})}case e.PACKED:default:return undefined}}return function(e){var t={};var i=r("x",e.points);if(i)t.point=i;var i=r("w",e.weights);if(i)t.weight=i;var i=r("k",e.knots);if(i)t.knot=i;return t}});e("nurbs/src/numerical-derivative",[],function(){"use strict";var e=[];var t=[];return function i(n,r,o){if(r!==1){throw new Error("Numerical derivative not implemented for order n = "+r+".")}var s;var u=arguments[this.splineDimension+3]===undefined?1e-4:arguments[this.splineDimension+3];e.length=this.splineDimension;for(s=0;s<this.splineDimension;s++){e[s+1]=arguments[s+3]}var a=this.domain;var l=a[o][0];var h=a[o][1];var d,c,f;var g=e[o+1];var p=(h-l)*u;if(this.boundary[o]==="closed"){f=h-l;d=l+(g-l-p+f)%f;c=l+(g-l+p+f)%f;p*=2}else{d=Math.min(h,Math.max(l,g-p));c=Math.min(h,Math.max(l,g+p));p=c-d}e[o+1]=d;e[0]=t;this.evaluate.apply(null,e);e[o+1]=c;e[0]=n;this.evaluate.apply(null,e);for(s=0;s<this.dimension;s++){n[s]=(n[s]-t[s])/p}return n}});e("nurbs/src/utils/ndloop",[],function(){"use strict";return function e(t,i){for(var n=1,r=0,o=[];r<t.length;r++){n*=Array.isArray(t[r])?t[r][1]-t[r][0]:t[r];o[r]=Array.isArray(t[r])?t[r][0]:0}for(var s=0;s<n;s++){i(o.slice());for(r=t.length-1;r>=0;r--){if(o[r]===(Array.isArray(t[r])?t[r][1]:t[r])-1){o[r]=Array.isArray(t[r])?t[r][0]:0}else{o[r]++;break}}}}});e("nurbs/src/utils/accessor-preamble",["nurbs/src/utils/infer-type"],function(e){"use strict";return function(t,i,n,r){var o=[];switch(e(r)){case e.NDARRAY:{o.push("  var "+i+" = "+n+".data;");o.push("  var "+i+"Offset = "+n+".offset;");for(var s=0;s<r.dimension;s++){o.push("  var "+i+"Stride"+s+" = "+n+".stride["+s+"];")}break}case e.ARRAY_OF_OBJECTS:case e.ARRAY_OF_ARRAYS:o.push("  var "+i+" = "+n+";")}return o.join("\n")}});e("nurbs/src/utils/size-getter",["nurbs/src/utils/is-ndarray-like"],function(e){"use strict";return function(t,i,n){if(!t){return"this.size["+n+"]"}else if(e(t)){return i+".shape["+n+"]"}else{var r=i;for(var o=0;o<n;o++){r+="[0]"}return r+".length"}}});e("nurbs/src/evaluate",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],function(e,t,i,n,r,o){"use strict";var s={};var u={};return function(a,l,h,d,c,f,g){var p=l.splineDimension;var _,v,m,y,w,b;var N=l.points;var C=l.degree;var S=l.weights;var D=S!==undefined;var x=l.knots;var O=l.dimension;var F=l.boundary;if(g!==undefined&&g!==null){if(!Array.isArray(g)){g=[g]}var P=0;for(_=0;_<p;_++){if(g[_]===undefined)g[_]=0;P+=g[_]}if(D&&P>1){throw new Error("Analytical derivative not implemented for rational b-splines with order n = "+P+".")}}if(f)a="Basis"+a;if(g)a="Der"+g.join("_")+"_"+a;var R=s[a];if(d){var B=typeof d==="function"?d:console.log}if(R){if(d){B(u[a])}return R.bind(l)}var V=[];var z="evaluate"+a;var k=h.point;if(f){k=function(e,t){var i=[];for(var n=0;n<e.length;n++){var r=e[n];var o=[];for(var s=0;s<r.length;s++){if(r[s]!==0)o.push(r[s])}r=o.join(" + ");if(t[n]){r="("+r+" + "+t[n]+") % "+t[n]}i.push(r+" === "+X(n))}return"(("+i.join(" && ")+") ? 1 : 0)"}}var A=h.weight;var T=h.knot;var I=t("k");var j=t("x");var U=t("w");var X=t("i");var M=t("t");var K=d?"domain":"d";var G=t(d?"size":"s");var E=t(d?"knotIndex":"j");var q=true;for(w=0;w<p;w++){if(r(x)&&r(x[w])){q=false}}function Y(e){V.push("  "+(e||""))}function W(e){if(d)Y(e)}if(f){var J=[]}var L=[];for(_=0;_<p;_++){if(f){J.push(X([_]))}L.push(M([_]))}V.push("function "+z+" ("+(f?"":"out, ")+L.join(", ")+(f?", "+J.join(", "):"")+") {");Y("var h, m, a, b;");if(c){Y("var "+K+" = this.domain;");Y("for (var i = 0; i < this.splineDimension; i++) {");Y("  a = arguments[i + 1];");Y("  if (a < "+K+"[i][0] || a > "+K+"[i][1] || a === undefined || isNaN(a)) {");Y("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+K+"[i][0]+', '+"+K+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');");Y("  }");Y("}")}for(w=0;w<p;w++){Y("var "+G(w)+" = "+o(N,"this.points",w)+";")}V.push(i(l,"x","this.points",N));if(D){V.push(i(l,"w","this.weights",S))}if(!q){V.push(i(l,"k","this.knots",x))}function Z(e,t,i){return"("+e+") ? ("+t+") : ("+i+")"}var H=[];for(w=0;w<p;w++){switch(n(x)){case n.NDARRAY:H[w]=true;break;case n.ARRAY_OF_ARRAYS:H[w]=r(x[w]);break}}for(w=0;w<p;w++){if(H[w]){W("\n  // Bisect to locate the knot interval in dimension "+w+"\n");Y("var "+E(w)+" = 0;");Y("h = "+G(w)+";");Y("while(h > "+E(w)+" + 1) {");Y("  m = 0.5 * (h + "+E(w)+") | 0;");Y("  if ("+T([w,"m"])+" > "+M(w)+") h = m;");Y("  else "+E(w)+" = m;");Y("}");W("\n  // Fetch knots for dimension "+w+"\n");for(_=-C[w]+1;_<=C[w];_++){if(F[w]==="closed"){if(_<0){Y("var "+I([w,_+C[w]-1])+" = "+Z(E(w)+" < "+-_,T([w,0])+" + "+T([w,[G(w),E(w),_]])+" - "+T([w,[G(w)]]),T([w,[E(w),_]]))+";")}else if(_>0){Y("var "+I([w,_+C[w]-1])+" = "+Z(E(w)+" + "+_+" > "+G(w),T([w,G(w)])+" + "+T([w,_+" + "+E(w)+" - "+G(w)])+" - "+T([w,0]),T([w,[E(w),_]]))+";")}else{Y("var "+I([w,_+C[w]-1])+" = "+T([w,[E(w),_]])+";")}}else{Y("var "+I([w,_+C[w]-1])+" = "+T([w,[E(w),_]])+";")}}}else{W("\n  // Directly compute knot interval for dimension "+w+"\n");if(F[w]==="closed"){Y(E(w)+" = ("+M(w)+" | 0) % "+G(w)+";")}else{Y(E(w)+" = ("+M(w)+" | 0);");Y("if ("+E(w)+" < "+C[w]+") "+E(w)+" = "+C[w]+";");Y("if ("+E(w)+" > "+G(w)+" - 1) "+E(w)+" = "+G(w)+" - 1;")}W("\n  // Compute and clamp knots for dimension "+w+"\n");for(_=-C[w]+1;_<=C[w];_++){b=I([w,_+C[w]-1]);Y("var "+b+" = "+E(w)+" + "+_+";")}if(F[w]==="clamped"){for(_=-C[w]+1;_<=C[w];_++){b=I([w,_+C[w]-1]);if(_<0){Y("if ("+b+" < "+C[w]+") "+b+" = "+C[w]+";")}if(_>0){Y("if ("+b+" > "+G(w)+") "+b+" = "+G(w)+";")}}}if(F[w]==="closed"){W("\n  // Wrap the B-Spline parameter for closed boundary");Y(M(w)+" %= "+G(w)+";")}}}for(w=0,m=[];w<p;w++){m[w]=C[w]+1}if(D){W("\n  // Fetch weights\n");e(m,function(e){var t=[];var i=[];for(var n=0;n<p;n++){t[n]=[E(n),e[n]-C[n]];if(F[n]==="closed"&&e[n]-C[n]<0)i[n]=G(n)}Y("var "+U(e)+" = "+A(t,i)+";")})}if(d){if(D){Y("\n  // Fetch points and project into homogeneous (weighted) coordinates\n")}else{Y("\n  // Fetch points\n")}}e(m,function(e){var t=[];var i=[];for(var n=0;n<p;n++){t[n]=[E(n),e[n]-C[n]];if(F[n]==="closed"&&e[n]-C[n]<0)i[n]=G(n)}if(f){if(D){Y("var "+j(e)+" = "+k(t,i)+" * "+U(e)+";")}else{Y("var "+j(e)+" = "+k(t,i)+";")}}else{for(n=0;n<O;n++){var r=e.concat(n);t[p]=n;if(D){Y("var "+j(r)+" = "+k(t,i)+" * "+U(e)+";")}else{Y("var "+j(r)+" = "+k(t,i)+";")}}}});W("\n");W("// Perform De Boor's algorithm");for(w=m.length-1;w>=0;w--){m[w]=[C[w],C[w]+1];for(_=0;_<C[w];_++){W("\n  // Degree "+C[w]+" evaluation in dimension "+w+", step "+(_+1)+"\n");for(v=C[w];v>_;v--){var Q=g&&C[w]-_-g[w]<=0;if(Q){Y("m = 1 / ("+I([w,v-_+C[w]-1])+" - "+I([w,v-1])+");");if(D){Y("a = ("+M(w)+" - "+I([w,v-1])+") * m;");Y("b = 1 - a;")}}else{Y("a = ("+M(w)+" - "+I([w,v-1])+") / ("+I([w,v-_+C[w]-1])+" - "+I([w,v-1])+");");Y("b = 1 - a;")}if(D){e(m,function(e){var t=e.slice();var i=e.slice();t[w]=v;i[w]=v-1;if(Q&&D)Y("h = "+U(t)+";");Y(U(t)+" = b * "+U(i)+" + a * "+U(t)+";")})}e(m,function(e){var t,i,n;var r=e.slice();var o=e.slice();r[w]=v;o[w]=v-1;if(Q){var s=_+1;if(f){t=D?"h * "+U(o)+" / "+U(r)+" * ":"";i=j(r)+(D?" / h":"");n=j(o)+(D?" / "+U(o):"");Y(j(r)+" = "+s+" * "+t+"("+i+" - "+n+") * m;")}else{var u=r.slice();var a=o.slice();for(y=0;y<O;y++){u[p]=a[p]=y;t=D?"h * "+U(o)+" / "+U(r)+" * ":"";i=j(u)+(D?" / h":"");n=j(a)+(D?" / "+U(o):"");Y(j(u)+" = "+s+" * "+t+"("+i+" - "+n+") * m;")}}}else{if(f){Y(j(r)+" = b * "+j(o)+" + a * "+j(r)+";")}else{for(y=0;y<O;y++){r[p]=o[p]=y;Y(j(r)+" = b * "+j(o)+" + a * "+j(r)+";")}}}});W("\n")}}}if(d){if(D){Y("\n  // Project back from homogeneous coordinates and return final output\n")}else{Y("\n  // Return final output\n")}}if(f){if(D){Y("return "+j(C)+" / "+U(C)+";")}else{Y("return "+j(C)+";")}}else{for(w=0;w<O;w++){if(D){Y("out["+w+"] = "+j(C.concat([w]))+" / "+U(C)+";")}else{Y("out["+w+"] = "+j(C.concat([w]))+";")}}}if(!f){Y("return out;")}V.push("}");if(d){var $=V.join("\n");B($);u[a]=$}var ee=new Function([V.join("\n"),"; return ",z].join(""))();s[a]=ee;return ee.bind(l)}});e("nurbs/src/transform",["nurbs/src/utils/accessor-preamble","nurbs/src/utils/size-getter","nurbs/src/utils/variable"],function(e,t,i){"use strict";var n={};return function r(o,s,u,a){var l,h,d,c,f,g,p,_;var v=n[o];if(v){return v.bind(s)}var m=[];var y="transform"+o;m.push("function "+y+"(m) {");m.push("var i, w;");m.push(e(s,"x","this.points",s.points));var w=i(a?"size":"s");for(l=0;l<s.splineDimension;l++){m.push("var "+w(l)+" = "+t(s.points,"this.points",l)+";")}c=[];for(l=0;l<s.splineDimension;l++){d="i"+l;c.push(d);m.push("for ("+d+" = "+w(l)+"- 1; "+d+" >= 0; "+d+"--) {")}for(l=0;l<s.dimension;l++){m.push("x"+l+" = "+u.point(c.concat([l])))}f=[];for(l=0;l<s.dimension;l++){f.push("m["+((s.dimension+1)*(l+1)-1)+"] * x"+l)}f.push("m["+((s.dimension+1)*(s.dimension+1)-1)+"]");m.push("var w = ("+f.join(" + ")+") || 1.0;");for(l=0;l<s.dimension;l++){f=[];g=s.dimension;for(h=0;h<g;h++){f.push("m["+(h*(g+1)+l)+"] * x"+h)}f.push("m["+(h*(g+1)+l)+"]");_=u.point(c.concat([l]));p="("+f.join(" + ")+") / w";m.push(_+" = "+p+";")}for(l=s.splineDimension-1;l>=0;l--){m.push("}")}m.push("return this;");m.push("}");var b=new Function([m.join("\n"),"; return ",y].join(""))();if(a)console.log(m.join("\n"));n[o]=b;return b.bind(s)}});e("nurbs/src/support",["nurbs/src/utils/ndloop","nurbs/src/utils/variable","nurbs/src/utils/accessor-preamble","nurbs/src/utils/infer-type","nurbs/src/utils/is-array-like","nurbs/src/utils/size-getter"],function(e,t,i,n,r,o){"use strict";var s={};return function(u,a,l,h,d){var c=s[u];if(c){return c.bind(a)}var f=a.degree;var g=a.knots;var p=a.splineDimension;var _=a.boundary;var v,m,y;var w=[];var b="support"+u;var N=l.knot;var C=t("t");var S=h?"domain":"d";var D=t(h?"size":"s");var x=t(h?"knotIndex":"i");var O=true;for(y=0;y<p;y++){if(r(g)&&r(g[y])){O=false}}function F(e){w.push("  "+(e||""))}var P=[];for(v=0;v<p;v++){P.push(C([v]))}w.push("function "+b+" (out, "+P.join(", ")+") {");var R=0;function B(e,t){if(t===undefined){F("out["+R+++"] = "+e.join(" + ")+";")}else{F("out["+R+++"] = ("+e.join(" + ")+" + "+t+") % "+t+";")}}F("var h, m;");F("var c = 0;");if(d){F("var "+S+" = this.domain;");F("for (var i = 0; i < this.splineDimension; i++) {");F("  a = arguments[i + 1];");F("  if (a < "+S+"[i][0] || a > "+S+"[i][1] || a === undefined || isNaN(a)) {");F("    throw new Error('Invalid Spline parameter in dimension '+i+'. Valid domain is ['+"+S+"[i][0]+', '+"+S+"[i][1]+']. but got t'+i+' = '+arguments[i + 1]+'.');");F("  }");F("}")}for(y=0;y<p;y++){F("var "+D(y)+" = "+o(a.points,"this.points",y)+";")}if(!O){w.push(i(a,"k","this.knots",g))}var V=[];for(y=0;y<p;y++){switch(n(g)){case n.NDARRAY:V[y]=true;break;case n.ARRAY_OF_ARRAYS:V[y]=r(g[y]);break}}for(y=0;y<p;y++){if(V[y]){F("var "+x(y)+" = 0;");F("h = "+D(y)+";");F("while(h > "+x(y)+" + 1) {");F("  m = 0.5 * (h + "+x(y)+") | 0;");F("  if ("+N([y,"m"])+" > "+C(y)+") h = m;");F("  else "+x(y)+" = m;");F("}")}else{if(_[y]==="closed"){F(x(y)+" = ("+C(y)+" | 0) % "+D(y)+";")}else{F(x(y)+" = ("+C(y)+" | 0);");F("if ("+x(y)+" < "+f[y]+") "+x(y)+" = "+f[y]+";");F("if ("+x(y)+" > "+D(y)+" - 1) "+x(y)+" = "+D(y)+" - 1;")}}}for(y=0,m=[];y<p;y++){m[y]=f[y]+1}e(m,function(e){var t=[];var i=[];for(var n=0;n<p;n++){t[n]=[x(n),e[n]-f[n]];if(_[n]==="closed"&&e[n]-f[n]<0)i[n]=D(n)}for(n=0;n<p;n++){B(t[n],i[n])}});F("out.length = "+R+";");F("return out;");w.push("}");if(h)console.log(w.join("\n"));var z=new Function([w.join("\n"),"; return ",b].join(""))();s[u]=z;return z.bind(a)}});e("nurbs/extras/sample",[],function(){"use strict";function e(e,t){var i=t[0],n=t[1],r=t[2];var o=Math.sqrt(i*i+n*n+r*r);if(o>0){e[0]=t[0]/o;e[1]=t[1]/o;e[2]=t[2]/o}return e}function t(e,t,i){var n=t[0],r=t[1],o=t[2],s=i[0],u=i[1],a=i[2];e[0]=r*a-o*u;e[1]=o*s-n*a;e[2]=n*u-r*s;return e}var i=[],n=[];return function(r,o,s){r=r||{};s=s||{};var u=r.points=r.points||[],a=r.normals=r.normals||[],l=r.faces=r.faces||[];var h=o.dimension;if(Array.isArray(s.resolution)){var d=s.resolution}else{var c=s.resolution===undefined?31:s.resolution,d=new Array(o.splineDimension).fill(c)}var f=h===3&&(s.generateNormals!==undefined?s.generateNormals:true);switch(o.splineDimension){case 1:{var g=d[0],p=o.boundary[0]==="closed",_=g+!p,v=_*h,m=o.evaluator([1,0]),y=s.domain||o.domain,w=y[0],b=w[1]-w[0];for(var N=0;N<_;++N){var C=w[0]+b*N/g,S=N*h;o.evaluate(i,C);for(var D=0;D<h;++D)u[S+D]=i[D]}u.length=v;break}case 2:{var g=d[0],x=d[1],p=o.boundary[0]==="closed",O=o.boundary[1]==="closed",_=g+!p,F=x+!O,P=_*F*3,v=_*F*h,m=o.evaluator([1,0]),R=o.evaluator([0,1]),y=s.domain||o.domain,w=y[0],B=y[1],b=w[1]-w[0],V=B[1]-B[0];for(var N=0;N<_;++N){var C=w[0]+b*N/g;for(var z=0;z<F;++z){var k=B[0]+V*z/x,S=(N+_*z)*h;o.evaluate(i,C,k);for(var D=0;D<h;++D)u[S+D]=i[D];if(f){e(i,t(i,m(i,C,k),R(n,C,k)));a[S]=i[0];a[S+1]=i[1];a[S+2]=i[2]}}}a.length=P;u.length=v;var A=0;for(var N=0;N<g;++N){var T=N,I=N+1;if(p)I=I%g;for(var z=0;z<x;++z){var j=z;var U=z+1;if(O)U=U%x;l[A++]=T+_*j;l[A++]=I+_*j;l[A++]=I+_*U;l[A++]=T+_*j;l[A++]=I+_*U;l[A++]=T+_*U}}l.length=A;break}default:throw new Error("Can only sample curves and surfaces")}return r}});e("nurbs/nurbs",["nurbs/src/utils/infer-type","nurbs/src/utils/cache-key","nurbs/src/utils/is-ndarray","nurbs/src/utils/is-ndarray-like","nurbs/src/utils/create-accessors","nurbs/src/numerical-derivative","nurbs/src/utils/is-array-like","nurbs/src/evaluate","nurbs/src/transform","nurbs/src/support","nurbs/extras/sample"],function(e,t,i,n,r,o,s,u,a,l,h){"use strict";var d={open:"open",closed:"closed",clamped:"clamped"};function c(e){return e===undefined||e===null}function f(n,h,f,g,p,_){var v,m;if(n&&!s(n)&&!i(n)){_=n;this.debug=n.debug;this.checkBounds=!!n.checkBounds;this.weights=n.weights;this.knots=n.knots;this.degree=n.degree;this.boundary=n.boundary;this.points=n.points;Object.defineProperty(this,"size",{value:_.size,writable:true,configurable:true})}else{_=_||{};this.weights=g;this.knots=f;this.degree=h;this.points=n;this.boundary=p;this.debug=_.debug;this.checkBounds=!!_.checkBounds;Object.defineProperty(this,"size",{value:_.size,writable:true,configurable:true})}var y=e(this.points);var w=e(this.weights);var b=e(this.knots);if(this.points){switch(y){case e.GENERIC_NDARRAY:case e.NDARRAY:Object.defineProperties(this,{splineDimension:{value:this.points.shape.length-1,writable:false,configurable:true},dimension:{value:this.points.shape[this.points.shape.length-1],writable:false,configurable:true},size:{get:function(){return this.points.shape.slice(0,this.points.shape.length-1)},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:true}});break;case e.ARRAY_OF_OBJECTS:case e.ARRAY_OF_ARRAYS:var N=0;var C=this.size||[];C.length=0;for(var S=this.points;s(S[0]);S=S[0]){N++;C.push(S.length)}if(N===0){throw new Error("Expected an array of points")}Object.defineProperties(this,{splineDimension:{value:N,writable:false,configurable:true},dimension:{value:S.length,writable:false,configurable:true},size:{get:function(){var e=[];e.length=0;for(var t=0,i=this.points;t<this.splineDimension;t++,i=i[0]){e[t]=i.length}return e},set:function(){throw new Error("Cannot assign to read only property 'size'")},configurable:true}});break;case e.PACKED:default:throw new Error("Expected either a packed array, array of arrays, or ndarray of points")}}else{if(this.size===undefined||this.size===null){throw new Error("Either points or a control hull size must be provided.")}if(!s(this.size)){Object.defineProperty(this,"size",{value:[this.size],writable:true,configurable:true})}if(this.size.length===0){throw new Error("`size` must be a number or an array of length at least one.")}Object.defineProperties(this,{splineDimension:{value:this.size.length,writable:false,configurable:true},dimension:{value:0,writable:false,configurable:true}})}if(s(this.degree)){for(v=0;v<this.splineDimension;v++){if(c(this.degree[v])){throw new Error("Missing degree in dimension "+(v+1))}}}else{var D=!c(this.degree);var x=c(this.degree)?2:this.degree;this.degree=[];for(v=0;v<this.splineDimension;v++){if(this.size[v]<=x){if(D){throw new Error("Expected at least "+(x+1)+" points for degree "+x+" spline in dimension "+(v+1)+" but got only "+this.size[v])}else{this.degree[v]=this.size[v]-1}}else{this.degree[v]=x}}}m=typeof this.boundary!=="string"?"open":this.boundary;if(!d[m]){throw new Error("Boundary type must be one of "+Object.keys(d)+". Got "+m)}this.boundary=s(this.boundary)?this.boundary:[];this.boundary.length=this.splineDimension;for(v=0;v<this.splineDimension;v++){this.boundary[v]=c(this.boundary[v])?m:this.boundary[v];if(!d[m]){throw new Error("Boundary type must be one of "+Object.keys(d)+". Got "+m+" for dimension "+(v+1))}}switch(b){case e.ARRAY_OF_ARRAYS:if(s(this.knots)&&this.knots.length>0&&!s(this.knots[0])){this.knots=[this.knots]}for(v=0;v<this.splineDimension;v++){if(this.size[v]<=this.degree[v]){throw new Error("Expected at least "+(this.degree[v]+1)+" points in dimension "+(v+1)+" but got "+this.size[v]+".")}if(s(this.knots[v])){if(this.boundary[v]!=="closed"&&this.knots[v].length!==this.degree[v]+this.size[v]+1){throw new Error("Expected "+(this.degree[v]+this.size[v]+1)+" knots in dimension "+(v+1)+" but got "+this.knots[v].length+".")}else if(this.boundary[v]==="closed"&&this.knots[v].length!==this.size[v]+1){var O=this.knots[v].length===this.size[v]+this.degree[v]+1;if(!O){throw new Error("Expected "+(this.size[v]+1)+" knots for closed spline in dimension "+(v+1)+" but got "+this.knots[v].length+".")}}}}break;case e.NDARRAY:break}var F=t(this,this.debug,this.checkBounds,y,w,b);if(F!==this.__cacheKey){this.__cacheKey=F;var P=r(this);this.evaluate=u(this.__cacheKey,this,P,this.debug,this.checkBounds,false);this.transform=a(this.__cacheKey,this,P,this.debug);this.support=l(this.__cacheKey,this,P,this.debug,this.checkBounds);this.evaluator=function(e,t){return u(this.__cacheKey,this,P,this.debug,this.checkBounds,t,e)}}this.numericalDerivative=o.bind(this);return this}function g(){var e;var t=[];var i=this.points;if(!i){e=this.size}else if(n(i)){e=i.shape}for(var r=0;r<this.splineDimension;r++){var o=e?e[r]:i.length;var s=this.degree[r];var u=this.boundary[r]==="closed";if(this.knots&&this.knots[r]){var a=this.knots[r];t[r]=[a[u?0:s],a[o]]}else{t[r]=[u?0:s,o]}if(i)i=i[0]}return t}function p(e,t,i,n,r,o){var s=function(e,t,i,n,r,o){u(e,t,i,n,r,o);return s};var u=f.bind(s);Object.defineProperty(s,"domain",{get:g});u(e,t,i,n,r,o);return s}p.sample=h;return p});e("nurbs",["nurbs/nurbs"],function(e){return e});e("x_ite/Components/NURBS/NurbsCurve",["x_ite/Bits/X3DCast","x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Components/Rendering/X3DLineGeometryNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS","nurbs"],function(e,t,i,n,r,o,s,u,a){"use strict";function l(e){r.call(this,e);this.addType(s.NurbsCurve);this.setGeometryType(1);this.knots=[];this.weights=[];this.controlPoints=[];this.mesh={};this.sampleOptions={resolution:[]}}l.prototype=Object.assign(Object.create(r.prototype),o.prototype,{constructor:l,fieldDefinitions:new n([new i(s.inputOutput,"metadata",new t.SFNode),new i(s.inputOutput,"tessellation",new t.SFInt32),new i(s.initializeOnly,"closed",new t.SFBool),new i(s.initializeOnly,"order",new t.SFInt32(3)),new i(s.initializeOnly,"knot",new t.MFDouble),new i(s.inputOutput,"weight",new t.MFDouble),new i(s.inputOutput,"controlPoint",new t.SFNode)]),getTypeName:function(){return"NurbsCurve"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){r.prototype.initialize.call(this);this.controlPoint_.addInterest("set_controlPoint__",this);this.setPrimitiveMode(this.getBrowser().getContext().LINES);this.setSolid(false);this.set_controlPoint__()},set_controlPoint__:function(){if(this.controlPointNode)this.controlPointNode.removeInterest("requestRebuild",this);this.controlPointNode=e(s.X3DCoordinateNode,this.controlPoint_);if(this.controlPointNode)this.controlPointNode.addInterest("requestRebuild",this)},getTessellation:function(e){return u.getTessellation(this.tessellation_.getValue(),e-this.order_.getValue())},getClosed:function(e,t,i,n){if(!this.closed_.getValue())return false;return u.getClosed(e,t,i,n)},getWeights:function(e,t,i,n,r){return u.getWeights(e,t,i,n,r)},getControlPoints:function(e,t,i,n){return u.getControlPoints(e,t,i,n)},tessellate:function(){if(this.order_.getValue()<2)return[];if(!this.controlPointNode)return[];if(this.controlPointNode.getSize()<this.order_.getValue())return[];var e=this.getVertices(),t=[];if(e.length){for(var i=0,n=e.length;i<n;i+=8)t.push(e[i],e[i+1],e[i+2]);t.push(e[n-4],e[n-3],e[n-2])}return t},build:function(){if(this.order_.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this.order_.getValue())return;var e=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPointNode),t=this.getControlPoints(this.controlPoints,e,this.order_.getValue(),this.controlPointNode);var i=this.getKnots(this.knots,e,this.order_.getValue(),this.controlPointNode.getSize(),this.knot_),n=i[i.length-1]-i[0];var r=this.getWeights(this.weights,e,this.order_.getValue(),this.controlPointNode.getSize(),this.weight_);var o=this.order_.getValue()-1;var s=this.surface=(this.surface||a)({boundary:["open"],degree:[o],knots:[i],weights:r,points:t,debug:false});this.sampleOptions.resolution[0]=this.getTessellation(i.length);var u=a.sample(this.mesh,s,this.sampleOptions),l=u.points,h=this.getVertices();for(var d=3,c=l.length;d<c;d+=3){var f=d-3;h.push(l[f],l[f+1],l[f+2],1);h.push(l[d],l[d+1],l[d+2],1)}}});return l});e("x_ite/Components/NURBS/NurbsCurve2D",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Bits/X3DConstants","x_ite/Browser/NURBS/NURBS","nurbs"],function(e,t,i,n,r,o,s){"use strict";function u(e){n.call(this,e);this.addType(r.NurbsCurve2D);this.knots=[];this.weights=[];this.controlPoints=[];this.mesh={};this.sampleOptions={resolution:[]};this.array=[]}u.prototype=Object.assign(Object.create(n.prototype),{constructor:u,
fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"tessellation",new e.SFInt32),new t(r.initializeOnly,"closed",new e.SFBool),new t(r.initializeOnly,"order",new e.SFInt32(3)),new t(r.initializeOnly,"knot",new e.MFDouble),new t(r.inputOutput,"weight",new e.MFDouble),new t(r.inputOutput,"controlPoint",new e.MFVec2d)]),getTypeName:function(){return"NurbsCurve2D"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},getTessellation:function(e){return o.getTessellation(this.tessellation_.getValue(),e-this.order_.getValue())},getClosed:function(e,t,i,n){if(!this.closed_.getValue())return false;return o.getClosed2D(e,t,i,n)},getKnots:function(e,t,i,n,r){return o.getKnots(e,t,i,n,r)},getWeights:function(e,t,i,n,r){return o.getWeights(e,t,i,n,r)},getControlPoints:function(e,t,i,n){return o.getControlPoints2D(e,t,i,n)},tessellate:function(e){var t=this.array;t.length=0;if(this.order_.getValue()<2)return t;if(this.controlPoint_.length<this.order_.getValue())return t;var i=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPoint_),n=this.getControlPoints(this.controlPoints,i,this.order_.getValue(),this.controlPoint_);var r=this.getKnots(this.knots,i,this.order_.getValue(),this.controlPoint_.length,this.knot_),o=r[r.length-1]-r[0];var u=this.getWeights(this.weights,i,this.order_.getValue(),this.controlPoint_.length,this.weight_);var a=this.order_.getValue()-1;var l=this.surface=(this.surface||s)({boundary:["open"],degree:[a],knots:[r],weights:u,points:n,debug:false});this.sampleOptions.resolution[0]=this.getTessellation(r.length);var h=s.sample(this.mesh,l,this.sampleOptions),d=h.points;if(e){for(var c=0,f=d.length;c<f;c+=2)t.push(d[c],0,d[c+1])}else{for(var c=0,f=d.length;c<f;c+=2)t.push(d[c],d[c+1])}return t}});return u});e("x_ite/Components/NURBS/NurbsOrientationInterpolator",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Interpolation/OrientationInterpolator","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","x_ite/Browser/NURBS/NURBS","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","nurbs"],function(e,t,i,n,r,o,s,u,a,l,h){"use strict";function d(t){n.call(this,t);this.addType(o.NurbsOrientationInterpolator);this.addChildObjects("rebuild",new e.SFTime);this.interpolator=new r(t);this.knots=[];this.weights=[];this.controlPoints=[];this.mesh={};this.sampleOptions={resolution:[128]}}d.prototype=Object.assign(Object.create(n.prototype),{constructor:d,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOnly,"set_fraction",new e.SFFloat),new t(o.inputOutput,"order",new e.SFInt32(3)),new t(o.inputOutput,"knot",new e.MFDouble),new t(o.inputOutput,"weight",new e.MFDouble),new t(o.inputOutput,"controlPoint",new e.SFNode),new t(o.outputOnly,"value_changed",new e.SFRotation)]),getTypeName:function(){return"NurbsOrientationInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this);this.order_.addInterest("requestRebuild",this);this.knot_.addInterest("requestRebuild",this);this.weight_.addInterest("requestRebuild",this);this.controlPoint_.addInterest("set_controlPoint__",this);this.rebuild_.addInterest("build",this);this.set_fraction_.addFieldInterest(this.interpolator.set_fraction_);this.interpolator.value_changed_.addFieldInterest(this.value_changed_);this.interpolator.setup();this.set_controlPoint__()},set_controlPoint__:function(){if(this.controlPointNode)this.controlPointNode.removeInterest("requestRebuild",this);this.controlPointNode=s(o.X3DCoordinateNode,this.controlPoint_);if(this.controlPointNode)this.controlPointNode.addInterest("requestRebuild",this);this.requestRebuild()},getClosed:function(e,t,i,n){return false&&u.getClosed(e,t,i,n)},getKnots:function(e,t,i,n,r){return u.getKnots(e,t,i,n,r)},getWeights:function(e,t,i,n,r){return u.getWeights(e,t,i,n,r)},getControlPoints:function(e,t,i,n){return u.getControlPoints(e,t,i,n)},requestRebuild:function(){this.rebuild_.addEvent()},build:function(){if(this.order_.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this.order_.getValue())return;var e=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPointNode),t=this.getControlPoints(this.controlPoints,e,this.order_.getValue(),this.controlPointNode);var i=this.getKnots(this.knots,e,this.order_.getValue(),this.controlPointNode.getSize(),this.knot_),n=i[i.length-1]-i[0];var r=this.getWeights(this.weights,e,this.order_.getValue(),this.controlPointNode.getSize(),this.weight_);var o=this.order_.getValue()-1;var s=this.surface=(this.surface||h)({boundary:["open"],degree:[o],knots:[i],weights:r,points:t,debug:false});var u=h.sample(this.mesh,s,this.sampleOptions),d=u.points,c=this.interpolator;c.key_.length=0;c.keyValue_.length=0;for(var f=0,g=d.length-3;f<g;f+=3){var p=new a(d[f+3]-d[f+0],d[f+4]-d[f+1],d[f+5]-d[f+2]);c.key_.push(i[0]+f/(g-3+3*e)*n);c.keyValue_.push(new l(a.zAxis,p))}if(e){c.key_.push(i[0]+n);c.keyValue_.push(c.keyValue_[0])}}});return d});e("x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode",["x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","x_ite/Browser/NURBS/NURBS","nurbs"],function(e,t,i,n,r){"use strict";function o(i){e.call(this,i);this.addType(t.X3DNurbsSurfaceGeometryNode);this.tessellationScale=1;this.uKnots=[];this.vKnots=[];this.weights=[];this.controlPoints=[];this.mesh={};this.sampleOptions={resolution:[]};this.textUKnots=[];this.textVKnots=[];this.textWeights=[];this.texControlPoints=[];this.texMesh={}}o.prototype=Object.assign(Object.create(e.prototype),{constructor:o,initialize:function(){e.prototype.initialize.call(this);this.texCoord_.addInterest("set_texCoord__",this);this.controlPoint_.addInterest("set_controlPoint__",this);this.set_texCoord__();this.set_controlPoint__()},set_texCoord__:function(){if(this.texCoordNode)this.texCoordNode.removeInterest("requestRebuild",this);if(this.nurbsTexCoordNode)this.nurbsTexCoordNode.removeInterest("requestRebuild",this);this.texCoordNode=i(t.X3DTextureCoordinateNode,this.texCoord_);this.nurbsTexCoordNode=i(t.NurbsTextureCoordinate,this.texCoord_);if(this.texCoordNode)this.texCoordNode.addInterest("requestRebuild",this);if(this.nurbsTexCoordNode)this.nurbsTexCoordNode.addInterest("requestRebuild",this)},set_controlPoint__:function(){if(this.controlPointNode)this.controlPointNode.removeInterest("requestRebuild",this);this.controlPointNode=i(t.X3DCoordinateNode,this.controlPoint_);if(this.controlPointNode)this.controlPointNode.addInterest("requestRebuild",this)},setTessellationScale:function(e){this.tessellationScale=e;this.requestRebuild()},getUTessellation:function(e){return Math.floor(n.getTessellation(this.uTessellation_.getValue(),e-this.uOrder_.getValue())*this.tessellationScale)},getVTessellation:function(e){return Math.floor(n.getTessellation(this.vTessellation_.getValue(),e-this.vOrder_.getValue())*this.tessellationScale)},getUClosed:function(e,t,i,r,o,s){if(this.uClosed_.getValue())return n.getUClosed(e,t,i,r,o,s);return false},getVClosed:function(e,t,i,r,o,s){if(this.vClosed_.getValue())return n.getVClosed(e,t,i,r,o,s);return false},getUVWeights:function(e,t,i,r,o,s,u,a){return n.getUVWeights(e,t,i,r,o,s,u,a)},getTexControlPoints:function(e,t,i,r,o,s,u,a){return n.getTexControlPoints(e,t,i,r,o,s,u,a)},getUVControlPoints:function(e,t,i,r,o,s,u,a){return n.getUVControlPoints(e,t,i,r,o,s,u,a)},build:function(){if(this.uOrder_.getValue()<2)return;if(this.vOrder_.getValue()<2)return;if(this.uDimension_.getValue()<this.uOrder_.getValue())return;if(this.vDimension_.getValue()<this.vOrder_.getValue())return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()!==this.uDimension_.getValue()*this.vDimension_.getValue())return;var e=this.getUClosed(this.uOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.uKnot_,this.weight_,this.controlPointNode),t=this.getVClosed(this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.vKnot_,this.weight_,this.controlPointNode),i=this.getUVControlPoints(this.controlPoints,e,t,this.uOrder_.getValue(),this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.controlPointNode);var n=this.getKnots(this.uKnots,e,this.uOrder_.getValue(),this.uDimension_.getValue(),this.uKnot_),o=this.getKnots(this.vKnots,t,this.vOrder_.getValue(),this.vDimension_.getValue(),this.vKnot_),s=n[n.length-1]-n[0],u=o[o.length-1]-o[0];var a=this.getUVWeights(this.weights,e,t,this.uOrder_.getValue(),this.vOrder_.getValue(),this.uDimension_.getValue(),this.vDimension_.getValue(),this.weight_);var l=this.uOrder_.getValue()-1,h=this.vOrder_.getValue()-1;var d=this.surface=(this.surface||r)({boundary:["open","open"],degree:[l,h],knots:[n,o],weights:a,points:i,debug:false});var c=this.sampleOptions;c.resolution[0]=this.getUTessellation(n.length);c.resolution[1]=this.getVTessellation(o.length);c.generateNormals=true;c.domain=undefined;var f=r.sample(this.mesh,d,c),g=f.faces,p=f.normals,_=f.points,v=this.getNormals(),m=this.getVertices();for(var y=0,w=g.length;y<w;++y){var b=g[y]*3;v.push(p[b],p[b+1],p[b+2]);m.push(_[b],_[b+1],_[b+2],1)}this.buildNurbsTexCoords(e,t,this.uOrder_.getValue(),this.vOrder_.getValue(),n,o,this.uDimension_.getValue(),this.vDimension_.getValue(),d.domain);this.setSolid(this.solid_.getValue());this.setCCW(true)},buildNurbsTexCoords:function(){var e=[],t=[],i=[[[0,0,0,1],[0,1,0,1]],[[1,0,0,1],[1,1,0,1]]];function n(e,t){e[0]=e[1]=t[0];e[2]=e[3]=t[t.length-1];return e}return function(o,s,u,a,l,h,d,c,f){var g=this.sampleOptions;if(this.texCoordNode&&this.texCoordNode.getSize()===d*c){var p=u-1,_=a-1,v=l,m=h,y=undefined,w=this.getTexControlPoints(this.texControlPoints,o,s,u,a,d,c,this.texCoordNode)}else if(this.nurbsTexCoordNode&&this.nurbsTexCoordNode.isValid()){var b=this.nurbsTexCoordNode,p=b.uOrder_.getValue()-1,_=b.vOrder_.getValue()-1,v=this.getKnots(this.texUKnots,false,b.uOrder_.getValue(),b.uDimension_.getValue(),b.uKnot_),m=this.getKnots(this.texVKnots,false,b.vOrder_.getValue(),b.vDimension_.getValue(),b.vKnot_),y=this.getUVWeights(this.texWeights,false,false,b.uOrder_.getValue(),b.vOrder_.getValue(),b.uDimension_.getValue(),b.vDimension_.getValue(),b.weight_);w=b.getControlPoints()}else{var p=1,_=1,v=n(e,l),m=n(t,h),y=undefined,w=i;g.domain=f}var N=this.texSurface=(this.texSurface||r)({boundary:["open","open"],degree:[p,_],knots:[v,m],weights:y,points:w});g.generateNormals=false;var C=r.sample(this.texMesh,N,g),S=C.faces,D=C.points,x=this.getTexCoords();for(var O=0,F=S.length;O<F;++O){var P=S[O]*4;x.push(D[P],D[P+1],D[P+2],D[P+3])}this.getMultiTexCoords().push(this.getTexCoords())}}()});return o});e("x_ite/Components/NURBS/NurbsPatchSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function o(e){n.call(this,e);this.addType(r.NurbsPatchSurface)}o.prototype=Object.assign(Object.create(n.prototype),{constructor:o,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.initializeOnly,"solid",new e.SFBool(true)),new t(r.inputOutput,"uTessellation",new e.SFInt32),new t(r.inputOutput,"vTessellation",new e.SFInt32),new t(r.initializeOnly,"uClosed",new e.SFBool),new t(r.initializeOnly,"vClosed",new e.SFBool),new t(r.initializeOnly,"uOrder",new e.SFInt32(3)),new t(r.initializeOnly,"vOrder",new e.SFInt32(3)),new t(r.initializeOnly,"uDimension",new e.SFInt32),new t(r.initializeOnly,"vDimension",new e.SFInt32),new t(r.initializeOnly,"uKnot",new e.MFDouble),new t(r.initializeOnly,"vKnot",new e.MFDouble),new t(r.inputOutput,"weight",new e.MFDouble),new t(r.inputOutput,"texCoord",new e.SFNode),new t(r.inputOutput,"controlPoint",new e.SFNode)]),getTypeName:function(){return"NurbsPatchSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"}});return o});e("x_ite/Components/NURBS/NurbsPositionInterpolator",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Interpolation/PositionInterpolator","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast","x_ite/Browser/NURBS/NURBS","nurbs"],function(e,t,i,n,r,o,s,u,a){"use strict";function l(t){n.call(this,t);this.addType(o.NurbsPositionInterpolator);this.addChildObjects("rebuild",new e.SFTime);this.interpolator=new r(t);this.knots=[];this.weights=[];this.controlPoints=[];this.mesh={};this.sampleOptions={resolution:[128]}}l.prototype=Object.assign(Object.create(n.prototype),{constructor:l,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOnly,"set_fraction",new e.SFFloat),new t(o.inputOutput,"order",new e.SFInt32(3)),new t(o.inputOutput,"knot",new e.MFDouble),new t(o.inputOutput,"weight",new e.MFDouble),new t(o.inputOutput,"controlPoint",new e.SFNode),new t(o.outputOnly,"value_changed",new e.SFVec3f)]),getTypeName:function(){return"NurbsPositionInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this);this.order_.addInterest("requestRebuild",this);this.knot_.addInterest("requestRebuild",this);this.weight_.addInterest("requestRebuild",this);this.controlPoint_.addInterest("set_controlPoint__",this);this.rebuild_.addInterest("build",this);this.set_fraction_.addFieldInterest(this.interpolator.set_fraction_);this.interpolator.value_changed_.addFieldInterest(this.value_changed_);this.interpolator.setup();this.set_controlPoint__()},set_controlPoint__:function(){if(this.controlPointNode)this.controlPointNode.removeInterest("requestRebuild",this);this.controlPointNode=s(o.X3DCoordinateNode,this.controlPoint_);if(this.controlPointNode)this.controlPointNode.addInterest("requestRebuild",this);this.requestRebuild()},getClosed:function(e,t,i,n){return false&&u.getClosed(e,t,i,n)},getKnots:function(e,t,i,n,r){return u.getKnots(e,t,i,n,r)},getWeights:function(e,t,i,n,r){return u.getWeights(e,t,i,n,r)},getControlPoints:function(e,t,i,n){return u.getControlPoints(e,t,i,n)},requestRebuild:function(){this.rebuild_.addEvent()},build:function(){if(this.order_.getValue()<2)return;if(!this.controlPointNode)return;if(this.controlPointNode.getSize()<this.order_.getValue())return;var t=this.getClosed(this.order_.getValue(),this.knot_,this.weight_,this.controlPointNode),i=this.getControlPoints(this.controlPoints,t,this.order_.getValue(),this.controlPointNode);var n=this.getKnots(this.knots,t,this.order_.getValue(),this.controlPointNode.getSize(),this.knot_),r=n[n.length-1]-n[0];var o=this.getWeights(this.weights,t,this.order_.getValue(),this.controlPointNode.getSize(),this.weight_);var s=this.order_.getValue()-1;var u=this.surface=(this.surface||a)({boundary:["open"],degree:[s],knots:[n],weights:o,points:i,debug:false});var l=a.sample(this.mesh,u,this.sampleOptions),h=l.points,d=this.interpolator;d.key_.length=0;d.keyValue_.length=0;for(var c=0,f=h.length;c<f;c+=3){d.key_.push(n[0]+c/(f-3)*r);d.keyValue_.push(new e.SFVec3f(h[c],h[c+1],h[c+2]))}}});return l});e("x_ite/Components/NURBS/NurbsSet",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/Grouping/X3DBoundedObject","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(e,t,i,n,r,o,s){"use strict";function u(e,t,i,n,r,o){var s={};for(var u=r;u<o;++u)s[getId(n[u])]=true;function a(e){return s[getId(e)]}return e.remove(t,i,a)}function a(e){n.call(this,e);r.call(this,e);this.addType(o.NurbsSet);this.geometryNodes=[]}a.prototype=Object.assign(Object.create(n.prototype),r.prototype,{constructor:a,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"tessellationScale",new e.SFFloat(1)),new t(o.initializeOnly,"bboxSize",new e.SFVec3f(-1,-1,-1)),new t(o.initializeOnly,"bboxCenter",new e.SFVec3f),new t(o.inputOnly,"addGeometry",new e.MFNode),new t(o.inputOnly,"removeGeometry",new e.MFNode),new t(o.inputOutput,"geometry",new e.MFNode)]),getTypeName:function(){return"NurbsSet"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this);r.prototype.initialize.call(this);this.tessellationScale_.addInterest("set_tessellationScale__",this);this.addGeometry_.addInterest("set_addGeometry__",this);this.removeGeometry_.addInterest("set_removeGeometry__",this);this.geometry_.addInterest("set_geometry__",this);this.set_geometry__()},set_tessellationScale__:function(){var e=Math.max(0,this.tessellationScale_.getValue());for(var t=0,i=this.geometryNodes.length;t<i;++t)this.geometryNodes[t].setTessellationScale(e)},set_addGeometry__:function(){this.addGeometry_.setTainted(true);this.addGeometry_.erase(u(this.addGeometry_,0,this.addGeometry_.length,this.geometry_,0,this.geometry_.length),this.addGeometry_.length);for(var e=0,t=this.addGeometry_.length;e<t;++e)this.geometry_.push(this.addGeometry_[e]);this.addGeometry_.setTainted(false)},set_removeGeometry__:function(){this.geometry_.erase(u(this.geometry_,0,this.geometry_.length,this.removeGeometry_,0,this.removeGeometry_.length),this.geometry__.length)},set_geometry__:function(){for(var e=0,t=this.geometryNodes.length;e<t;++e)this.geometryNodes[e].setTessellationScale(1);this.geometryNodes.length=0;for(var e=0,t=this.geometry_.length;e<t;++e){var i=s(o.X3DNurbsSurfaceGeometryNode,this.geometry_[e]);if(i)this.geometryNodes.push(i)}this.set_tessellationScale__()}});return a});e("standard/Math/Geometry/Triangle2",[],function(){"use strict";return{isPointInTriangle:function(e,t,i,n){var r=(t.y-i.y)*(e.x-i.x)+(i.x-t.x)*(e.y-i.y);if(r==0)return false;var o=((t.y-i.y)*(n.x-i.x)+(i.x-t.x)*(n.y-i.y))/r;if(o<0||o>1)return false;var s=((i.y-e.y)*(n.x-i.x)+(e.x-i.x)*(n.y-i.y))/r;if(s<0||s>1)return false;var u=1-o-s;if(u<0||u>1)return false;return true}}});e("x_ite/Components/NURBS/NurbsSurfaceInterpolator",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DChildNode","x_ite/Components/NURBS/NurbsPatchSurface","x_ite/Bits/X3DConstants","standard/Math/Geometry/Line3","standard/Math/Geometry/Triangle2","standard/Math/Numbers/Vector3"],function(e,t,i,n,r,o,s,u,a){"use strict";function l(e){n.call(this,e);this.addType(o.NurbsSurfaceInterpolator);this.geometry=new r(e)}l.prototype=Object.assign(Object.create(n.prototype),{constructor:l,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOnly,"set_fraction",new e.SFVec2f),new t(o.initializeOnly,"uOrder",new e.SFInt32(3)),new t(o.initializeOnly,"vOrder",new e.SFInt32(3)),new t(o.initializeOnly,"uDimension",new e.SFInt32),new t(o.initializeOnly,"vDimension",new e.SFInt32),new t(o.initializeOnly,"uKnot",new e.MFDouble),new t(o.initializeOnly,"vKnot",new e.MFDouble),new t(o.inputOutput,"weight",new e.MFDouble),new t(o.inputOutput,"controlPoint",new e.SFNode),new t(o.outputOnly,"normal_changed",new e.SFVec3f),new t(o.outputOnly,"position_changed",new e.SFVec3f)]),getTypeName:function(){return"NurbsSurfaceInterpolator"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"children"},initialize:function(){this.set_fraction_.addInterest("set_fraction__",this);this.uOrder_.addFieldInterest(this.geometry.uOrder_);this.vOrder_.addFieldInterest(this.geometry.vOrder_);this.uDimension_.addFieldInterest(this.geometry.uDimension_);this.vDimension_.addFieldInterest(this.geometry.vDimension_);this.uKnot_.addFieldInterest(this.geometry.uKnot_);this.vKnot_.addFieldInterest(this.geometry.vKnot_);this.weight_.addFieldInterest(this.geometry.weight_);this.controlPoint_.addFieldInterest(this.geometry.controlPoint_);this.geometry.uTessellation_=128;this.geometry.vTessellation_=128;this.geometry.uOrder_=this.uOrder_;this.geometry.vOrder_=this.vOrder_;this.geometry.uDimension_=this.uDimension_;this.geometry.vDimension_=this.vDimension_;this.geometry.uKnot_=this.uKnot_;this.geometry.vKnot_=this.vKnot_;this.geometry.weight_=this.weight_;this.geometry.controlPoint_=this.controlPoint_;this.geometry.setup()},set_fraction__:function(){var e=new a(0,0,0),t=new a(0,0,0),i=new a(0,0,0),n=new a(0,0,0),r=new s(a.Zero,a.zAxis),o={};return function(){var s=this.set_fraction_.getValue(),l=this.geometry.getTexCoords(),h=this.geometry.getNormals(),d=this.geometry.getVertices();for(var c=0,f=0,g=l.length;c<g;c+=12,f+=9){e.set(l[c+0],l[c+1],0);t.set(l[c+4],l[c+5],0);i.set(l[c+7],l[c+9],0);if(u.isPointInTriangle(e,t,i,s)){r.set(n.set(s.x,s.y,0),a.zAxis);if(r.intersectsTriangle(e,t,i,o)){var p=o.u,_=o.v,v=o.t;var m=new a(v*h[f+0]+p*h[f+3]+_*h[f+6],v*h[f+1]+p*h[f+4]+_*h[f+7],v*h[f+2]+p*h[f+5]+_*h[f+8]);var y=new a(v*d[c+0]+p*d[c+4]+_*d[c+8],v*d[c+1]+p*d[c+5]+_*d[c+9],v*d[c+2]+p*d[c+6]+_*d[c+10]);this.normal_changed_=m;this.position_changed_=y}}}}}()});return l});e("x_ite/Components/NURBS/NurbsSweptSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(e,t,i,n,r,o,s){"use strict";function u(e){r.call(this,e);this.addType(o.NurbsSweptSurface);this.extrusion=new n(e)}u.prototype=Object.assign(Object.create(r.prototype),{constructor:u,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.initializeOnly,"solid",new e.SFBool(true)),new t(o.initializeOnly,"ccw",new e.SFBool(true)),new t(o.inputOutput,"crossSectionCurve",new e.SFNode),new t(o.inputOutput,"trajectoryCurve",new e.SFNode)]),getTypeName:function(){return"NurbsSweptSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){r.prototype.initialize.call(this);this.crossSectionCurve_.addInterest("set_crossSectionCurve__",this);this.trajectoryCurve_.addInterest("set_trajectoryCurve__",this);var e=this.extrusion;e.beginCap_=false;e.endCap_=false;e.solid_=true;e.ccw_=true;e.convex_=true;e.creaseAngle_=Math.PI;e.setup();e.crossSection_.setTainted(true);e.spine_.setTainted(true);this.set_crossSectionCurve__();this.set_trajectoryCurve__()},set_crossSectionCurve__:function(){if(this.crossSectionCurveNode)this.crossSectionCurveNode.removeInterest("requestRebuild",this);this.crossSectionCurveNode=s(o.X3DNurbsControlCurveNode,this.crossSectionCurve_);if(this.crossSectionCurveNode)this.crossSectionCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){if(this.trajectoryCurveNode)this.trajectoryCurveNode.rebuild_.removeInterest("requestRebuild",this);this.trajectoryCurveNode=s(o.NurbsCurve,this.trajectoryCurve_);if(this.trajectoryCurveNode)this.trajectoryCurveNode.rebuild_.addInterest("requestRebuild",this)},build:function(){if(!this.crossSectionCurveNode)return;if(!this.trajectoryCurveNode)return;var e=this.extrusion;e.crossSection_=this.crossSectionCurveNode.tessellate();e.spine_=this.trajectoryCurveNode.tessellate();e.rebuild();this.getColors().assign(e.getColors());this.getTexCoords().assign(e.getTexCoords());this.getNormals().assign(e.getNormals());this.getVertices().assign(e.getVertices());this.getMultiTexCoords().push(this.getTexCoords());if(!this.ccw_.getValue()){var t=this.getNormals();for(var i=0,n=t.length;i<n;++i)t[i]=-t[i]}this.setSolid(this.solid_.getValue());this.setCCW(this.ccw_.getValue())}});return u});e("x_ite/Components/NURBS/NurbsSwungSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Geometry3D/Extrusion","x_ite/Components/NURBS/X3DParametricGeometryNode","x_ite/Bits/X3DConstants","x_ite/Bits/X3DCast"],function(e,t,i,n,r,o,s){"use strict";function u(e){r.call(this,e);this.addType(o.NurbsSwungSurface);this.extrusion=new n(e)}u.prototype=Object.assign(Object.create(r.prototype),{constructor:u,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.initializeOnly,"solid",new e.SFBool(true)),new t(o.initializeOnly,"ccw",new e.SFBool(true)),new t(o.inputOutput,"profileCurve",new e.SFNode),new t(o.inputOutput,"trajectoryCurve",new e.SFNode)]),getTypeName:function(){return"NurbsSwungSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"},initialize:function(){r.prototype.initialize.call(this);this.profileCurve_.addInterest("set_profileCurve__",this);this.trajectoryCurve_.addInterest("set_trajectoryCurve__",this);var e=this.extrusion;e.beginCap_=false;e.endCap_=false;e.solid_=true;e.ccw_=true;e.convex_=true;e.creaseAngle_=Math.PI;e.setup();e.crossSection_.setTainted(true);e.spine_.setTainted(true);this.set_profileCurve__();this.set_trajectoryCurve__()},set_profileCurve__:function(){if(this.profileCurveNode)this.profileCurveNode.removeInterest("requestRebuild",this);this.profileCurveNode=s(o.X3DNurbsControlCurveNode,this.profileCurve_);if(this.profileCurveNode)this.profileCurveNode.addInterest("requestRebuild",this)},set_trajectoryCurve__:function(){if(this.trajectoryCurveNode)this.trajectoryCurveNode.removeInterest("requestRebuild",this);this.trajectoryCurveNode=s(o.X3DNurbsControlCurveNode,this.trajectoryCurve_);if(this.trajectoryCurveNode)this.trajectoryCurveNode.addInterest("requestRebuild",this)},build:function(){if(!this.profileCurveNode)return;if(!this.trajectoryCurveNode)return;var e=this.extrusion;e.crossSection_=this.profileCurveNode.tessellate();e.spine_=this.trajectoryCurveNode.tessellate(true);e.rebuild();this.getColors().assign(e.getColors());this.getTexCoords().assign(e.getTexCoords());this.getNormals().assign(e.getNormals());this.getVertices().assign(e.getVertices());this.getMultiTexCoords().push(this.getTexCoords());if(!this.ccw_.getValue()){var t=this.getNormals();for(var i=0,n=t.length;i<n;++i)t[i]=-t[i]}this.setSolid(this.solid_.getValue());this.setCCW(this.ccw_.getValue())}});return u});e("x_ite/Components/NURBS/NurbsTextureCoordinate",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Core/X3DNode","x_ite/Bits/X3DConstants","standard/Math/Numbers/Vector4"],function(e,t,i,n,r,o){"use strict";function s(e){n.call(this,e);this.addType(r.NurbsTextureCoordinate);this.constrolPoints=[]}s.prototype=Object.assign(Object.create(n.prototype),{constructor:s,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.initializeOnly,"uOrder",new e.SFInt32(3)),new t(r.initializeOnly,"vOrder",new e.SFInt32(3)),new t(r.initializeOnly,"uDimension",new e.SFInt32),new t(r.initializeOnly,"vDimension",new e.SFInt32),new t(r.initializeOnly,"uKnot",new e.MFDouble),new t(r.initializeOnly,"vKnot",new e.MFDouble),new t(r.inputOutput,"weight",new e.MFFloat),new t(r.inputOutput,"controlPoint",new e.MFVec2f)]),getTypeName:function(){return"NurbsTextureCoordinate"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"texCoord"},initialize:function(){n.prototype.initialize.call(this)},getControlPoints:function(){var e=this.controlPoint_.getValue(),t=this.constrolPoints;for(var i=0,n=this.uDimension_.getValue();i<n;++i){var r=t[i];if(!r)r=t[i]=[];for(var s=0,u=this.vDimension_.getValue();s<u;++s){var a=r[s]||new o,l=(s*n+i)*2;r[s]=a.set(e[l],e[l+1],0,1)}}return t},isValid:function(){if(this.uOrder_.getValue()<2)return false;if(this.vOrder_.getValue()<2)return false;if(this.uDimension_.getValue()<this.uOrder_.getValue())return false;if(this.vDimension_.getValue()<this.vOrder_.getValue())return false;if(this.controlPoint_.length!==this.uDimension_.getValue()*this.vDimension_.getValue())return false;return true}});return s});e("x_ite/Components/NURBS/NurbsTrimmedSurface",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,r){"use strict";function o(e){n.call(this,e);this.addType(r.NurbsTrimmedSurface)}o.prototype=Object.assign(Object.create(n.prototype),{constructor:o,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.initializeOnly,"solid",new e.SFBool(true)),new t(r.inputOutput,"uTessellation",new e.SFInt32),new t(r.inputOutput,"vTessellation",new e.SFInt32),new t(r.initializeOnly,"uClosed",new e.SFBool),new t(r.initializeOnly,"vClosed",new e.SFBool),new t(r.initializeOnly,"uOrder",new e.SFInt32(3)),new t(r.initializeOnly,"vOrder",new e.SFInt32(3)),new t(r.initializeOnly,"uDimension",new e.SFInt32),new t(r.initializeOnly,"vDimension",new e.SFInt32),new t(r.initializeOnly,"uKnot",new e.MFDouble),new t(r.initializeOnly,"vKnot",new e.MFDouble),new t(r.inputOutput,"weight",new e.MFDouble),new t(r.inputOutput,"texCoord",new e.SFNode),new t(r.inputOutput,"controlPoint",new e.SFNode),new t(r.inputOnly,"addTrimmingContour",new e.MFNode),new t(r.inputOnly,"removeTrimmingContour",new e.MFNode),new t(r.inputOutput,"trimmingContour",new e.MFNode)]),getTypeName:function(){return"NurbsTrimmedSurface"},getComponentName:function(){return"NURBS"},getContainerField:function(){return"geometry"}});return o});e(["x_ite/Components","x_ite/Components/NURBS/Contour2D","x_ite/Components/NURBS/ContourPolyline2D","x_ite/Components/NURBS/CoordinateDouble","x_ite/Components/NURBS/NurbsCurve","x_ite/Components/NURBS/NurbsCurve2D","x_ite/Components/NURBS/NurbsOrientationInterpolator","x_ite/Components/NURBS/NurbsPatchSurface","x_ite/Components/NURBS/NurbsPositionInterpolator","x_ite/Components/NURBS/NurbsSet","x_ite/Components/NURBS/NurbsSurfaceInterpolator","x_ite/Components/NURBS/NurbsSweptSurface","x_ite/Components/NURBS/NurbsSwungSurface","x_ite/Components/NURBS/NurbsTextureCoordinate","x_ite/Components/NURBS/NurbsTrimmedSurface","x_ite/Components/NURBS/X3DNurbsControlCurveNode","x_ite/Components/NURBS/X3DNurbsSurfaceGeometryNode","x_ite/Components/NURBS/X3DParametricGeometryNode"],function(e,t,i,n,r,o,s,u,a,l,h,d,c,f,g,p,_,v){"use strict";e.addComponent({name:"NURBS",types:{Contour2D:t,ContourPolyline2D:i,CoordinateDouble:n,NurbsCurve:r,NurbsCurve2D:o,NurbsOrientationInterpolator:s,NurbsPatchSurface:u,NurbsPositionInterpolator:a,NurbsSet:l,NurbsSurfaceInterpolator:h,NurbsSweptSurface:d,NurbsSwungSurface:c,NurbsTextureCoordinate:f,NurbsTrimmedSurface:g},abstractTypes:{X3DNurbsControlCurveNode:p,X3DNurbsSurfaceGeometryNode:_,X3DParametricGeometryNode:v}})})})();
