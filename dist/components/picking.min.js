!function(){var e=X3D.define;X3D.require;e("x_ite/Browser/Picking/IntersectionType",[],function(){"use strict";var e=0;return{BOUNDS:e++,GEOMETRY:e++}}),e("x_ite/Browser/Picking/SortOrder",[],function(){"use strict";var e=0;return{ANY:e++,CLOSEST:e++,ALL:e++,ALL_SORTED:e++}}),e("x_ite/Components/Picking/X3DPickSensorNode",["x_ite/Fields","x_ite/Components/Core/X3DSensorNode","x_ite/Bits/TraverseType","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/SortOrder","standard/Math/Numbers/Matrix4","standard/Math/Algorithms/QuickSort","standard/Utility/ObjectCache"],function(e,t,i,n,o,s,r,c,a){"use strict";function h(i){t.call(this,i),this.addType(n.X3DPickSensorNode),this.objectType=new Set,this.intersectionType=o.BOUNDS,this.sortOrder=s.CLOSEST,this.pickTargetNodes=new Set,this.modelMatrices=[],this.targets=[],this.targets.size=0,this.pickedGeometries=new e.MFNode}var p=a(r);return h.prototype=Object.assign(Object.create(t.prototype),{constructor:h,initialize:function(){this.isLive().addInterest("set_live__",this),this.enabled_.addInterest("set_live__",this),this.objectType_.addInterest("set_objectType__",this),this.intersectionType_.addInterest("set_intersectionType__",this),this.sortOrder_.addInterest("set_sortOrder__",this),this.pickTarget_.addInterest("set_pickTarget__",this),this.set_objectType__(),this.set_intersectionType__(),this.set_sortOrder__(),this.set_pickTarget__()},getObjectType:function(){return this.objectType},getIntersectionType:function(){return this.intersectionType},getSortOrder:function(){return this.sortOrder},getModelMatrices:function(){return this.modelMatrices},getTargets:function(){return this.targets},getPickShape:function(){var e=new WeakMap;return function(t){var i=e.get(t);if(void 0!==i)return i;var n=this.getExecutionContext().createNode("Shape",!1),o=this.getExecutionContext().createNode("CollidableShape",!1);return n.setPrivate(!0),o.setPrivate(!0),o.setConvex(!0),n.geometry_=t,o.shape_=n,n.setup(),o.setup(),e.set(t,o),o}}(),getPickedGeometries:function(){function e(e,t){return e.distance<t.distance}var t=[],i=new c(t,e);return function(){var e=this.targets,n=e.size,o=this.pickedGeometries;t.length=0;for(var r=0;r<n;++r){var c=e[r];c.intersected&&t.push(c)}if(0===t.length)return o.length=0,o;switch(this.sortOrder){case s.ANY:o[0]=this.getPickedGeometry(t[0]),o.length=1;break;case s.CLOSEST:i.sort(0,t.length),o[0]=this.getPickedGeometry(t[0]),o.length=1;break;case s.ALL:for(var r=0,a=t.length;r<a;++r)o[r]=this.getPickedGeometry(t[r]);o.length=a;break;case s.ALL_SORTED:i.sort(0,t.length);for(var r=0,a=t.length;r<a;++r)o[r]=this.getPickedGeometry(t[r]);o.length=a}return o}}(),getPickedGeometry:function(e){var t=this.getExecutionContext(),i=e.geometryNode;if(i.getExecutionContext()===t)return i;var o=i.getExecutionContext();if(o.getType().indexOf(n.X3DPrototypeInstance)!==-1&&o.getExecutionContext()===t)return o;for(var s=e.pickingHierarchy,r=s.length-1;r>=0;--r){var c=s[r];if(c.getExecutionContext()===t)return c;var o=c.getExecutionContext();if(o.getType().indexOf(n.X3DPrototypeInstance)!==-1&&o.getExecutionContext()===t)return o}return null},set_live__:function(){this.getLive()&&this.enabled_.getValue()&&!this.objectType.has("NONE")?(this.getBrowser().addPickSensor(this),this.setPickableObject(!0)):(this.getBrowser().removePickSensor(this),this.setPickableObject(!1))},set_objectType__:function(){this.objectType.clear();for(var e=0,t=this.objectType_.length;e<t;++e)this.objectType.add(this.objectType_[e]);this.set_live__()},set_intersectionType__:function(){var e=new Map([["BOUNDS",o.BOUNDS],["GEOMETRY",o.GEOMETRY]]);return function(){this.intersectionType=e.get(this.intersectionType_.getValue()),void 0===this.intersectionType&&(this.intersectionType=o.BOUNDS)}}(),set_sortOrder__:function(){var e=new Map([["ANY",s.ANY],["CLOSEST",s.CLOSEST],["ALL",s.ALL],["ALL_SORTED",s.ALL_SORTED]]);return function(){this.sortOrder=e.get(this.sortOrder_.getValue()),void 0===this.sortOrder&&(this.sortOrder=s.CLOSEST)}}(),set_pickTarget__:function(){this.pickTargetNodes.clear();for(var e=0,t=this.pickTarget_.length;e<t;++e)try{for(var i=this.pickTarget_[e].getValue().getInnerNode(),o=i.getType(),s=o.length-1;s>=0;--s)switch(o[s]){case n.Inline:case n.Shape:case n.X3DGroupingNode:this.pickTargetNodes.add(i);break;default:continue}}catch(e){}},traverse:function(e,t){e===i.PICKING&&this.getPickableObject()&&this.modelMatrices.push(p.pop().assign(t.getModelViewMatrix().get()))},collect:function(e,t,i){var n=this.pickTargetNodes;if(i.some(function(e){return n.has(e)})){var o=this.targets;if(o.size<o.length)var s=o[o.size];else{var s={geometryNode:null,modelMatrix:new r,pickingHierarchy:[]};o.push(s)}++o.size,s.intersected=!1,s.geometryNode=e,s.modelMatrix.assign(t);for(var c=s.pickingHierarchy,a=0,h=i.length;a<h;++a)c[a]=i[a];c.length=h}},process:function(){for(var e=this.modelMatrices,t=0,i=e.length;t<i;++t)p.push(e[t]);this.modelMatrices.length=0,this.targets.size=0}}),h}),e("x_ite/Components/Picking/LinePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/SortOrder","standard/Math/Numbers/Vector3","standard/Math/Numbers/Matrix4","standard/Math/Geometry/Box3","standard/Math/Geometry/Line3","standard/Math/Algorithms/QuickSort"],function(e,t,i,n,o,s,r,c,a,h,p,d){"use strict";function l(e){n.call(this,e),this.addType(o.LinePickSensor),this.pickingGeometryNode=null}return l.prototype=Object.assign(Object.create(n.prototype),{constructor:l,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.outputOnly,"pickedTextureCoordinate",new e.MFVec3f),new t(o.outputOnly,"pickedNormal",new e.MFVec3f),new t(o.outputOnly,"pickedPoint",new e.MFVec3f),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"LinePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode=null;try{for(var e=this.pickingGeometry_.getValue().getInnerNode(),t=e.getType(),i=t.length-1;i>=0;--i)switch(t[i]){case o.IndexedLineSet:case o.LineSet:this.pickingGeometryNode=e;break;default:continue}}catch(e){}},process:function(){function t(e,t){return e.distance<t.distance}var i=new h,o=new h,l=new c(0,0,0),g=new c(0,0,0),u=new a,m=new c(0,0,0),y=new c(0,0,0),_=new p(c.Zero,c.zAxis),k=new c(0,0,0),f=new c(0,0,0),w=[],S=[],v=[],b=new c(0,0,0),x=new c(0,0,0),O=new e.MFVec3f,N=new e.MFVec3f,T=new e.MFVec3f,P=new d(S,t);return function(){if(this.pickingGeometryNode){var e=this.getModelMatrices(),t=this.getTargets();switch(this.getIntersectionType()){case s.BOUNDS:for(var c=0,a=e.length;c<a;++c){var h=e[c];i.assign(this.pickingGeometryNode.getBBox()).multRight(h);for(var p=0,d=t.size;p<d;++p){var C=t[p];o.assign(C.geometryNode.getBBox()).multRight(C.modelMatrix),i.intersectsBox(o)&&(l.assign(i.center),g.assign(o.center),C.intersected=!0,C.distance=l.distance(g))}}var B=this.getPickedGeometries(),G=Boolean(B.length);B.remove(0,B.length,null),G!==this.isActive_.getValue()&&(this.isActive_=G),this.pickedGeometry_.equals(B)||(this.pickedGeometry_=B);break;case s.GEOMETRY:S.length=0;for(var c=0,a=e.length;c<a;++c){var h=e[c];i.assign(this.pickingGeometryNode.getBBox()).multRight(h);for(var p=0,d=t.size;p<d;++p)try{var C=t[p],M=C.geometryNode,D=this.pickingGeometryNode.getVertices(),F=S.length;o.assign(M.getBBox()).multRight(C.modelMatrix),u.assign(C.modelMatrix).inverse().multLeft(h);for(var L=0,j=D.length;L<j;L+=8)if(u.multVecMatrix(m.set(D[L+0],D[L+1],D[L+2])),u.multVecMatrix(y.set(D[L+4],D[L+5],D[L+6])),_.setPoints(m,y),v.length=0,M.intersectsLine(_,w,C.modelMatrix,v))for(var V=0,A=v.length;V<A;++V){var I=v[V];k.assign(I.point).subtract(m),f.assign(I.point).subtract(y);var z=k.add(f).abs(),E=m.distance(y);z<=E&&(I.distance=o.center.distance(h.multVecMatrix(b.assign(I.point))),S.push(I))}F!==S.length&&(l.assign(i.center),g.assign(o.center),C.intersected=!0,C.distance=l.distance(g))}catch(e){console.log(e)}}var B=this.getPickedGeometries(),G=Boolean(B.length);B.remove(0,B.length,null),G!==this.isActive_.getValue()&&(this.isActive_=G),this.pickedGeometry_.equals(B)||(this.pickedGeometry_=B);var X=!1,F=S.length;switch(this.getSortOrder()){case r.ANY:F=Math.min(F,1);break;case r.CLOSEST:X=!0,F=Math.min(F,1);break;case r.ALL:break;case r.ALL_SORTED:X=!0}X&&P.sort(0,S.length);for(var V=0;V<F;++V){var I=S[V],p=I.texCoord;x.set(p.x,p.y,p.z),O[V]=x,N[V]=I.normal,T[V]=I.point}O.length=F,N.length=F,T.length=F,this.pickedTextureCoordinate_.equals(O)||(this.pickedTextureCoordinate_=O),this.pickedNormal_.equals(N)||(this.pickedNormal_=N),this.pickedPoint_.equals(T)||(this.pickedPoint_=T)}}n.prototype.process.call(this)}}()}),l}),e("x_ite/Components/Picking/X3DPickableObject",["x_ite/Bits/X3DConstants"],function(e){"use strict";function t(t){this.addType(e.X3DPickableObject),this.objectType=new Set}return t.prototype={constructor:t,initialize:function(){this.objectType_.addInterest("set_objectType__",this),this.set_objectType__()},getObjectType:function(){return this.objectType},set_objectType__:function(){this.objectType.clear();for(var e=0,t=this.objectType_.length;e<t;++e)this.objectType.add(this.objectType_[e])}},t}),e("x_ite/Components/Picking/PickableGroup",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Grouping/X3DGroupingNode","x_ite/Components/Picking/X3DPickableObject","x_ite/Bits/X3DConstants","x_ite/Bits/TraverseType"],function(e,t,i,n,o,s,r){"use strict";function c(e){n.call(this,e),o.call(this,e),this.addType(s.PickableGroup)}return c.prototype=Object.assign(Object.create(n.prototype),o.prototype,{constructor:c,fieldDefinitions:new i([new t(s.inputOutput,"metadata",new e.SFNode),new t(s.inputOutput,"pickable",new e.SFBool(!0)),new t(s.inputOutput,"objectType",new e.MFString("ALL")),new t(s.initializeOnly,"bboxSize",new e.SFVec3f(-1,-1,-1)),new t(s.initializeOnly,"bboxCenter",new e.SFVec3f),new t(s.inputOnly,"addChildren",new e.MFNode),new t(s.inputOnly,"removeChildren",new e.MFNode),new t(s.inputOutput,"children",new e.MFNode)]),getTypeName:function(){return"PickableGroup"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),o.prototype.initialize.call(this),this.pickable_.addInterest("set_pickable__",this),this.set_pickable__()},set_pickableObjects__:function(){this.set_pickable__()},set_pickable__:function(){this.setPickableObject(Boolean(this.pickable_.getValue()||this.getTransformSensors().size))},traverse:function(){var e=new Set;return function(t,i){if(t===r.PICKING){if(this.pickable_.getValue()){if(this.getObjectType().has("NONE"))return;var o=i.getBrowser(),s=o.getPickable();if(this.getObjectType().has("ALL"))s.push(!0),n.prototype.traverse.call(this,t,i),s.pop();else{var c=o.getPickSensors();c[c.length-1].forEach(function(t){if(!t.getObjectType().has("ALL")){var i=!1;for(var n of this.getObjectType())if(t.getObjectType().has(n)){i=!0;break}if(!i)return}e.add(t)},this),s.push(!0),c.push(e),n.prototype.traverse.call(this,t,i),c.pop(),s.pop(),e.clear()}}}else n.prototype.traverse.call(this,t,i)}}()}),c}),e("x_ite/Browser/Picking/VolumePicker",["standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Numbers/Matrix4",X3D.getComponentUrl("rigid-body-physics")],function(e,t,i,n){"use strict";function o(){this.broadphase=new s.btDbvtBroadphase,this.collisionConfiguration=new s.btDefaultCollisionConfiguration,this.dispatcher=new s.btCollisionDispatcher(this.collisionConfiguration),this.collisionWorld=new s.btCollisionWorld(this.dispatcher,this.broadphase,this.collisionConfiguration),this.compoundShape1=new s.btCompoundShape,this.motionState1=new s.btDefaultMotionState,this.constructionInfo1=new s.btRigidBodyConstructionInfo(0,this.motionState1,this.compoundShape1),this.rigidBody1=new s.btRigidBody(this.constructionInfo1),this.compoundShape2=new s.btCompoundShape,this.motionState2=new s.btDefaultMotionState,this.constructionInfo2=new s.btRigidBodyConstructionInfo(0,this.motionState2,this.compoundShape2),this.rigidBody2=new s.btRigidBody(this.constructionInfo2),this.collisionWorld.addCollisionObject(this.rigidBody1),this.collisionWorld.addCollisionObject(this.rigidBody2)}var s=n.Ammo;return o.prototype={constuctor:o,setChildShape1:function(e,t){this.setChildShape(this.compoundShape1,e,t)},setChildShape2:function(e,t){this.setChildShape(this.compoundShape2,e,t)},setChildShape1Components:function(e,t,i){this.setChildShapeComponents(this.compoundShape1,e,t,i)},setChildShape2Components:function(e,t,i){this.setChildShapeComponents(this.compoundShape2,e,t,i)},setChildShape:function(){var i=new e(0,0,0),n=new t(0,0,1,0),o=new e(1,1,1),r=new s.btVector3(0,0,0);return function(e,t,s){e.getNumChildShapes()&&e.removeChildShapeByIndex(0),s.getNumChildShapes()&&(t.get(i,n,o),r.setValue(o.x,o.y,o.z),s.setLocalScaling(r),e.addChildShape(this.getTransform(i,n),s))}}(),setChildShapeComponents:function(e,t,i,n){e.getNumChildShapes()&&e.removeChildShapeByIndex(0),n.getNumChildShapes()&&(n.setLocalScaling(i),e.addChildShape(t,n))},contactTest:function(){this.collisionWorld.performDiscreteCollisionDetection();for(var e=this.dispatcher.getNumManifolds(),t=0;t<e;++t)for(var i=this.dispatcher.getManifoldByIndexInternal(t),n=i.getNumContacts(),o=0;o<n;++o){var s=i.getContactPoint(o);if(s.getDistance()<=0)return!0}return!1},getTransform:function(){var e=new s.btTransform,t=new s.btVector3(0,0,0),n=new i;return function(i,o,s){var r=s||e;return n.set(i,o),t.setValue(n[12],n[13],n[14]),r.getBasis().setValue(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),r.setOrigin(t),r}}()},o}),e("x_ite/Components/Picking/PointPickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DCast","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/SortOrder","x_ite/Browser/Picking/VolumePicker","standard/Math/Numbers/Vector3","standard/Math/Numbers/Rotation4","standard/Math/Geometry/Box3","standard/Math/Algorithms/QuickSort",X3D.getComponentUrl("rigid-body-physics")],function(e,t,i,n,o,s,r,c,a,h,p,d,l,g){"use strict";function u(e){n.call(this,e),this.addType(s.PointPickSensor),this.pickingGeometryNode=null,this.picker=new a,this.compoundShapes=[]}var m=g.Ammo;return u.prototype=Object.assign(Object.create(n.prototype),{constructor:u,fieldDefinitions:new i([new t(s.inputOutput,"metadata",new e.SFNode),new t(s.inputOutput,"enabled",new e.SFBool(!0)),new t(s.inputOutput,"objectType",new e.MFString("ALL")),new t(s.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(s.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(s.outputOnly,"isActive",new e.SFBool),new t(s.outputOnly,"pickedPoint",new e.MFVec3f),new t(s.inputOutput,"pickingGeometry",new e.SFNode),new t(s.inputOutput,"pickTarget",new e.MFNode),new t(s.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"PointPickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode&&this.pickingGeometryNode.rebuild_.removeInterest("set_geometry__",this),this.pickingGeometryNode=o(s.PointSet,this.pickingGeometry_),this.pickingGeometryNode&&this.pickingGeometryNode.rebuild_.addInterest("set_geometry__",this),this.set_geometry__()},set_geometry__:function(){var e=(new h(0,0,0),new m.btVector3(1,1,1)),t=new m.btVector3,i=new m.btTransform;return function(){var n=this.compoundShapes;if(this.pickingGeometryNode){var o=this.pickingGeometryNode.getCoord();if(o){for(var s=0,r=o.getSize();s<r;++s)if(s<n.length){var c=n[s],a=o.get1Point(s,c.point);t.setValue(a.x,a.y,a.z),i.setOrigin(t),c.setLocalScaling(e),c.updateChildTransform(0,i)}else{var c=new m.btCompoundShape,p=new m.btSphereShape(0),a=o.get1Point(s,new h(0,0,0));c.point=a,t.setValue(a.x,a.y,a.z),i.setOrigin(t),c.addChildShape(i,p),n.push(c)}n.length=r}else n.length=0}else n.length=0}}(),process:function(){function t(e,t){return e.distance<t.distance}var i=new d,o=new d,s=new h(0,0,0),a=new h(0,0,0),g=new m.btTransform,u=new m.btVector3,y=new h(0,0,0),_=new p(0,0,1,0),k=new h(1,1,1),f=new h(0,0,0),w=[],S=new e.MFVec3f,v=new l(w,t);return function(){if(this.pickingGeometryNode){var e=this.getModelMatrices(),t=this.getTargets();switch(this.getIntersectionType()){case r.BOUNDS:for(var h=0,p=e.length;h<p;++h){var d=e[h];i.assign(this.pickingGeometryNode.getBBox()).multRight(d);for(var l=0,m=t.size;l<m;++l){var b=t[l];o.assign(b.geometryNode.getBBox()).multRight(b.modelMatrix),i.intersectsBox(o)&&(s.assign(i.center),a.assign(o.center),b.intersected=!0,b.distance=s.distance(a))}}var x=this.getPickedGeometries(),O=Boolean(x.length);x.remove(0,x.length,null),O!==this.isActive_.getValue()&&(this.isActive_=O),this.pickedGeometry_.equals(x)||(this.pickedGeometry_=x);break;case r.GEOMETRY:var N=this.picker,T=this.compoundShapes;w.length=0;for(var P=0,C=T.length;P<C;++P)T[P].point.distance=Number.POSITIVE_INFINITY;for(var h=0,p=e.length;h<p;++h){var d=e[h];i.assign(this.pickingGeometryNode.getBBox()).multRight(d),d.get(y,_,k),N.getTransform(y,_,g),u.setValue(k.x,k.y,k.z);for(var P=0,C=T.length;P<C;++P){var B=T[P];N.setChildShape1Components(g,u,B);for(var l=0,m=t.size;l<m;++l){var b=t[l],G=this.getPickShape(b.geometryNode);if(o.assign(b.geometryNode.getBBox()).multRight(b.modelMatrix),N.setChildShape2(b.modelMatrix,G.getCompoundShape()),N.contactTest()){s.assign(i.center),a.assign(o.center),b.intersected=!0,b.distance=s.distance(a);var M=B.point;M.distance=Math.min(M.distance,a.distance(d.multVecMatrix(f.assign(M)))),w.push(M)}}}}var x=this.getPickedGeometries(),O=Boolean(x.length);x.remove(0,x.length,null),O!==this.isActive_.getValue()&&(this.isActive_=O),this.pickedGeometry_.equals(x)||(this.pickedGeometry_=x);var D=!1,F=w.length;switch(this.getSortOrder()){case c.ANY:F=Math.min(F,1);break;case c.CLOSEST:D=!0,F=Math.min(F,1);break;case c.ALL:break;case c.ALL_SORTED:D=!0}D&&v.sort(0,w.length);for(var L=0;L<F;++L)S[L]=w[L];S.length=F,this.pickedPoint_.equals(S)||(this.pickedPoint_=S)}}n.prototype.process.call(this)}}()}),u}),e("x_ite/Components/Picking/PrimitivePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/VolumePicker","standard/Math/Numbers/Vector3","standard/Math/Geometry/Box3"],function(e,t,i,n,o,s,r,c,a){"use strict";function h(e){n.call(this,e),this.addType(o.PrimitivePickSensor),this.pickingGeometryNode=null,this.picker=new r}return h.prototype=Object.assign(Object.create(n.prototype),{constructor:h,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"PrimitivePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode=null;try{for(var e=this.pickingGeometry_.getValue().getInnerNode(),t=e.getType(),i=t.length-1;i>=0;--i)switch(t[i]){case o.Box:case o.Cone:case o.Cylinder:case o.Sphere:this.pickingGeometryNode=e;break;default:continue}}catch(e){}},process:function(){var e=new a,t=new a,i=new c(0,0,0),o=new c(0,0,0);return function(){if(this.pickingGeometryNode){var r=this.getModelMatrices(),c=this.getTargets();switch(this.getIntersectionType()){case s.BOUNDS:for(var a=0,h=r.length;a<h;++a){var p=r[a];e.assign(this.pickingGeometryNode.getBBox()).multRight(p);for(var d=0,l=c.size;d<l;++d){var g=c[d];t.assign(g.geometryNode.getBBox()).multRight(g.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),o.assign(t.center),g.intersected=!0,g.distance=i.distance(o))}}var u=this.getPickedGeometries(),m=Boolean(u.length);u.remove(0,u.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(u)||(this.pickedGeometry_=u);break;case s.GEOMETRY:for(var y=this.picker,a=0,h=r.length;a<h;++a){var p=r[a],_=this.getPickShape(this.pickingGeometryNode);e.assign(this.pickingGeometryNode.getBBox()).multRight(p),y.setChildShape1(p,_.getCompoundShape());for(var d=0,l=c.size;d<l;++d){var g=c[d],k=this.getPickShape(g.geometryNode);t.assign(g.geometryNode.getBBox()).multRight(g.modelMatrix),y.setChildShape2(g.modelMatrix,k.getCompoundShape()),y.contactTest()&&(i.assign(e.center),o.assign(t.center),g.intersected=!0,g.distance=i.distance(o))}}var u=this.getPickedGeometries(),m=Boolean(u.length);u.remove(0,u.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(u)||(this.pickedGeometry_=u)}}n.prototype.process.call(this)}}()}),h}),e("x_ite/Components/Picking/VolumePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DCast","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/VolumePicker","standard/Math/Numbers/Vector3","standard/Math/Geometry/Box3"],function(e,t,i,n,o,s,r,c,a,h){"use strict";function p(e){n.call(this,e),this.addType(s.VolumePickSensor),this.pickingGeometryNode=null,this.picker=new c}return p.prototype=Object.assign(Object.create(n.prototype),{constructor:p,fieldDefinitions:new i([new t(s.inputOutput,"metadata",new e.SFNode),new t(s.inputOutput,"enabled",new e.SFBool(!0)),new t(s.inputOutput,"objectType",new e.MFString("ALL")),new t(s.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(s.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(s.outputOnly,"isActive",new e.SFBool),new t(s.inputOutput,"pickingGeometry",new e.SFNode),new t(s.inputOutput,"pickTarget",new e.MFNode),new t(s.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"VolumePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode=o(s.X3DGeometryNode,this.pickingGeometry_)},process:function(){var e=new h,t=new h,i=new a(0,0,0),o=new a(0,0,0);return function(){if(this.pickingGeometryNode){var s=this.getModelMatrices(),c=this.getTargets();switch(this.getIntersectionType()){case r.BOUNDS:for(var a=0,h=s.length;a<h;++a){var p=s[a];e.assign(this.pickingGeometryNode.getBBox()).multRight(p);for(var d=0,l=c.size;d<l;++d){var g=c[d];t.assign(g.geometryNode.getBBox()).multRight(g.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),o.assign(t.center),g.intersected=!0,g.distance=i.distance(o))}}var u=this.getPickedGeometries(),m=Boolean(u.length);u.remove(0,u.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(u)||(this.pickedGeometry_=u);break;case r.GEOMETRY:for(var y=this.picker,a=0,h=s.length;a<h;++a){var p=s[a],_=this.getPickShape(this.pickingGeometryNode);e.assign(this.pickingGeometryNode.getBBox()).multRight(p),y.setChildShape1(p,_.getCompoundShape());for(var d=0,l=c.size;d<l;++d){var g=c[d],k=this.getPickShape(g.geometryNode);t.assign(g.geometryNode.getBBox()).multRight(g.modelMatrix),y.setChildShape2(g.modelMatrix,k.getCompoundShape()),y.contactTest()&&(i.assign(e.center),o.assign(t.center),g.intersected=!0,g.distance=i.distance(o))}}var u=this.getPickedGeometries(),m=Boolean(u.length);u.remove(0,u.length,null),m!==this.isActive_.getValue()&&(this.isActive_=m),this.pickedGeometry_.equals(u)||(this.pickedGeometry_=u)}}n.prototype.process.call(this)}}()}),p}),e(["x_ite/Components","x_ite/Components/Picking/LinePickSensor","x_ite/Components/Picking/PickableGroup","x_ite/Components/Picking/PointPickSensor","x_ite/Components/Picking/PrimitivePickSensor","x_ite/Components/Picking/VolumePickSensor","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Components/Picking/X3DPickableObject",X3D.getComponentUrl("rigid-body-physics")],function(e,t,i,n,o,s,r,c){"use strict";e.addComponent({name:"Picking",types:{LinePickSensor:t,PickableGroup:i,PointPickSensor:n,PrimitivePickSensor:o,VolumePickSensor:s},abstractTypes:{X3DPickSensorNode:r,X3DPickableObject:c}})})}();
