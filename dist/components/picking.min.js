!function(){var e=X3D.define,t=X3D.require;e("x_ite/Browser/Picking/IntersectionType",[],function(){"use strict";var e=0;return{BOUNDS:e++,GEOMETRY:e++}}),e("x_ite/Browser/Picking/SortOrder",[],function(){"use strict";var e=0;return{ANY:e++,CLOSEST:e++,ALL:e++,ALL_SORTED:e++}}),e("x_ite/Components/Picking/X3DPickSensorNode",["x_ite/Fields","x_ite/Components/Core/X3DSensorNode","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/SortOrder","standard/Math/Algorithms/QuickSort","standard/Math/Numbers/Matrix4","standard/Utility/ObjectCache"],function(e,t,i,n,o,r,s,c){"use strict";function a(r){t.call(this,r),this.addType(i.X3DPickSensorNode),this.objectType=new Set,this.intersectionType=n.BOUNDS,this.sortOrder=o.CLOSEST,this.pickTargetNodes=new Set,this.modelMatrices=[],this.targets=[],this.targets.size=0,this.pickedGeometries=new e.MFNode}var p=c(s);return a.prototype=Object.assign(Object.create(t.prototype),{constructor:a,initialize:function(){this.isLive().addInterest("set_live__",this),this.enabled_.addInterest("set_live__",this),this.objectType_.addInterest("set_objectType__",this),this.intersectionType_.addInterest("set_intersectionType__",this),this.sortOrder_.addInterest("set_sortOrder__",this),this.pickTarget_.addInterest("set_pickTarget__",this),this.set_objectType__(),this.set_intersectionType__(),this.set_sortOrder__(),this.set_pickTarget__()},getObjectType:function(){return this.objectType},getIntersectionType:function(){return this.intersectionType},getModelMatrices:function(){return this.modelMatrices},getTargets:function(){return this.targets},getPickShape:function(){var e=new WeakMap;return function(t){if(!e.has(t)){var i=this.getExecutionContext().createNode("Shape",!1),n=this.getExecutionContext().createNode("CollidableShape",!1);i.geometry_=t,n.shape_=i,i.setup(),n.setup(),e.set(t,n)}return e.get(t)}}(),getPickedGeometries:function(){function e(e,t){return e.distance<t.distance}var t=[],i=new r(t,e);return function(){var e=this.targets,n=e.size,r=this.pickedGeometries;t.length=0;for(var s=0;s<n;++s){var c=e[s];c.intersected&&t.push(c)}if(0===t.length)return r.length=0,r;switch(this.sortOrder){case o.ANY:r[0]=this.getPickedGeometry(t[0]),r.length=1;break;case o.CLOSEST:i.sort(0,t.length),r[0]=this.getPickedGeometry(t[0]),r.length=1;break;case o.ALL:for(var s=0,a=t.length;s<a;++s)r[s]=this.getPickedGeometry(t[s]);r.length=a;break;case o.ALL_SORTED:i.sort(0,t.length);for(var s=0,a=t.length;s<a;++s)r[s]=this.getPickedGeometry(t[s]);r.length=a}return r}}(),getPickedGeometry:function(e){var t=this.getExecutionContext(),n=e.geometryNode;if(n.getExecutionContext()===t)return n;var o=n.getExecutionContext();if(o.getType().indexOf(i.X3DPrototypeInstance)!==-1&&o.getExecutionContext()===t)return o;for(var r=e.pickingHierarchy,s=r.length-1;s>=0;--s){var c=r[s];if(c.getExecutionContext()===t)return c;var o=c.getExecutionContext();if(o.getType().indexOf(i.X3DPrototypeInstance)!==-1&&o.getExecutionContext()===t)return o}return null},set_live__:function(){this.getLive()&&this.enabled_.getValue()&&!this.objectType.has("NONE")?(this.getBrowser().addPickSensor(this),this.setPickableObject(!0)):(this.getBrowser().removePickSensor(this),this.setPickableObject(!1))},set_objectType__:function(){this.objectType.clear();for(var e=0,t=this.objectType_.length;e<t;++e)this.objectType.add(this.objectType_[e]);this.set_live__()},set_intersectionType__:function(){var e=new Map([["BOUNDS",n.BOUNDS],["GEOMETRY",n.GEOMETRY]]);return function(){this.intersectionType=e.get(this.intersectionType_.getValue()),void 0===this.intersectionType&&(this.intersectionType=n.BOUNDS)}}(),set_sortOrder__:function(){var e=new Map([["ANY",o.ANY],["CLOSEST",o.CLOSEST],["ALL",o.ALL],["ALL_SORTED",o.ALL_SORTED]]);return function(){this.sortOrder=e.get(this.sortOrder_.getValue()),void 0===this.sortOrder&&(this.sortOrder=o.CLOSEST)}}(),set_pickTarget__:function(){this.pickTargetNodes.clear();for(var e=0,t=this.pickTarget_.length;e<t;++e)try{for(var n=this.pickTarget_[e].getValue().getInnerNode(),o=n.getType(),r=o.length-1;r>=0;--r)switch(o[r]){case i.Inline:case i.Shape:case i.X3DGroupingNode:this.pickTargetNodes.add(n);break;default:continue}}catch(e){}},traverse:function(e,t){this.getPickableObject()&&this.modelMatrices.push(p.pop().assign(t.getModelViewMatrix().get()))},collect:function(e,t,i){var n=this.pickTargetNodes;if(i.some(function(e){return n.has(e)})){var o=this.targets;if(o.size<o.length)var r=o[o.size];else{var r={geometryNode:null,modelMatrix:new s,pickingHierarchy:[]};o.push(r)}++o.size,r.intersected=!1,r.geometryNode=e,r.modelMatrix.assign(t);for(var c=r.pickingHierarchy,a=0,p=i.length;a<p;++a)c[a]=i[a];c.length=p}},process:function(){for(var e=this.modelMatrices,t=0,i=e.length;t<i;++t)p.push(e[t]);this.modelMatrices.length=0,this.targets.size=0}}),a}),e("x_ite/Components/Picking/LinePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,o){"use strict";function r(e){n.call(this,e),this.addType(o.LinePickSensor)}return r.prototype=Object.assign(Object.create(n.prototype),{constructor:r,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.outputOnly,"pickedTextureCoordinate",new e.MFVec3f),new t(o.outputOnly,"pickedNormal",new e.MFVec3f),new t(o.outputOnly,"pickedPoint",new e.MFVec3f),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"LinePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),r}),e("x_ite/Components/Picking/X3DPickableObject",["x_ite/Bits/X3DConstants"],function(e){"use strict";function t(t){this.addType(e.X3DPickableObject),this.objectType=new Set}return t.prototype={constructor:t,initialize:function(){this.objectType_.addInterest("set_objectType__",this),this.set_objectType__()},getObjectType:function(){return this.objectType},set_objectType__:function(){this.objectType.clear();for(var e=0,t=this.objectType_.length;e<t;++e)this.objectType.add(this.objectType_[e])}},t}),e("x_ite/Components/Picking/PickableGroup",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Grouping/X3DGroupingNode","x_ite/Components/Picking/X3DPickableObject","x_ite/Bits/X3DConstants","x_ite/Bits/TraverseType"],function(e,t,i,n,o,r,s){"use strict";function c(e){n.call(this,e),o.call(this,e),this.addType(r.PickableGroup)}return c.prototype=Object.assign(Object.create(n.prototype),o.prototype,{constructor:c,fieldDefinitions:new i([new t(r.inputOutput,"metadata",new e.SFNode),new t(r.inputOutput,"pickable",new e.SFBool(!0)),new t(r.inputOutput,"objectType",new e.MFString("ALL")),new t(r.initializeOnly,"bboxSize",new e.SFVec3f(-1,-1,-1)),new t(r.initializeOnly,"bboxCenter",new e.SFVec3f),new t(r.inputOnly,"addChildren",new e.MFNode),new t(r.inputOnly,"removeChildren",new e.MFNode),new t(r.inputOutput,"children",new e.MFNode)]),getTypeName:function(){return"PickableGroup"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),o.prototype.initialize.call(this),this.pickable_.addInterest("set_pickable__",this),this.set_pickable__()},set_pickableObjects__:function(){this.set_pickable__()},set_pickable__:function(){this.setPickableObject(Boolean(this.pickable_.getValue()||this.getTransformSensors().size))},traverse:function(){var e=new Set;return function(t,i){if(t===s.PICKING){if(this.pickable_.getValue()){if(this.getObjectType().has("NONE"))return;if(this.getObjectType().has("ALL"))n.prototype.traverse.call(this,t,i);else{var o=i.getBrowser(),r=o.getPickSensors(),c=o.getPickable();r[r.length-1].forEach(function(t){if(!t.getObjectType().has("ALL")){var i=!1;for(var n of this.getObjectType())if(t.getObjectType().has(n)){i=!0;break}if(!i)return}e.add(t)},this),c.push(!0),r.push(e),n.prototype.traverse.call(this,t,i),r.pop(),c.pop(),e.clear()}}}else n.prototype.traverse.call(this,t,i)}}()}),c}),e("x_ite/Components/Picking/PointPickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,o){"use strict";function r(e){n.call(this,e),this.addType(o.PointPickSensor)}return r.prototype=Object.assign(Object.create(n.prototype),{constructor:r,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.outputOnly,"pickedPoint",new e.MFVec3f),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"PointPickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),r}),e("x_ite/Browser/Picking/VolumePicker",[t("x_ite/Browser/Networking/urls").getProviderUrl("rigid-body-physics")],function(e){"use strict";function t(){this.broadphase=new i.btDbvtBroadphase,this.collisionConfiguration=new i.btDefaultCollisionConfiguration,this.dispatcher=new i.btCollisionDispatcher(this.collisionConfiguration),this.collsionWorld=new i.btCollisionWorld(this.dispatcher,this.broadphase,this.collisionConfiguration),this.compoundShape1=new i.btCompoundShape,this.motionState1=new i.btDefaultMotionState,this.constructionInfo1=new i.btRigidBodyConstructionInfo(0,this.motionState1,this.compoundShape1),this.rigidBody1=new i.btRigidBody(this.constructionInfo1),this.compoundShape2=new i.btCompoundShape,this.motionState2=new i.btDefaultMotionState,this.constructionInfo2=new i.btRigidBodyConstructionInfo(0,this.motionState2,this.compoundShape2),this.rigidBody2=new i.btRigidBody(this.constructionInfo2),this.collsionWorld.addCollisionObject(this.rigidBody1),this.collsionWorld.addCollisionObject(this.rigidBody2)}var i=e.Ammo;return t.prototype={constuctor:t,setChildShape1:function(e,t){this.compoundShape1.getNumChildShapes()&&this.compoundShape1.removeChildShapeByIndex(0),this.compoundShape1.addChildShape(this.getTransform(e),t)},setChildShape2:function(e,t){this.compoundShape2.getNumChildShapes()&&this.compoundShape2.removeChildShapeByIndex(0),this.compoundShape2.addChildShape(this.getTransform(e),t)},contactTest:function(){this.collsionWorld.performDiscreteCollisionDetection();for(var e=!1,t=this.dispatcher.getNumManifolds(),i=0;i<t;++i)for(var n=this.dispatcher.getManifoldByIndexInternal(i),o=n.getNumContacts(),r=0;r<o;++r){var s=n.getContactPoint(r);e|=s.getDistance()<0}return e},getTransform:function(){var e=new i.btTransform,t=new i.btVector3(0,0,0);return function(i){return t.setValue(i[12],i[13],i[14]),e.getBasis().setValue(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),e.setOrigin(t),e}}()},t}),e("x_ite/Components/Picking/PrimitivePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants","x_ite/Browser/Picking/IntersectionType","x_ite/Browser/Picking/VolumePicker","standard/Math/Numbers/Vector3","standard/Math/Geometry/Box3"],function(e,t,i,n,o,r,s,c,a){"use strict";function p(e){n.call(this,e),this.addType(o.PrimitivePickSensor),this.pickingGeometryNode=null,this.picker=new s}return p.prototype=Object.assign(Object.create(n.prototype),{constructor:p,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"PrimitivePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"},initialize:function(){n.prototype.initialize.call(this),this.pickingGeometry_.addInterest("set_pickingGeometry__",this),this.set_pickingGeometry__()},set_pickingGeometry__:function(){this.pickingGeometryNode=null;try{for(var e=this.pickingGeometry_.getValue().getInnerNode(),t=e.getType(),i=t.length-1;i>=0;--i)switch(t[i]){case o.Box:case o.Cone:case o.Cylinder:case o.Sphere:this.pickingGeometryNode=e;break;default:continue}}catch(e){}},process:function(){var e=new a,t=new a,i=new c(0,0,0),o=new c(0,0,0);return function(){if(this.pickingGeometryNode){var s=this.getModelMatrices(),c=this.getTargets();switch(this.getIntersectionType()){case r.BOUNDS:for(var a=0,p=s.length;a<p;++a){var u=s[a];e.assign(this.pickingGeometryNode.getBBox()).multRight(u);for(var h=0,d=c.size;h<d;++h){var l=c[h];t.assign(l.geometryNode.getBBox()).multRight(l.modelMatrix),e.intersectsBox(t)&&(i.assign(e.center),o.assign(t.center),l.intersected=!0,l.distance=i.distance(o))}}var g=this.getPickedGeometries(),y=Boolean(g.length);y!==this.isActive_.getValue()&&(this.isActive_=y),this.pickedGeometry_.equals(g)||(this.pickedGeometry_=g);break;case r.GEOMETRY:for(var _=this.picker,a=0,p=s.length;a<p;++a){var u=s[a],f=this.getPickShape(this.pickingGeometryNode);e.assign(this.pickingGeometryNode.getBBox()).multRight(u),_.setChildShape1(u,f.getCompoundShape());for(var h=0,d=c.size;h<d;++h){var l=c[h],k=this.getPickShape(l.geometryNode);t.assign(l.geometryNode.getBBox()).multRight(l.modelMatrix),_.setChildShape2(l.modelMatrix,k.getCompoundShape()),_.contactTest()&&(i.assign(e.center),o.assign(t.center),l.intersected=!0,l.distance=i.distance(o))}}var g=this.getPickedGeometries(),y=Boolean(g.length);y!==this.isActive_.getValue()&&(this.isActive_=y),this.pickedGeometry_.equals(g)||(this.pickedGeometry_=g)}}n.prototype.process.call(this)}}()}),p}),e("x_ite/Components/Picking/VolumePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants"],function(e,t,i,n,o){"use strict";function r(e){n.call(this,e),this.addType(o.VolumePickSensor)}return r.prototype=Object.assign(Object.create(n.prototype),{constructor:r,fieldDefinitions:new i([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"enabled",new e.SFBool(!0)),new t(o.inputOutput,"objectType",new e.MFString("ALL")),new t(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new t(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new t(o.outputOnly,"isActive",new e.SFBool),new t(o.inputOutput,"pickingGeometry",new e.SFNode),new t(o.inputOutput,"pickTarget",new e.MFNode),new t(o.outputOnly,"pickedGeometry",new e.MFNode)]),getTypeName:function(){return"VolumePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),r}),e(["x_ite/Components","x_ite/Components/Picking/LinePickSensor","x_ite/Components/Picking/PickableGroup","x_ite/Components/Picking/PointPickSensor","x_ite/Components/Picking/PrimitivePickSensor","x_ite/Components/Picking/VolumePickSensor","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Components/Picking/X3DPickableObject",t("x_ite/Browser/Networking/urls").getProviderUrl("rigid-body-physics")],function(e,t,i,n,o,r,s,c){"use strict";e.addComponent({name:"Picking",types:{LinePickSensor:t,PickableGroup:i,PointPickSensor:n,PrimitivePickSensor:o,VolumePickSensor:r},abstractTypes:{X3DPickSensorNode:s,X3DPickableObject:c}})})}();
