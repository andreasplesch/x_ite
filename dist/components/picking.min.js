!function(){var e=X3D.define;X3D.require;e("x_ite/Components/Picking/X3DPickSensorNode",["x_ite/Components/Core/X3DSensorNode","x_ite/Bits/X3DConstants"],function(e,n){"use strict";function t(t){e.call(this,t),this.addType(n.X3DPickSensorNode)}return t.prototype=Object.assign(Object.create(e.prototype),{constructor:t}),t}),e("x_ite/Components/Picking/LinePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants"],function(e,n,t,i,o){"use strict";function r(e){i.call(this,e),this.addType(o.LinePickSensor)}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,fieldDefinitions:new t([new n(o.inputOutput,"metadata",new e.SFNode),new n(o.inputOutput,"enabled",new e.SFBool(!0)),new n(o.outputOnly,"isActive",new e.SFBool),new n(o.inputOutput,"objectType",new e.MFString("ALL")),new n(o.inputOutput,"pickingGeometry",new e.SFNode),new n(o.inputOutput,"pickTarget",new e.MFNode),new n(o.outputOnly,"pickedGeometry",new e.MFNode),new n(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new n(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new n(o.outputOnly,"pickedNormal",new e.MFVec3f),new n(o.outputOnly,"pickedPoint",new e.MFVec3f),new n(o.outputOnly,"pickedTextureCoordinate",new e.MFVec3f)]),getTypeName:function(){return"LinePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),r}),e("x_ite/Components/Picking/X3DPickableObject",["x_ite/Bits/X3DConstants"],function(e){"use strict";function n(n){this.addType(e.X3DPickableObject)}return n.prototype={constructor:n,initialize:function(){}},n}),e("x_ite/Components/Picking/PickableGroup",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Grouping/X3DGroupingNode","x_ite/Components/Picking/X3DPickableObject","x_ite/Bits/X3DConstants"],function(e,n,t,i,o,r){"use strict";function c(e){i.call(this,e),o.call(this,e),this.addType(r.PickableGroup)}return c.prototype=Object.assign(Object.create(i.prototype),o.prototype,{constructor:c,fieldDefinitions:new t([new n(r.inputOutput,"metadata",new e.SFNode),new n(r.inputOutput,"pickable",new e.SFBool(!0)),new n(r.inputOutput,"objectType",new e.MFString("ALL")),new n(r.initializeOnly,"bboxSize",new e.SFVec3f(-1,-1,-1)),new n(r.initializeOnly,"bboxCenter",new e.SFVec3f),new n(r.inputOnly,"addChildren",new e.MFNode),new n(r.inputOnly,"removeChildren",new e.MFNode),new n(r.inputOutput,"children",new e.MFNode)]),getTypeName:function(){return"PickableGroup"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),c}),e("x_ite/Components/Picking/PointPickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants"],function(e,n,t,i,o){"use strict";function r(e){i.call(this,e),this.addType(o.PointPickSensor)}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,fieldDefinitions:new t([new n(o.inputOutput,"metadata",new e.SFNode),new n(o.inputOutput,"enabled",new e.SFBool(!0)),new n(o.outputOnly,"isActive",new e.SFBool),new n(o.inputOutput,"objectType",new e.MFString("ALL")),new n(o.inputOutput,"pickingGeometry",new e.SFNode),new n(o.inputOutput,"pickTarget",new e.MFNode),new n(o.outputOnly,"pickedGeometry",new e.MFNode),new n(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new n(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST")),new n(o.outputOnly,"pickedPoint",new e.MFVec3f)]),getTypeName:function(){return"PointPickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),r}),e("x_ite/Components/Picking/PrimitivePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants"],function(e,n,t,i,o){"use strict";function r(e){i.call(this,e),this.addType(o.PrimitivePickSensor)}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,fieldDefinitions:new t([new n(o.inputOutput,"metadata",new e.SFNode),new n(o.inputOutput,"enabled",new e.SFBool(!0)),new n(o.outputOnly,"isActive",new e.SFBool),new n(o.inputOutput,"objectType",new e.MFString("ALL")),new n(o.inputOutput,"pickingGeometry",new e.SFNode),new n(o.inputOutput,"pickTarget",new e.MFNode),new n(o.outputOnly,"pickedGeometry",new e.MFNode),new n(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new n(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST"))]),getTypeName:function(){return"PrimitivePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),r}),e("x_ite/Components/Picking/VolumePickSensor",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Bits/X3DConstants"],function(e,n,t,i,o){"use strict";function r(e){i.call(this,e),this.addType(o.VolumePickSensor)}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,fieldDefinitions:new t([new n(o.inputOutput,"metadata",new e.SFNode),new n(o.inputOutput,"enabled",new e.SFBool(!0)),new n(o.outputOnly,"isActive",new e.SFBool),new n(o.inputOutput,"objectType",new e.MFString("ALL")),new n(o.inputOutput,"pickingGeometry",new e.SFNode),new n(o.inputOutput,"pickTarget",new e.MFNode),new n(o.outputOnly,"pickedGeometry",new e.MFNode),new n(o.initializeOnly,"intersectionType",new e.SFString("BOUNDS")),new n(o.initializeOnly,"sortOrder",new e.SFString("CLOSEST"))]),getTypeName:function(){return"VolumePickSensor"},getComponentName:function(){return"Picking"},getContainerField:function(){return"children"}}),r}),e(["x_ite/Components","x_ite/Components/Picking/LinePickSensor","x_ite/Components/Picking/PickableGroup","x_ite/Components/Picking/PointPickSensor","x_ite/Components/Picking/PrimitivePickSensor","x_ite/Components/Picking/VolumePickSensor","x_ite/Components/Picking/X3DPickSensorNode","x_ite/Components/Picking/X3DPickableObject"],function(e,n,t,i,o,r,c,u){"use strict";e.addComponent({name:"Picking",types:{LinePickSensor:n,PickableGroup:t,PointPickSensor:i,PrimitivePickSensor:o,VolumePickSensor:r},abstractTypes:{X3DPickSensorNode:c,X3DPickableObject:u}})})}();
