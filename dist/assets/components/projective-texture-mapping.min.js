!function(){var e=X3D.define;X3D.require;e("x_ite/Components/ProjectiveTextureMapping/X3DTextureProjectorNode",["x_ite/Components/Core/X3DChildNode","x_ite/Bits/X3DConstants"],function(e,t){"use strict";function n(n){e.call(this,n),this.addType(t.X3DTextureProjectorNode)}return n.prototype=Object.assign(Object.create(e.prototype),{constructor:n,initialize:function(){e.prototype.initialize.call(this)}}),n}),e("x_ite/Components/ProjectiveTextureMapping/TextureProjectorPerspective",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ProjectiveTextureMapping/X3DTextureProjectorNode","x_ite/Bits/X3DConstants"],function(e,t,n,i,o){"use strict";function r(e){i.call(this,e),this.addType(o.TextureProjectorPerspective)}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,fieldDefinitions:new n([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"description",new e.SFString),new t(o.inputOutput,"location",new e.SFVec3f(0,0,1)),new t(o.inputOutput,"direction",new e.SFVec3f(0,0,1)),new t(o.inputOutput,"fieldOfView",new e.SFFloat(.7854)),new t(o.outputOnly,"aspectRatio",new e.SFFloat),new t(o.outputOnly,"upVector",new e.SFVec3f(0,0,1)),new t(o.inputOutput,"nearDistance",new e.SFFloat(1)),new t(o.inputOutput,"farDistance",new e.SFFloat(10)),new t(o.inputOutput,"global",new e.SFBool(!0)),new t(o.inputOutput,"on",new e.SFBool(!0)),new t(o.inputOutput,"texture",new e.SFNode)]),getTypeName:function(){return"TextureProjectorPerspective"},getComponentName:function(){return"ProjectiveTextureMapping"},getContainerField:function(){return"xxxxxxxx"},initialize:function(){i.prototype.initialize.call(this)}}),r}),e("x_ite/Components/ProjectiveTextureMapping/TextureProjectorParallel",["x_ite/Fields","x_ite/Basic/X3DFieldDefinition","x_ite/Basic/FieldDefinitionArray","x_ite/Components/ProjectiveTextureMapping/X3DTextureProjectorNode","x_ite/Bits/X3DConstants"],function(e,t,n,i,o){"use strict";function r(e){i.call(this,e),this.addType(o.TextureProjectorParallel)}return r.prototype=Object.assign(Object.create(i.prototype),{constructor:r,fieldDefinitions:new n([new t(o.inputOutput,"metadata",new e.SFNode),new t(o.inputOutput,"description",new e.SFString),new t(o.inputOutput,"location",new e.SFVec3f(0,0,1)),new t(o.inputOutput,"direction",new e.SFVec3f(0,0,1)),new t(o.outputOnly,"aspectRatio",new e.SFFloat),new t(o.inputOutput,"fieldOfView",new e.MFFloat(-1,-1,1,1)),new t(o.inputOutput,"nearDistance",new e.SFFloat(1)),new t(o.inputOutput,"farDistance",new e.SFFloat(10)),new t(o.inputOutput,"global",new e.SFBool(!0)),new t(o.inputOutput,"on",new e.SFBool(!0)),new t(o.inputOutput,"texture",new e.SFNode)]),getTypeName:function(){return"TextureProjectorParallel"},getComponentName:function(){return"ProjectiveTextureMapping"},getContainerField:function(){return"xxxxxxxx"},initialize:function(){i.prototype.initialize.call(this)}}),r}),e(["x_ite/Components","x_ite/Components/ProjectiveTextureMapping/TextureProjectorPerspective","x_ite/Components/ProjectiveTextureMapping/TextureProjectorParallel","x_ite/Components/ProjectiveTextureMapping/X3DTextureProjectorNode"],function(e,t,n,i){"use strict";e.addComponent({name:"ProjectiveTextureMapping",types:{TextureProjectorPerspective:t,TextureProjectorParallel:n},abstractTypes:{X3DTextureProjectorNode:i}})})}();
